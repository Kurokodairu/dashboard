[
  {"command": "$", "description": "Expand a Bash variable.", "example": "echo ${{VARIABLE}}"}
,
  {"command": "2to3", "description": "Automated Python 2 to 3 code conversion.", "example": "2to3 {{path/to/file.py}}"}
,
  {"command": "7za", "description": "File archiver with a high compression ratio.", "example": "7za a {{path/to/archive.7z}} {{path/to/file_or_directory}}"}
,
  {"command": "7z", "description": "File archiver with a high compression ratio.", "example": "7z a {{path/to/archive.7z}} {{path/to/file_or_directory}}"}
,
  {"command": "7zr", "description": "File archiver with a high compression ratio.", "example": "7zr a {{path/to/archive.7z}} {{path/to/file_or_directory}}"}
,
  {"command": "a2ping", "description": "Convert images into EPS or PDF files.", "example": "a2ping {{path/to/image.ext}} {{path/to/output.pdf}}"}
,
  {"command": "aapt", "description": "Android Asset Packaging Tool: compile and package an Android app's resources.", "example": "aapt list {{path/to/app.apk}}"}
,
  {"command": "abduco", "description": "Terminal session manager.", "example": "abduco"}
,
  {"command": "ab", "description": "Apache HTTP server benchmarking tool.", "example": "ab -n 100 {{url}}"}
,
  {"command": "accelerate", "description": "A library that enables the same PyTorch code to be run across any distributed configuration.", "example": "accelerate env"}
,
  {"command": "ack", "description": "A search tool like `grep`, optimized for developers.", "example": "ack \"{{search_pattern}}\""}
,
  {"command": "ac", "description": "Print statistics on how long users have been connected.", "example": "ac"}
,
  {"command": "acme.sh-dns", "description": "Use a DNS-01 challenge to issue a TLS certificate.", "example": "acme.sh --issue --dns {{gnd_gd}} --domain {{example.com}}"}
,
  {"command": "acme.sh", "description": "Shell script implementing ACME client protocol, an alternative to `certbot`.", "example": "acme.sh --issue {{[-d|--domain]}} {{example.com}} {{[-w|--webroot]}} {{/path/to/webroot}}"}
,
  {"command": "act", "description": "Execute GitHub Actions locally using Docker.", "example": "act {{[-l|--list]}}"}
,
  {"command": "acyclic", "description": "Make a directed graph acyclic by reversing some edges.", "example": "acyclic {{path/to/input.gv}} > {{path/to/output.gv}}"}
,
  {"command": "adb-connect", "description": "Connect to an Android device wirelessly.", "example": "adb pair {{ip_address}}:{{port}}"}
,
  {"command": "adb-devices", "description": "List connected Android devices.", "example": "adb devices"}
,
  {"command": "adb-disconnect", "description": "This command has been moved to `adb connect`.", "example": "tldr adb connect"}
,
  {"command": "adb-forward", "description": "Connect to an Android device wirelessly.", "example": "adb forward tcp:{{local_port}} tcp:{{remote_port}}"}
,
  {"command": "adb-install", "description": "Push packages to a connected Android device or emulator.", "example": "adb install {{path/to/file.apk}}"}
,
  {"command": "adb-logcat", "description": "Dump a log of system messages.", "example": "adb logcat"}
,
  {"command": "adb", "description": "Android Debug Bridge: communicate with an Android emulator instance or connected Android devices.", "example": "adb start-server"}
,
  {"command": "adb-pair", "description": "This command has been moved to `adb connect`.", "example": "tldr adb connect"}
,
  {"command": "adb-reboot", "description": "Reboot a connected Android device or emulator.", "example": "adb reboot"}
,
  {"command": "adb-reverse", "description": "Reverse socket connections from a connected Android device or emulator.", "example": "adb reverse --list"}
,
  {"command": "adb-shell", "description": "Run shell commands on a connected Android device or emulator.", "example": "adb shell"}
,
  {"command": "adb-uninstall", "description": "Uninstall a package.", "example": "adb uninstall {{com.example.app}}"}
,
  {"command": "adguardhome", "description": "A network-wide software for blocking ads & tracking.", "example": "AdGuardHome"}
,
  {"command": "adscript", "description": "Compiler for Adscript files.", "example": "adscript --output {{path/to/file.o}} {{path/to/input_file.adscript}}"}
,
  {"command": "afconvert", "description": "Convert between AFF and raw file formats.", "example": "afconvert -a {{extension}} {{path/to/input_file}} {{path/to/output_file1 path/to/output_file2 ...}}"}
,
  {"command": "agate", "description": "A simple server for the Gemini network protocol.", "example": "agate --content {{path/to/content/}} --addr {{[::]:1965}} --addr {{0.0.0.0:1965}} --hostname {{example.com}} --lang {{en-US}}"}
,
  {"command": "age-keygen", "description": "Generate `age` key pairs.", "example": "age-keygen {{[-o|--output]}} {{path/to/file}}"}
,
  {"command": "age", "description": "A simple, modern and secure file encryption tool.", "example": "age --passphrase --output {{path/to/encrypted_file}} {{path/to/unencrypted_file}}"}
,
  {"command": "agg", "description": "Create a GIF from an `asciinema` terminal session recording.", "example": "agg {{path/to/demo.cast}} {{path/to/demo.gif}}"}
,
  {"command": "ag", "description": "The Silver Searcher. Like `ack`, but aims to be faster.", "example": "ag foo"}
,
  {"command": "aider", "description": "Pair program with the LLM of your choice.", "example": "aider --model {{model_name}} --api-key {{your_api_key}}"}
,
  {"command": "aircrack-ng", "description": "Crack WEP and WPA/WPA2 keys from handshake in captured packets.", "example": "aircrack-ng -w {{path/to/wordlist.txt}} {{path/to/capture.cap}}"}
,
  {"command": "airdecap-ng", "description": "Decrypt a WEP, WPA, or WPA2 encrypted capture file.", "example": "airdecap-ng -b {{ap_mac}} {{path/to/capture.cap}}"}
,
  {"command": "aireplay-ng", "description": "Inject packets into a wireless network.", "example": "sudo aireplay-ng --deauth {{count}} --bssid {{ap_mac}} --dmac {{client_mac}} {{interface}}"}
,
  {"command": "airmon-ng", "description": "Activate monitor mode on wireless network devices.", "example": "sudo airmon-ng"}
,
  {"command": "airodump-ng", "description": "Capture packets and display information about wireless networks.", "example": "sudo airodump-ng {{interface}}"}
,
  {"command": "airpaste", "description": "Share messages and files on the same network using mDNS.", "example": "airpaste"}
,
  {"command": "airshare", "description": "Transfer data between two machines in a local network.", "example": "airshare {{code}} {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"}
,
  {"command": "ajson", "description": "Execute JSONPath on JSON objects.", "example": "ajson '{{$..json[?(@.path)]}}' {{path/to/file.json}}"}
,
  {"command": "alacritty", "description": "Cross-platform, GPU-accelerated terminal emulator.", "example": "alacritty"}
,
  {"command": "alex", "description": "Catch insensitive, inconsiderate writing.", "example": "echo {{His network looks good}} | alex --stdin"}
,
  {"command": "alias", "description": "Create aliases - words that are replaced by a command string.", "example": "alias"}
,
  {"command": "alr", "description": "Ada package manager.", "example": "alr init {{--bin|--lib}} {{project_name}}"}
,
  {"command": "amass-enum", "description": "Find subdomains of a domain.", "example": "amass enum -d {{domain_name}}"}
,
  {"command": "amass-intel", "description": "Collect open source intel on an organisation like root domains and ASNs.", "example": "amass intel -addr {{192.168.0.1-254}}"}
,
  {"command": "amass", "description": "In-depth Attack Surface Mapping and Asset Discovery tool.", "example": "amass {{intel|enum}} {{options}}"}
,
  {"command": "androguard", "description": "Reverse engineer Android applications. Written in Python.", "example": "androguard axml {{path/to/app.apk}}"}
,
  {"command": "ani-cli", "description": "A cli to browse and watch anime.", "example": "ani-cli \"{{anime_name}}\""}
,
  {"command": "animdl", "description": "A highly efficient, powerful and fast anime scraper.", "example": "animdl download {{anime_title}}"}
,
  {"command": "anki", "description": "Powerful, intelligent flashcard program.", "example": "anki"}
,
  {"command": "ansible-doc", "description": "Display information on modules installed in Ansible libraries.", "example": "ansible-doc {{[-l|--list]}}"}
,
  {"command": "ansible-galaxy", "description": "Perform various Ansible Role and Collection related operations.", "example": "ansible-galaxy {{role|collection}} list"}
,
  {"command": "ansible-inventory", "description": "Display or dump an Ansible inventory.", "example": "ansible-inventory --list"}
,
  {"command": "ansible-lint", "description": "Apply rules and follow best practices with your automation content.", "example": "ansible-lint {{path/to/playbook_file}} {{path/to/role_directory}}"}
,
  {"command": "ansible", "description": "Manage groups of computers remotely over SSH. (use the `/etc/ansible/hosts` file to add new groups/hosts).", "example": "ansible {{group}} --list-hosts"}
,
  {"command": "ansible-playbook", "description": "Execute tasks defined in playbook on remote machines over SSH.", "example": "ansible-playbook {{playbook}}"}
,
  {"command": "ansible-pull", "description": "Pull ansible playbooks from a VCS repo and executes them for the local host.", "example": "ansible-pull {{[-U|--url]}} {{repository_url}}"}
,
  {"command": "ansible-vault", "description": "Encrypt and decrypt values, data structures and files within Ansible projects.", "example": "ansible-vault create {{vault_file}}"}
,
  {"command": "ansiweather", "description": "Display the current weather conditions in your terminal.", "example": "ansiweather -u metric -f 7 -l {{Rzeszow,PL}}"}
,
  {"command": "antibody", "description": "\"The fastest\" shell plugin manager.", "example": "antibody bundle < {{~/.zsh_plugins.txt}} > {{~/.zsh_plugins.sh}}"}
,
  {"command": "ant", "description": "Apache Ant: build and manage Java-based projects.", "example": "ant"}
,
  {"command": "anytopnm", "description": "Convert an arbitrary type of image file to common image formats.", "example": "anytopnm {{path/to/input}} > {{path/to/output.pnm}}"}
,
  {"command": "apg", "description": "Create arbitrarily complex random passwords.", "example": "apg"}
,
  {"command": "apkeep", "description": "Download APK files from various sources.", "example": "apkeep --app {{com.example.application}} {{path/to/directory}}"}
,
  {"command": "apkleaks", "description": "Expose URIs, endpoints, and secrets from APK files.", "example": "apkleaks {{[-f|--file]}} {{path/to/file.apk}}"}
,
  {"command": "apktool", "description": "Reverse engineer APK files.", "example": "apktool d {{path/to/file.apk}}"}
,
  {"command": "apm", "description": "Atom editor Package Manager.", "example": "apm install {{package}}"}
,
  {"command": "apropos", "description": "Search the manual pages for names and descriptions.", "example": "apropos {{regular_expression}}"}
,
  {"command": "arch", "description": "Display the name of the system architecture.", "example": "arch"}
,
  {"command": "archwiki-rs", "description": "Read, search and download pages from the ArchWiki.", "example": "archwiki-rs read-page {{page_title}}"}
,
  {"command": "arc", "description": "Arcanist: a CLI for Phabricator.", "example": "arc diff"}
,
  {"command": "arduino-builder", "description": "Compile arduino sketches.", "example": "arduino-builder -compile {{path/to/sketch.ino}}"}
,
  {"command": "arduino", "description": "Arduino Studio - Integrated Development Environment for the Arduino platform.", "example": "arduino --verify {{path/to/file.ino}}"}
,
  {"command": "argocd-app", "description": "Interface to manage applications by Argo CD.", "example": "argocd app list --output {{json|yaml|wide}}"}
,
  {"command": "argocd", "description": "Interface to control an Argo CD server.", "example": "argocd login --insecure --username {{user}} --password {{password}} {{argocd_server:port}}"}
,
  {"command": "argon2", "description": "Calculate Argon2 cryptographic hashes.", "example": "echo \"{{password}}\" | argon2 \"{{salt_text}}\""}
,
  {"command": "argos-translate", "description": "An open-source offline translation library and CLI tool written in Python.", "example": "argospm install translate-es_en"}
,
  {"command": "aria2c", "description": "Fast download utility.", "example": "aria2c \"{{url}}\""}
,
  {"command": "aria2", "description": "This command is an alias of `aria2c`.", "example": "tldr aria2c"}
,
  {"command": "ar", "description": "Create, modify, and extract from Unix archives. Typically used for static libraries (`.a`) and Debian packages (`.deb`).", "example": "ar x {{path/to/file.a}}"}
,
  {"command": "arping", "description": "Discover and probe hosts in a network using the ARP protocol.", "example": "arping {{host_ip}}"}
,
  {"command": "arp", "description": "Show and manipulate your system's ARP cache.", "example": "arp -a"}
,
  {"command": "arp-scan", "description": "Send ARP packets to hosts (specified as IP addresses or hostnames) to scan the local network.", "example": "arp-scan {{[-l|--localnet]}}"}
,
  {"command": "arthas", "description": "Java diagnostic tool.", "example": "java -jar {{path/to/arthas-boot.jar}}"}
,
  {"command": "arthas-trace", "description": "Trace method invoke chain, and output the time cost for each node in the path.", "example": "trace {{class-pattern}} {{method-pattern}}"}
,
  {"command": "arthas-watch", "description": "Method invoke data observation.", "example": "watch {{class-pattern}} {{method-pattern}} {{'{ params[0],returnObj }'}} -x 4"}
,
  {"command": "asar", "description": "A file archiver for the Electron platform.", "example": "asar pack {{path/to/input_file_or_directory}} {{path/to/output_archive.asar}}"}
,
  {"command": "asciidoctor", "description": "Convert AsciiDoc files to a publishable format.", "example": "asciidoctor {{path/to/file.adoc}}"}
,
  {"command": "ascii-image-converter", "description": "Convert an image into ASCII.", "example": "ascii-image-converter {{path/to/image|URL}}"}
,
  {"command": "asciinema", "description": "Record and replay terminal sessions, and optionally share them on <https://asciinema.org>.", "example": "asciinema auth"}
,
  {"command": "asciitopgm", "description": "Convert ASCII graphics into a PGM file.", "example": "asciitopgm {{path/to/input_file}} > {{path/to/output_file.pgm}}"}
,
  {"command": "asdf", "description": "Manage versions of different packages.", "example": "asdf plugin list all"}
,
  {"command": "asnmap", "description": "A Go CLI tool for mapping organization network ranges using ASN information.", "example": "asnmap {{[-a|-asn]}} {{AS5650}} -silent"}
,
  {"command": "aspell", "description": "Interactive spell checker.", "example": "aspell check {{path/to/file}}"}
,
  {"command": "assimp", "description": "Client for the Open Asset Import Library.", "example": "assimp listext"}
,
  {"command": "astronomer", "description": "Detect illegitimate stars from bot accounts on GitHub projects.", "example": "astronomer {{tldr-pages/tldr-node-client}}"}
,
  {"command": "astyle", "description": "Source code indenter, formatter, and beautifier for the C, C++, C# and Java programming languages.", "example": "astyle {{source_file}}"}
,
  {"command": "atktopbm", "description": "Convert a Andrew Toolkit raster object to a PBM image.", "example": "atktopbm {{path/to/image.atk}} > {{path/to/output.pbm}}"}
,
  {"command": "at", "description": "Execute commands once at a later time.", "example": "at now + 5 minutes"}
,
  {"command": "atom", "description": "A cross-platform pluggable text editor.", "example": "atom {{path/to/file_or_directory}}"}
,
  {"command": "atool", "description": "A script for managing file archives of various types.", "example": "atool {{[-l|--list]}} {{path/to/archive.zip}}"}
,
  {"command": "atoum", "description": "A simple, modern and intuitive unit testing framework for PHP.", "example": "atoum --init"}
,
  {"command": "atq", "description": "Show jobs scheduled by `at` or `batch` commands.", "example": "atq"}
,
  {"command": "atrm", "description": "Remove jobs scheduled by `at` or `batch` commands.", "example": "atrm {{10}}"}
,
  {"command": "atuin", "description": "Store your shell history in a searchable database.", "example": "eval \"$(atuin init {{bash|zsh|fish}})\""}
,
  {"command": "audacious", "description": "An open-source audio player. Indirectly based on XMMS.", "example": "audacious"}
,
  {"command": "auditd", "description": "This responds to requests from the audit utility and notifications from the kernel.", "example": "auditd"}
,
  {"command": "audtool", "description": "Control Audacious using commands.", "example": "audtool playback-playpause"}
,
  {"command": "autoconf", "description": "Generate configuration scripts to automatically configure software source code packages.", "example": "autoconf"}
,
  {"command": "autoflake", "description": "Remove unused imports and variables from Python code.", "example": "autoflake --remove-unused-variables {{path/to/file.py}}"}
,
  {"command": "autojump", "description": "Quickly jump among the directories you visit the most.", "example": "source /usr/share/autojump/autojump.{{bash|fish|zsh}}"}
,
  {"command": "autopep8", "description": "Format Python code according to the PEP 8 style guide.", "example": "autopep8 {{path/to/file.py}} --max-line-length {{length}}"}
,
  {"command": "autossh", "description": "Run, monitor and restart SSH connections.", "example": "autossh -M {{monitor_port}} \"{{ssh_command}}\""}
,
  {"command": "avo", "description": "The official interface for Avo.", "example": "avo init"}
,
  {"command": "avrdude", "description": "Driver program for Atmel AVR microcontrollers programming.", "example": "avrdude -p {{part_no}} -c {{programmer_id}} -U flash:r:{{file.hex}}:i"}
,
  {"command": "awk", "description": "A versatile programming language for working on files.", "example": "awk '{print $5}' {{path/to/file}}"}
,
  {"command": "aws-accessanalyzer", "description": "Analyze and review resource policies to identify potential security risks.", "example": "aws accessanalyzer create-analyzer --analyzer-name {{analyzer_name}} --type {{type}} --tags {{tags}}"}
,
  {"command": "aws-acm", "description": "AWS Certificate Manager.", "example": "aws acm import-certificate --certificate-arn {{certificate_arn}} --certificate {{certificate}} --private-key {{private_key}} --certificate-chain {{certificate_chain}}"}
,
  {"command": "aws-acm-pca", "description": "AWS Certificate Manager Private Certificate Authority.", "example": "aws acm-pca create-certificate-authority --certificate-authority-configuration {{ca_config}} --idempotency-token {{token}} --permanent-deletion-time-in-days {{number}}"}
,
  {"command": "aws-amplify", "description": "Development platform for building secure, scalable mobile and web applications.", "example": "aws amplify create-app --name {{app_name}} --description {{description}} --repository {{repo_url}} --platform {{platform}} --environment-variables {{env_vars}} --tags {{tags}}"}
,
  {"command": "aws-backup", "description": "Unified backup service designed to protect Amazon Web Services services and their associated data.", "example": "aws backup get-backup-plan --backup-plan-id {{id}}"}
,
  {"command": "aws-batch", "description": "Run batch computing workloads through the AWS Batch service.", "example": "aws batch list-jobs --job-queue {{queue_name}}"}
,
  {"command": "aws-ce", "description": "Run cost management operations through the AWS Cost Explorer service.", "example": "aws ce create-anomaly-monitor --monitor {{monitor_name}} --monitor-type {{monitor_type}}"}
,
  {"command": "aws-cloud9", "description": "Manage Cloud9 - a collection of tools to code, build, run, test, debug, and release software in the cloud.", "example": "aws cloud9 list-environments"}
,
  {"command": "aws-cloudformation", "description": "Model, provision, and manage AWS and third-party resources by treating infrastructure as code.", "example": "aws cloudformation create-stack --stack-name {{stack-name}} --region {{region}} --template-body {{file://path/to/file.yml}} --profile {{profile}}"}
,
  {"command": "aws-cloudwatch", "description": "Monitor AWS resources to gain system-wide visibility into resource utilization, application performance, and operational health.", "example": "aws cloudwatch list-dashboards"}
,
  {"command": "aws-codeartifact", "description": "Manage CodeArtifact repositories, domains, packages, package versions and assets.", "example": "aws codeartifact list-domains"}
,
  {"command": "aws-codecommit", "description": "A managed source control service that hosts private Git repositories.", "example": "aws codecommit help"}
,
  {"command": "aws-cognito-idp", "description": "Configure an Amazon Cognito user pool and its users and groups and authenticate them.", "example": "aws cognito-idp create-user-pool --pool-name {{name}}"}
,
  {"command": "aws-configure", "description": "Manage configuration for the AWS CLI.", "example": "aws configure"}
,
  {"command": "aws-cur", "description": "Create, query, and delete AWS usage report definitions.", "example": "aws cur put-report-definition --report-definition file://{{path/to/report_definition.json}}"}
,
  {"command": "aws-dynamodb", "description": "Manipulate an AWS Dynamodb database, a fast NoSQL database with predictable performance and seamless scalability.", "example": "aws dynamodb create-table --table-name {{table_name}} --attribute-definitions {{AttributeName=S,AttributeType=S}} --key-schema {{AttributeName=S,KeyType=HASH}} --provisioned-throughput {{ReadCapacityUnits=5,WriteCapacityUnits=5}}"}
,
  {"command": "aws-ec2", "description": "Manage AWS EC2 instances and volumes.", "example": "aws ec2 describe-instances --instance-ids {{instance_id}}"}
,
  {"command": "aws-ecr", "description": "Push, pull, and manage container images.", "example": "aws ecr get-login-password --region {{region}} | {{docker login}} --username AWS --password-stdin {{aws_account_id}}.dkr.ecr.{{region}}.amazonaws.com"}
,
  {"command": "aws-eks", "description": "Manage Amazon Elastic Kubernetes Service (EKS) addons, clusters, and node groups.", "example": "aws eks create-cluster --name {{cluster_name}} --role-arn {{eks_service_role_arn}} --resources-vpc-config {{subnetIds={{subnet_ids}},securityGroupIds={{security_group_ids}}}}"}
,
  {"command": "aws-glue", "description": "CLI for AWS Glue.", "example": "aws glue list-jobs"}
,
  {"command": "aws-google-auth", "description": "Acquire AWS temporary (STS) credentials using Google Apps as a federated (Single Sign-On) provider.", "example": "aws-google-auth {{[-u|--username]}} {{example@example.com}} {{[-I|--idp-id]}} {{$GOOGLE_IDP_ID}} {{[-S|--sp-id]}} {{$GOOGLE_SP_ID}} {{[-d|--duration]}} {{3600}}"}
,
  {"command": "aws-help", "description": "Display help information about the AWS CLI.", "example": "aws help"}
,
  {"command": "aws-history", "description": "Print the command-line history for AWS CLI commands (the record of history of AWS CLI commands must be enabled).", "example": "aws history list"}
,
  {"command": "aws-iam", "description": "Interact with Identity and Access Management (IAM), a web service for securely controlling access to AWS services.", "example": "aws iam list-users"}
,
  {"command": "aws-kafka", "description": "Manage an Amazon MSK (Managed Streaming for Apache Kafka) cluster.", "example": "aws kafka create-cluster --cluster-name {{cluster_name}} --broker-node-group-info instanceType={{instance_type}},clientSubnets={{subnet_id1 subnet_id2 ...}} --kafka-version {{version}} --number-of-broker-nodes {{number}}"}
,
  {"command": "aws-kendra", "description": "CLI for AWS Kendra.", "example": "aws kendra create-index --name {{name}} --role-arn {{role_arn}}"}
,
  {"command": "aws-kinesis", "description": "Interact with the Amazon Kinesis Data Streams, a service that scales elastically for real-time processing of streaming big data.", "example": "aws kinesis list-streams"}
,
  {"command": "aws-lambda", "description": "Use AWS Lambda, a compute service for running code without provisioning or managing servers.", "example": "aws lambda invoke --function-name {{name}} {{path/to/response.json}}"}
,
  {"command": "aws-lightsail", "description": "Manage Amazon Lightsail resources.", "example": "aws lightsail get-instances"}
,
  {"command": "awslogs", "description": "Queries groups, streams and events from Amazon CloudWatch logs.", "example": "awslogs groups"}
,
  {"command": "aws", "description": "The official CLI tool for Amazon Web Services.", "example": "aws configure wizard"}
,
  {"command": "aws-pricing", "description": "Query services, products, and pricing information from Amazon Web Services.", "example": "aws pricing describe-services --region {{us-east-1}}"}
,
  {"command": "aws-quicksight", "description": "Create, delete, list, search and update AWS QuickSight entities.", "example": "aws quicksight list-data-sets --aws-account-id {{aws_account_id}}"}
,
  {"command": "aws-rds", "description": "Use AWS Relational Database Service, a web service for setting up, operating and scaling relational databases.", "example": "aws rds {{subcommand}} help"}
,
  {"command": "aws-route53", "description": "CLI for AWS Route53 - Route 53 is a highly available and scalable Domain Name System (DNS) web service.", "example": "aws route53 list-hosted-zones"}
,
  {"command": "aws-s3api", "description": "Create and delete Amazon S3 buckets and edit bucket properties.", "example": "aws s3api create-bucket --bucket {{bucket_name}} --region {{region}} --create-bucket-configuration LocationConstraint={{region}}"}
,
  {"command": "aws-s3-cp", "description": "Copy local files or S3 objects to another location locally or in S3.", "example": "aws s3 cp {{path/to/file}} s3://{{bucket_name}}/{{path/to/remote_file}}"}
,
  {"command": "aws-s3-ls", "description": "List AWS S3 buckets, folders (prefixes), and files (objects).", "example": "aws s3 ls"}
,
  {"command": "aws-s3-mb", "description": "Create S3 buckets.", "example": "aws s3 mb s3://{{bucket_name}}"}
,
  {"command": "aws-s3", "description": "CLI for AWS S3 - provides storage through web services interfaces.", "example": "aws s3 ls {{bucket_name}}"}
,
  {"command": "aws-s3-mv", "description": "Move local files or S3 objects to another location locally or in S3.", "example": "aws s3 mv {{path/to/local_file}} s3://{{bucket_name}}/{{path/to/remote_file}}"}
,
  {"command": "aws-s3-presign", "description": "Generate pre-signed URLs for Amazon S3 objects.", "example": "aws s3 presign s3://{{bucket_name}}/{{path/to/file}}"}
,
  {"command": "aws-s3-rb", "description": "Delete an empty S3 bucket.", "example": "aws s3 rb s3://{{bucket_name}}"}
,
  {"command": "aws-s3-rm", "description": "Delete S3 objects.", "example": "aws s3 rm s3://{{bucket_name}}/{{path/to/file}}"}
,
  {"command": "aws-s3-sync", "description": "Recursively sync files and directories between your local system and an S3 bucket, or between S3 buckets.", "example": "aws s3 sync {{path/to/file_or_directory}} s3://{{bucket_target_name}}/{{path/to/remote_location}}"}
,
  {"command": "aws-s3-website", "description": "Set the website configuration for a bucket.", "example": "aws s3 website {{s3://bucket-name}} --index-document {{index.html}}"}
,
  {"command": "aws-secretsmanager", "description": "Store, manage, and retrieve secrets.", "example": "aws secretsmanager list-secrets"}
,
  {"command": "aws-ses", "description": "CLI for AWS Simple Email Service.", "example": "aws ses create-receipt-rule-set --rule-set-name {{rule_set_name}} --generate-cli-skeleton"}
,
  {"command": "aws-sns", "description": "Create topics and subscriptions, send and receive messages, and monitor events and logs for the Amazon Simple Notification Service.", "example": "aws sns list-{{origination-numbers|phone-numbers-opted-out|platform-applications|sms-sandbox-phone-numbers|subscriptions|topics}}"}
,
  {"command": "aws-sqs", "description": "Create, delete, and send messages to queues for the AWS SQS service.", "example": "aws sqs list-queues"}
,
  {"command": "aws-sso", "description": "Manage access to AWS resources using Single Sign-On (SSO) credentials.", "example": "aws sso login"}
,
  {"command": "aws-sts", "description": "Security Token Service (STS) allows to request temporary credentials for (IAM) users or federated users.", "example": "aws sts assume-role --role-arn {{aws_role_arn}}"}
,
  {"command": "aws-vault", "description": "A vault for securely storing and accessing AWS credentials in development environments.", "example": "aws-vault add {{profile}}"}
,
  {"command": "aws-workmail", "description": "Manage Amazon WorkMail.", "example": "aws workmail list-organizations"}
,
  {"command": "axel", "description": "Download accelerator.", "example": "axel {{url}}"}
,
  {"command": "az-account", "description": "Manage Azure subscription information.", "example": "az account list"}
,
  {"command": "az-acr", "description": "Manage private registries with Azure Container Registries.", "example": "az acr create {{[-n|--name]}} {{registry_name}} {{[-g|--resource-group]}} {{resource_group}} --sku {{sku}}"}
,
  {"command": "az-advisor", "description": "Manage Azure subscription information.", "example": "az advisor configuration list"}
,
  {"command": "az-aks", "description": "Manage Azure Kubernetes Service (AKS) clusters.", "example": "az aks list {{[-g|--resource-group]}} {{resource_group}}"}
,
  {"command": "az-apim", "description": "Manage Azure API Management services.", "example": "az apim list {{[-g|--resource-group]}} {{resource_group}}"}
,
  {"command": "az-appconfig", "description": "Manage App configurations on Azure.", "example": "az appconfig create {{[-n|--name]}} {{name}} {{[-g|--resource-group]}} {{group_name}} {{[-l|--location]}} {{location}}"}
,
  {"command": "az-bicep", "description": "Bicep CLI command group.", "example": "az bicep install"}
,
  {"command": "az-config", "description": "Manage Azure CLI configuration.", "example": "az config get"}
,
  {"command": "az-devops", "description": "Manage Azure DevOps organizations.", "example": "az devops login {{[--org|--organization]}} {{organization_url}}"}
,
  {"command": "az-disk", "description": "Manage Azure Managed Disks.", "example": "az disk create {{[-g|--resource-group]}} {{resource_group}} {{[-n|--name]}} {{disk_name}} {{[-z|--size-gb]}}{{size_in_gb}}"}
,
  {"command": "az-feedback", "description": "Send feedback to the Azure CLI Team.", "example": "az feedback"}
,
  {"command": "az-group", "description": "Manage resource groups and template deployments.", "example": "az group create {{[-n|--name]}} {{name}} {{[-l|--location]}} {{location}}"}
,
  {"command": "az-image", "description": "Manage custom Virtual Machine Images in Azure.", "example": "az image list {{[-g|--resource-group]}} {{resource_group}}"}
,
  {"command": "az-lock", "description": "Manage Azure locks.", "example": "az lock create {{[-n|--name]}} {{lock_name}} {{[-t|--lock-type]}} ReadOnly"}
,
  {"command": "az-logicapp", "description": "Manage Logic Apps in Azure Cloud Services.", "example": "az logicapp create {{[-n|--name]}} {{name}} {{[-g|--resource-group]}} {{resource_group}} {{[-s|--storage-account]}} {{storage_account}}"}
,
  {"command": "az-login", "description": "Log in to Azure.", "example": "az login"}
,
  {"command": "az-logout", "description": "Log out from an Azure subscription.", "example": "az logout"}
,
  {"command": "az", "description": "The official CLI tool for Microsoft Azure.", "example": "az login"}
,
  {"command": "az-network", "description": "Manage Azure Network resources.", "example": "az network list-usages"}
,
  {"command": "az-pipelines", "description": "Manage Azure Pipelines resources.", "example": "az pipelines create {{[--org|--organization]}} {{organization_url}} {{[-p|--project]}} {{project_name}} --name {{pipeline_name}} --description {{description}} --repository {{repository_name}} --branch {{branch_name}}"}
,
  {"command": "az-provider", "description": "Manage resource providers.", "example": "az provider register {{[-n|--namespace]}} {{Microsoft.PolicyInsights}}"}
,
  {"command": "az-quantum", "description": "Manage Azure Quantum workspaces and submit quantum jobs to providers (preview, requires quantum extension).", "example": "az quantum workspace create {{[-g|--resource-group]}} {{ResourceGroup}} {{[-l|--location]}} {{Location}} {{[-w|--workspace-name]}} {{Workspace}} {{[-a|--storage-account]}} {{MyStorageAccountName}}"}
,
  {"command": "az-redis", "description": "Manage Redis caches.", "example": "az redis create --location {{location}} {{[-n|--name]}} {{name}} {{[-g|--resource-group]}} {{resource_group}} --sku {{Basic|Premium|Standard}} --vm-size {{c0|c1|c2|c3|c4|c5|c6|p1|p2|p3|p4|p5}}"}
,
  {"command": "az-repos", "description": "Manage Azure DevOps repos.", "example": "az repos list {{[-p|--project]}} {{project_name}}"}
,
  {"command": "az-serial-console", "description": "Connect to the serial console of a Virtual Machine.", "example": "az serial-console connect {{[-g|--resource-group]}} {{Resource_Group_Name}} {{[-n|--name]}} {{Virtual_Machine_Name}}"}
,
  {"command": "az-sshkey", "description": "Manage SSH public keys with virtual machines.", "example": "az sshkey create --name {{name}} {{[-g|--resource-group]}} {{resource_group}}"}
,
  {"command": "az-storage-account", "description": "Manage storage accounts in Azure.", "example": "az storage account create {{[-n|--name]}} {{storage_account_name}} {{[-g|--resource-group]}} {{azure_resource_group}} --location {{azure_location}} --sku {{storage_account_sku}}"}
,
  {"command": "az-storage-blob", "description": "Manage blob storage containers and objects in Azure.", "example": "az storage blob download --account-name {{storage_account_name}} --account-key {{storage_account_key}} {{[-c|--container-name]}} {{container_name}} {{[-n|--name]}} {{path/to/blob}} {{[-f|--file]}} {{path/to/local_file}}"}
,
  {"command": "az-storage-container", "description": "Manage blob storage containers in Azure.", "example": "az storage container create --account-name {{storage_account_name}} {{[-n|--name]}} {{container_name}} --public-access {{access_level}} --fail-on-exist"}
,
  {"command": "az-storage-entity", "description": "Manage Azure Table storage entities.", "example": "az storage entity insert {{[-e|--entity]}} {{space_separated_key_value_pairs}} {{[-t|--table-name]}} {{table_name}} --account-name {{storage_account_name}} --account-key {{storage_account_key}}"}
,
  {"command": "az-storage", "description": "Manage Azure Cloud Storage resources.", "example": "az storage account create {{[-g|--resource-group]}} {{group_name}} {{[-n|--name]}} {{account_name}} {{[-l|--location]}} {{location}} --sku {{account_sku}}"}
,
  {"command": "az-storage-queue", "description": "Manage storage queues in Azure.", "example": "az storage queue create --account-name {{storage_account_name}} {{[-n|--name]}} {{queue_name}} --metadata {{queue_metadata}}"}
,
  {"command": "az-storage-table", "description": "Manage NoSQL key-value storage in Azure.", "example": "az storage table create --account-name {{storage_account_name}} {{[-n|--name]}} {{table_name}} --fail-on-exist"}
,
  {"command": "az-tag", "description": "Manage tags on a resource.", "example": "az tag add-value {{[-n|--name]}} {{tag_name}} --value {{tag_value}}"}
,
  {"command": "az-term", "description": "Manage marketplace agreement with marketplaceordering.", "example": "az term show --product \"{{product_identifier}}\" --plan \"{{plan_identifier}}\" --publisher \"{{publisher_identifier}}\""}
,
  {"command": "az-upgrade", "description": "Upgrade Azure CLI and Extensions.", "example": "az upgrade"}
,
  {"command": "azure-cli", "description": "This command is an alias of `az`.", "example": "tldr az"}
,
  {"command": "azurite", "description": "Azure Storage API compatible server (emulator) in local environment.", "example": "azurite {{[-l|--location]}} {{path/to/directory}}"}
,
  {"command": "az-version", "description": "Shows the current version of Azure CLI modules and extensions.", "example": "az version"}
,
  {"command": "az-vm", "description": "Manage virtual machines in Azure.", "example": "az vm list --output table"}
,
  {"command": "az-webapp", "description": "Manage Web Applications hosted in Azure Cloud Services.", "example": "az webapp list-runtimes {{[-os|--os-type]}} {{windows|linux}}"}
,
  {"command": "b2sum", "description": "Calculate BLAKE2 cryptographic checksums.", "example": "b2sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "b2-tools", "description": "Access all features of Backblaze B2 Cloud Storage easily.", "example": "b2 authorize_account {{key_id}}"}
,
  {"command": "b3sum", "description": "Calculate BLAKE3 cryptographic checksums.", "example": "b3sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "babeld", "description": "Routing daemon for Babel which uses firewall-style filters.", "example": "babeld -c {{path/to/ports.conf}} -c {{path/to/filters.conf}} -c {{path/to/interfaces.conf}}"}
,
  {"command": "babel", "description": "A transpiler which converts code from JavaScript ES6/ES7 syntax to ES5 syntax.", "example": "babel {{path/to/file}}"}
,
  {"command": "bacon", "description": "A background code checker for Rust.", "example": "bacon"}
,
  {"command": "badblocks", "description": "Search a device for bad blocks.", "example": "sudo badblocks {{/dev/sdX}}"}
,
  {"command": "balena", "description": "Interact with the balenaCloud, openBalena and the balena API.", "example": "balena login"}
,
  {"command": "bandwhich", "description": "Display the current network utilization by process, connection or remote IP/hostname.", "example": "bandwhich {{[-a|--addresses]}}"}
,
  {"command": "banner", "description": "Print the argument as a large ASCII art.", "example": "banner \"{{Hello World}}\""}
,
  {"command": "base32", "description": "Encode or decode file or `stdin` to/from Base32, to `stdout`.", "example": "base32 {{path/to/file}}"}
,
  {"command": "base64", "description": "Encode or decode file or `stdin` to/from base64, to `stdout`.", "example": "base64 {{path/to/file}}"}
,
  {"command": "basename", "description": "Remove leading directory portions from a path.", "example": "basename {{path/to/file}}"}
,
  {"command": "basenc", "description": "Encode or decode file or `stdin` using a specified encoding, to `stdout`.", "example": "basenc --base64 {{path/to/file}}"}
,
  {"command": "bash-it", "description": "A collection of community contributed Bash commands and scripts for Bash 3.2+.", "example": "bash-it update {{stable|dev}}"}
,
  {"command": "bashmarks", "description": "Save and jump to commonly used directories using 1 character commands.", "example": "source /usr/share/bashmarks/bashmarks.sh"}
,
  {"command": "bash", "description": "Bourne-Again SHell, an `sh`-compatible command-line interpreter.", "example": "bash"}
,
  {"command": "bastet", "description": "Clone of the game Tetris in the terminal.", "example": "bastet"}
,
  {"command": "batch", "description": "Execute commands at a later time when the system load levels permit.", "example": "batch"}
,
  {"command": "bat", "description": "Print and concatenate files.", "example": "bat {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "bats", "description": "Bash Automated Testing System: a TAP (<https://testanything.org/>) compliant testing framework for Bash.", "example": "bats {{[-t|--tap]}} {{path/to/test.bats}}"}
,
  {"command": "bazel", "description": "Open-source build and test tool similar to Make, Maven, and Gradle.", "example": "bazel build {{target}}"}
,
  {"command": "bb", "description": "Native Clojure interpreter for scripting.", "example": "bb {{[-e|--eval]}} \"(+ 1 2 3)\""}
,
  {"command": "bc", "description": "An arbitrary precision calculator language.", "example": "bc"}
,
  {"command": "bcomps", "description": "Decompose graphs into their biconnected components.", "example": "bcomps {{path/to/input1.gv path/to/input2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "bdfr", "description": "Bulk downloader for Reddit.", "example": "bdfr download {{path/to/output_directory}} {{[-l|--link]}} {{post_url}}"}
,
  {"command": "beanstalkd", "description": "A simple and generic work-queue server.", "example": "beanstalkd"}
,
  {"command": "bear", "description": "A tool to generate compilation databases for `clang` tooling.", "example": "bear -- {{make}}"}
,
  {"command": "bedtools", "description": "A swiss-army knife of tools for genomic-analysis tasks.", "example": "bedtools intersect -a {{path/to/file_A}} -b {{path/to/file_B1 path/to/file_B2 ...}} -s > {{path/to/output_file}}"}
,
  {"command": "behat", "description": "A PHP framework for Behaviour-Driven Development.", "example": "behat --init"}
,
  {"command": "berks", "description": "Chef cookbook dependency manager.", "example": "berks install"}
,
  {"command": "betty", "description": "Use natural language to execute commands.", "example": "betty {{what time is it}}"}
,
  {"command": "bfg", "description": "Remove large files or passwords from Git history like git-filter-branch.", "example": "bfg --delete-files {{file_with_sensitive_data}}"}
,
  {"command": "bfs", "description": "Breadth-first search for your files.", "example": "bfs {{root_path}} -name '{{*.ext}}'"}
,
  {"command": "bg", "description": "Resume suspended jobs (e.g. using `<Ctrl z>`), and keeps them running in the background.", "example": "bg"}
,
  {"command": "bgpgrep", "description": "Filter and print BGP data within MRT dumps.", "example": "bgpgrep {{master6.mrt}}"}
,
  {"command": "biff", "description": "A simple utility for doing datetime arithmetic, parsing and formatting.", "example": "biff time fmt {{[-f|--format]}} rfc3339 now"}
,
  {"command": "bindkey", "description": "Add keybindings to Z-Shell.", "example": "bindkey \"{{^k}}\" {{kill-line}}"}
,
  {"command": "bind", "description": "Bash builtin to manage bash hotkeys and variables.", "example": "bind {{-p|-P}}"}
,
  {"command": "bing-rewards", "description": "Automate daily Bing Rewards points.", "example": "bing-rewards"}
,
  {"command": "binwalk", "description": "Firmware Analysis Tool.", "example": "binwalk {{path/to/binary}}"}
,
  {"command": "bioradtopgm", "description": "Convert a Biorad confocal file into a PGM file.", "example": "bioradtopgm -{{n}} {{path/to/file.pic}} > {{path/to/file.pgm}}"}
,
  {"command": "birdc", "description": "BIRD remote control.", "example": "birdc"}
,
  {"command": "bird", "description": "BIRD Internet Routing Daemon.", "example": "bird -c {{path/to/bird.conf}}"}
,
  {"command": "bison", "description": "GNU parser generator.", "example": "bison {{path/to/file.y}}"}
,
  {"command": "bitcoin-cli", "description": "Client to interact with the Bitcoin Core daemon via RPC calls.", "example": "bitcoin-cli sendtoaddress \"{{address}}\" {{amount}}"}
,
  {"command": "bitcoind", "description": "Bitcoin Core daemon.", "example": "bitcoind"}
,
  {"command": "blackfire", "description": "Monitor, profile and test a PHP application.", "example": "blackfire config"}
,
  {"command": "black", "description": "Format Python code automatically.", "example": "black {{path/to/file_or_directory}}"}
,
  {"command": "blahaj", "description": "A lolcat-like output colorizer that also prints flags and colorful sharks.", "example": "blahaj --flags"}
,
  {"command": "blender", "description": "Command-line interface to the Blender 3D computer graphics application.", "example": "blender {{[-b|--background]}} {{path/to/file.blend}} {{[-a|--render-anim]}}"}
,
  {"command": "blockout2", "description": "Tetris like game in 3D.", "example": "blockout2"}
,
  {"command": "bloodhound-python", "description": "A Python ingestor for BloodHound, used to enumerate Active Directory relationships.", "example": "bloodhound-python --username {{username}} --password {{password}} --domain {{domain}}"}
,
  {"command": "bmaptool", "description": "Create or copy block maps intelligently (designed to be faster than `cp` or `dd`).", "example": "bmaptool create {{[-o|--output]}} {{blockmap.bmap}} {{source.img}}"}
,
  {"command": "bmptopnm", "description": "Convert a BMP file into a PBM, PGM, or PNM image.", "example": "bmptopnm {{path/to/file.bmp}}"}
,
  {"command": "bmptoppm", "description": "This command has been superseded by `bmptopnm`.", "example": "tldr bmptopnm"}
,
  {"command": "bob", "description": "Manage and switch between Neovim versions.", "example": "bob use {{nightly|stable|latest|version_string|commit_hash}}"}
,
  {"command": "boot", "description": "Build tooling for the Clojure programming language.", "example": "boot repl"}
,
  {"command": "borg", "description": "Deduplicating backup tool.", "example": "borg init {{path/to/repo_directory}}"}
,
  {"command": "bosh", "description": "Deploy and manage the BOSH director.", "example": "bosh alias-env {{environment_name}} {{[-e|--environment]}} {{ip_address|URL}} --ca-cert {{ca_certificate}}"}
,
  {"command": "bower", "description": "A package manager optimized for front-end web development.", "example": "bower install"}
,
  {"command": "boxes", "description": "Draw, remove, and repair ASCII art boxes.", "example": "echo \"{{string}}\" | boxes"}
,
  {"command": "box", "description": "A PHP application for building and managing Phars.", "example": "box compile"}
,
  {"command": "boxxy", "description": "Redirect file locations for programs that don't respect the XDG standards.", "example": "boxxy {{program}}"}
,
  {"command": "bpkg", "description": "A package manager for Bash scripts.", "example": "bpkg update"}
,
  {"command": "bpython", "description": "A fancy interface to the Python interpreter.", "example": "bpython"}
,
  {"command": "bpytop", "description": "A resource monitor that shows information about the CPU, memory, disks, network and processes.", "example": "bpytop"}
,
  {"command": "bq", "description": "A Python-based tool for BigQuery, Google Cloud's fully managed and completely serverless enterprise data warehouse.", "example": "bq query --nouse_legacy_sql 'SELECT COUNT(*) FROM {{DATASET_NAME}}.{{TABLE_NAME}}'"}
,
  {"command": "brave", "description": "This command is an alias of `chromium`.", "example": "tldr chromium"}
,
  {"command": "break", "description": "Break out of a `for`, `while`, `until` or `select` loop.", "example": "while :; do break; done"}
,
  {"command": "brew-autoremove", "description": "Remove unused formulae previously installed as dependencies.", "example": "brew autoremove"}
,
  {"command": "brew-bundle", "description": "Bundler for Homebrew, Homebrew Cask and the Mac App Store.", "example": "brew bundle"}
,
  {"command": "brew-install", "description": "Install a Homebrew formula or cask.", "example": "brew install {{formula|cask}}"}
,
  {"command": "brew-list", "description": "List installed formulae/casks or their files.", "example": "brew list"}
,
  {"command": "brew", "description": "Homebrew - a package manager for macOS and Linux.", "example": "brew install {{formula}}"}
,
  {"command": "brew-outdated", "description": "List outdated casks and formulae.", "example": "brew outdated"}
,
  {"command": "brew-search", "description": "Search for casks and formulae.", "example": "brew search {{keyword}}"}
,
  {"command": "brew-services", "description": "Manage background services with `launchctl` on macOS or `systemctl` on Linux.", "example": "brew services"}
,
  {"command": "brew-uninstall", "description": "Uninstall a Homebrew formula/cask.", "example": "brew uninstall {{formula|cask}}"}
,
  {"command": "brew-update", "description": "Fetch the newest version of Homebrew and all formulae from GitHub using `git` and perform any necessary migrations.", "example": "brew update"}
,
  {"command": "brew-upgrade", "description": "Upgrade outdated formulae and casks.", "example": "brew upgrade"}
,
  {"command": "brittany", "description": "Pretty-print Haskell source files.", "example": "brittany {{path/to/file.hs}}"}
,
  {"command": "brotli", "description": "Compress/uncompress files with Brotli compression.", "example": "brotli {{path/to/file}}"}
,
  {"command": "browser-sync", "description": "A local web server that updates browser on file changes.", "example": "browser-sync start --server {{path/to/directory}} --files {{path/to/directory}}"}
,
  {"command": "browsh", "description": "View webpages on the terminal using a Firefox backend.", "example": "browsh"}
,
  {"command": "bru", "description": "CLI for Bruno, an Opensource IDE for exploring and testing APIs.", "example": "bru run"}
,
  {"command": "brushtopbm", "description": "Convert a Xerox doodle brush file into a PBM image.", "example": "brushtopbm {{path/to/file.brush}}"}
,
  {"command": "bshell", "description": "A GUI for browsing for SSH/VNC servers on the local network.", "example": "bshell"}
,
  {"command": "bssh", "description": "A GUI tool for browsing for SSH/VNC servers on the local network.", "example": "bssh"}
,
  {"command": "btm", "description": "An alternative to `top`.", "example": "btm"}
,
  {"command": "btop", "description": "A resource monitor that shows information about the CPU, memory, disks, network and processes.", "example": "btop"}
,
  {"command": "builtin", "description": "Execute shell builtins.", "example": "builtin {{command}}"}
,
  {"command": "buku", "description": "Browser-independent bookmark manager.", "example": "buku {{keyword}} {{[-t|--stag]}} {{privacy}}"}
,
  {"command": "bundle", "description": "Dependency manager for the Ruby programming language.", "example": "bundle install"}
,
  {"command": "bundler", "description": "Dependency manager for the Ruby programming language.", "example": "tldr bundle"}
,
  {"command": "bundletool-dump", "description": "Manipulate Android Application Bundles.", "example": "bundletool dump manifest --bundle {{path/to/bundle.aab}}"}
,
  {"command": "bundletool", "description": "Manipulate Android Application Bundles.", "example": "bundletool help {{subcommand}}"}
,
  {"command": "bundletool-validate", "description": "Manipulate Android Application Bundles.", "example": "bundletool validate --bundle {{path/to/bundle.aab}}"}
,
  {"command": "bun", "description": "JavaScript runtime and toolkit.", "example": "bun run {{path/to/file|script_name}}"}
,
  {"command": "bunzip2", "description": "This command is an alias of `bzip2 --decompress`.", "example": "tldr bzip2"}
,
  {"command": "bup", "description": "Backup system based on the Git packfile format, providing incremental saves and global deduplication.", "example": "bup {{[-d|--bup-dir]}} {{path/to/repository}} init"}
,
  {"command": "busybox", "description": "A collection of small system utilities in a single executable.", "example": "busybox {{ls|rm|mkdir|cat|...}} {{args}}"}
,
  {"command": "buzzphrase", "description": "Output a random buzzphrase. Written in Node.js.", "example": "buzzphrase"}
,
  {"command": "bvnc", "description": "A GUI tool for browsing for SSH/VNC servers on the local network.", "example": "bvnc"}
,
  {"command": "bw", "description": "Access and manage a Bitwarden vault.", "example": "bw login"}
,
  {"command": "byobu", "description": "Window manager and terminal multiplexer.", "example": "byobu"}
,
  {"command": "bzcat", "description": "This command is an alias of `bzip2 --decompress --stdout`.", "example": "tldr bzip2"}
,
  {"command": "bzegrep", "description": "Find extended regular expression patterns in `bzip2` compressed files using `egrep`.", "example": "bzegrep \"{{search_pattern}}\" {{path/to/file}}"}
,
  {"command": "bzfgrep", "description": "Find any fixed strings separated by new lines in `bzip2` compressed files using `fgrep`.", "example": "bzfgrep \"{{search_string}}\" {{path/to/file}}"}
,
  {"command": "bzgrep", "description": "Find patterns in `bzip2` compressed files using `grep`.", "example": "bzgrep \"{{search_pattern}}\" {{path/to/file}}"}
,
  {"command": "bzip2", "description": "A block-sorting file compressor.", "example": "bzip2 {{path/to/file_to_compress}}"}
,
  {"command": "bzip2recover", "description": "Attempt to recover data from a damaged `.bz2` file.", "example": "bzip2recover {{damaged_file.bz2}}"}
,
  {"command": "bzip3", "description": "An efficient statistical file compressor.", "example": "bzip3 {{path/to/file_to_compress}}"}
,
  {"command": "c99", "description": "Compile C programs according to the ISO C standard.", "example": "c99 {{file.c}}"}
,
  {"command": "cabal", "description": "Interface to the Haskell package infrastructure (Cabal).", "example": "cabal list {{search_string}}"}
,
  {"command": "cadaver", "description": "WebDAV client for Unix.", "example": "cadaver {{http://dav.example.com/}}"}
,
  {"command": "caddy", "description": "An enterprise-ready open source web server with automatic HTTPS, written in Go.", "example": "caddy run"}
,
  {"command": "cake", "description": "The processor for the CakePHP framework.", "example": "cake"}
,
  {"command": "calc", "description": "An interactive arbitrary-precision calculator in the terminal.", "example": "calc"}
,
  {"command": "calendar", "description": "Display upcoming events from a calendar file.", "example": "calendar"}
,
  {"command": "calibredb", "description": "Manipulate an e-book database.", "example": "calibredb list"}
,
  {"command": "calibre-server", "description": "A server application to distribute e-books over a network.", "example": "calibre-server"}
,
  {"command": "caller", "description": "Print function context.", "example": "caller"}
,
  {"command": "calligraflow", "description": "Calligra's flowchart and diagram application.", "example": "calligraflow"}
,
  {"command": "calligrasheets", "description": "Calligra's spreadsheet application.", "example": "calligrasheets"}
,
  {"command": "calligrastage", "description": "Calligra's presentation application.", "example": "calligrastage"}
,
  {"command": "calligrawords", "description": "Calligra's word processor application.", "example": "calligrawords"}
,
  {"command": "cal", "description": "Display a calendar with the current day highlighted.", "example": "cal"}
,
  {"command": "cancel", "description": "Cancel print jobs.", "example": "cancel"}
,
  {"command": "carbon-now", "description": "Create beautiful images of code.", "example": "carbon-now {{path/to/file}}"}
,
  {"command": "carbonyl", "description": "View webpages on the terminal using a Chromium backend.", "example": "carbonyl"}
,
  {"command": "cargo-add", "description": "Add dependencies to a Rust project's `Cargo.toml` manifest.", "example": "cargo add {{dependency}}"}
,
  {"command": "cargo-bench", "description": "Compile and execute benchmarks.", "example": "cargo bench"}
,
  {"command": "cargo-build", "description": "Compile a local package and all of its dependencies.", "example": "cargo {{[b|build]}}"}
,
  {"command": "cargo-check", "description": "Check a local package and all of its dependencies for errors.", "example": "cargo {{[c|check]}}"}
,
  {"command": "cargo-clean", "description": "Remove generated artifacts in the `target` directory.", "example": "cargo clean"}
,
  {"command": "cargo-clippy", "description": "A collection of lints to catch common mistakes and improve your Rust code.", "example": "cargo clippy"}
,
  {"command": "cargo-doc", "description": "Build the documentation of Rust packages.", "example": "cargo {{[d|doc]}}"}
,
  {"command": "cargo-fetch", "description": "Fetch dependencies of a package from the network.", "example": "cargo fetch"}
,
  {"command": "cargo-fix", "description": "Automatically fix lint warnings reported by `rustc`.", "example": "cargo fix --broken-code"}
,
  {"command": "cargo-fmt", "description": "Run `rustfmt` on all source files in a Rust project.", "example": "cargo fmt"}
,
  {"command": "cargo-generate-lockfile", "description": "Generate the `Cargo.lock` file for the current package. Similar to `cargo update`, but has less options.", "example": "cargo generate-lockfile"}
,
  {"command": "cargo-help", "description": "Display help on `cargo` and its subcommands.", "example": "cargo help"}
,
  {"command": "cargo-init", "description": "Create a new Cargo package.", "example": "cargo init"}
,
  {"command": "cargo-install", "description": "Build and install a Rust binary.", "example": "cargo install {{package}}@{{version}}"}
,
  {"command": "cargo-locate-project", "description": "Print the full path to the `Cargo.toml` manifest of a project.", "example": "cargo locate-project"}
,
  {"command": "cargo-login", "description": "Save an API token from the registry locally.", "example": "cargo login"}
,
  {"command": "cargo-logout", "description": "Remove an API token from the registry locally.", "example": "cargo logout"}
,
  {"command": "cargo", "description": "Manage Rust projects and their module dependencies (crates).", "example": "cargo search {{search_string}}"}
,
  {"command": "cargo-metadata", "description": "Output the workspace members and resolved dependencies of current package as JSON.", "example": "cargo metadata"}
,
  {"command": "cargo-new", "description": "Create a new Cargo package.", "example": "cargo new {{path/to/directory}}"}
,
  {"command": "cargo-owner", "description": "Manage the owners of a crate on the registry.", "example": "cargo owner --add {{username|github:org_name:team_name}} {{crate}}"}
,
  {"command": "cargo-package", "description": "Assemble a local package into a distributable tarball (a `.crate` file).", "example": "cargo package"}
,
  {"command": "cargo-pkgid", "description": "Print the fully qualified package ID specifier for a package or dependency in the current workspace.", "example": "cargo pkgid"}
,
  {"command": "cargo-publish", "description": "Upload a package to a registry.", "example": "cargo publish"}
,
  {"command": "cargo-remove", "description": "Remove dependencies from a Rust project's `Cargo.toml` manifest.", "example": "cargo remove {{dependency}}"}
,
  {"command": "cargo-report", "description": "Display various kinds of reports.", "example": "cargo report {{future-incompatibilities|...}}"}
,
  {"command": "cargo-run", "description": "Run the current Cargo package.", "example": "cargo {{[r|run]}}"}
,
  {"command": "cargo-rustc", "description": "Compile a Rust package. Similar to `cargo build`, but you can pass extra options to the compiler.", "example": "cargo rustc -- {{rustc_options}}"}
,
  {"command": "cargo-rustdoc", "description": "Build the documentation of Rust packages.", "example": "cargo rustdoc -- {{rustdoc_options}}"}
,
  {"command": "cargo-search", "description": "Search for packages on <https://crates.io>.", "example": "cargo search {{query}}"}
,
  {"command": "cargo-test", "description": "Execute the unit and integration tests of a Rust package.", "example": "cargo {{[t|test]}} {{test_name}}"}
,
  {"command": "cargo-tree", "description": "Display a tree visualization of a dependency graph.", "example": "cargo tree"}
,
  {"command": "cargo-uninstall", "description": "Remove a Rust binary installed using `cargo install`.", "example": "cargo remove {{package_spec}}"}
,
  {"command": "cargo-update", "description": "Update dependencies as recorded in `Cargo.lock`.", "example": "cargo update"}
,
  {"command": "cargo-vendor", "description": "Vendor all dependencies of a project into the specified directory (default: `vendor`).", "example": "cargo vendor {{path/to/directory}} > .cargo/config.toml"}
,
  {"command": "cargo-verify-project", "description": "Check the correctness of the `Cargo.toml` manifest and print the result as a JSON object.", "example": "cargo verify-project"}
,
  {"command": "cargo-version", "description": "Display `cargo` version information.", "example": "cargo version"}
,
  {"command": "cargo-yank", "description": "Remove a pushed crate from the index. This should only be used when you accidentally release a significantly broken crate.", "example": "cargo yank {{crate}}@{{version}}"}
,
  {"command": "cariddi", "description": "Crawl URLs and scan for endpoints, secrets, api keys, file extensions, tokens, and more from a list of domains.", "example": "cat {{path/to/urls.txt}} | cariddi -s -sf {{path/to/custom_secrets.txt}} -json"}
,
  {"command": "carp", "description": "REPL and build tool for Carp.", "example": "carp"}
,
  {"command": "case", "description": "Bash builtin construct for creating multi-choice conditional statements.", "example": "case {{$COUNTRULE}} in {{words}}) {{wc --words README}} ;; {{lines}}) {{wc --lines README}} ;; esac"}
,
  {"command": "catimg", "description": "Image printing in the terminal.", "example": "catimg {{path/to/file}}"}
,
  {"command": "cat", "description": "Print and concatenate files.", "example": "cat {{path/to/file}}"}
,
  {"command": "cavif", "description": "Convert PNG/JPEG images to AVIF. Written in Rust.", "example": "cavif {{path/to/image.jpg}}"}
,
  {"command": "cb", "description": "Cut, copy, and paste anything in the terminal.", "example": "cb"}
,
  {"command": "cbonsai", "description": "A beautifully random bonsai tree generator.", "example": "cbonsai {{[-l|--live]}}"}
,
  {"command": "cbt", "description": "Utility for reading data from Google Cloud's Bigtable.", "example": "cbt ls"}
,
  {"command": "ccache", "description": "C/C++ compiler cache.", "example": "ccache {{[-s|--show-stats]}}"}
,
  {"command": "ccomps", "description": "Decompose graphs into their connected components.", "example": "ccomps {{path/to/input1.gv path/to/input2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "cdecl", "description": "Compose and decode C and C++ type declarations.", "example": "cdecl -c {{phrase}}"}
,
  {"command": "cdk", "description": "A CLI for AWS Cloud Development Kit (CDK).", "example": "cdk ls"}
,
  {"command": "cd", "description": "Change the current working directory.", "example": "cd {{path/to/directory}}"}
,
  {"command": "certutil", "description": "Manage keys and certificates in both NSS databases and other NSS tokens.", "example": "certutil -N -d ."}
,
  {"command": "cf", "description": "Manage apps and services on Cloud Foundry.", "example": "cf login -a {{api_url}}"}
,
  {"command": "cfssl", "description": "Cloudflare's PKI and TLS toolkit.", "example": "cfssl certinfo -domain {{www.google.com}}"}
,
  {"command": "chafa", "description": "Image printing in the terminal.", "example": "chafa {{path/to/file}}"}
,
  {"command": "charm", "description": "Set of tools that makes adding a backend to your terminal-based applications, without worrying about user accounts, data storage and encryption.", "example": "charm backup-keys"}
,
  {"command": "chars", "description": "Display names and codes for various ASCII and Unicode characters and code points.", "example": "chars '{{ß}}'"}
,
  {"command": "chatgpt", "description": "Shell script to use OpenAI's ChatGPT and DALL-E from the terminal.", "example": "chatgpt"}
,
  {"command": "cheat", "description": "Create and view interactive cheat sheets.", "example": "cheat {{command}}"}
,
  {"command": "cheatshh", "description": "CLI cheatsheet with customized descriptions, tldr and groups, to look into for your reference.", "example": "cheatshh {{[-a|--add]}}"}
,
  {"command": "checkov", "description": "Checkov is a static code analysis tool for Infrastructure as Code (IaC).", "example": "checkov --directory {{path/to/directory}}"}
,
  {"command": "checksec", "description": "Check security properties of executables.", "example": "checksec --file={{path/to/binary}}"}
,
  {"command": "chezmoi", "description": "A multi-machine dotfile manager, written in Go.", "example": "chezmoi init"}
,
  {"command": "chgrp", "description": "Change group ownership of files and directories.", "example": "chgrp {{group}} {{path/to/file_or_directory}}"}
,
  {"command": "chisel", "description": "Create TCP/UDP tunnels, transported over HTTP, secured via SSH.", "example": "chisel server"}
,
  {"command": "chkfont", "description": "Verify the format of a FIGlet font file (`.flf`).", "example": "chkfont {{path/to/font.flf}}"}
,
  {"command": "chkrootkit", "description": "Scan system for rootkits.", "example": "chkrootkit -q"}
,
  {"command": "chmod", "description": "Change the access permissions of a file or directory.", "example": "chmod u+x {{path/to/file}}"}
,
  {"command": "choose", "description": "A human-friendly and fast alternative to cut and (sometimes) awk.", "example": "choose {{4}}"}
,
  {"command": "chown", "description": "Change user and group ownership of files and directories.", "example": "chown {{user}} {{path/to/file_or_directory}}"}
,
  {"command": "chroma", "description": "A general-purpose syntax highlighter.", "example": "chroma --lexer {{python}} {{path/to/source_file.py}}"}
,
  {"command": "chromium", "description": "Open-source web browser principally developed and maintained by Google.", "example": "chromium {{https://example.com|path/to/file.html}}"}
,
  {"command": "chronic", "description": "Display `stdout` and `stderr` of a command if and only if it fails.", "example": "chronic {{command}} {{option1 option2 ...}}"}
,
  {"command": "chronyc", "description": "Query the Chrony NTP daemon.", "example": "chronyc"}
,
  {"command": "chroot", "description": "Run command or interactive shell with special root directory.", "example": "sudo chroot {{path/to/new/root}} {{command}}"}
,
  {"command": "cidr", "description": "Simplifies IPv4/IPv6 CIDR network prefix management with counting, overlap checking, explanation, and subdivision.", "example": "cidr explain {{10.0.0.0/16}}"}
,
  {"command": "circo", "description": "Render an image of a `circular` network graph from a `graphviz` file.", "example": "circo -T {{png}} -O {{path/to/input.gv}}"}
,
  {"command": "circup", "description": "The CircuitPython library updater.", "example": "circup update"}
,
  {"command": "cjxl", "description": "Compress images to JPEG XL.", "example": "cjxl {{path/to/image.ext}} {{path/to/output.jxl}}"}
,
  {"command": "cksum", "description": "Calculate CRC checksums and byte counts of a file.", "example": "cksum {{path/to/file}}"}
,
  {"command": "clamav", "description": "Open-source anti-virus program.", "example": "tldr clamdscan"}
,
  {"command": "clamdscan", "description": "Scan for viruses using the ClamAV Daemon.", "example": "clamdscan {{path/to/file_or_directory}}"}
,
  {"command": "clamscan", "description": "A virus scanner.", "example": "clamscan {{path/to/file}}"}
,
  {"command": "clang-cpp", "description": "This command is an alias of `clang++`.", "example": "tldr clang++"}
,
  {"command": "clangd", "description": "Language server that provides IDE-like features to editors.", "example": "clangd --help"}
,
  {"command": "clang-format", "description": "Auto-format C/C++/Java/JavaScript/Objective-C/Protobuf/C# code.", "example": "clang-format {{path/to/file}}"}
,
  {"command": "clang++", "description": "Compile C++ source files.", "example": "clang++ {{path/to/source1.cpp path/to/source2.cpp ...}} {{[-o|--output]}} {{path/to/output_executable}}"}
,
  {"command": "clang", "description": "Compile C, C++, and Objective-C source files. Can be used as a drop-in replacement for GCC.", "example": "clang {{path/to/source1.c path/to/source2.c ...}} {{[-o|--output]}} {{path/to/output_executable}}"}
,
  {"command": "clang-tidy", "description": "An LLVM-based C/C++ linter to find style violations, bugs and security flaws through static analysis.", "example": "clang-tidy {{path/to/file.cpp}}"}
,
  {"command": "claude", "description": "An agent-based coding tool that understands your code base and helps you code faster through natural language commands.", "example": "claude prompt"}
,
  {"command": "clear", "description": "Clears the screen of the terminal.", "example": "clear"}
,
  {"command": "clementine", "description": "A modern music player and library organizer.", "example": "clementine"}
,
  {"command": "cli53", "description": "Command line tool for Amazon Route 53.", "example": "cli53 list"}
,
  {"command": "clido", "description": "Save-state TODO app for the terminal.", "example": "clido --new {{name}}"}
,
  {"command": "clifm", "description": "The command-line file manager.", "example": "clifm"}
,
  {"command": "clip-view", "description": "Command Line Interface Pages render.", "example": "clip-view {{path/to/page1.clip path/to/page2.clip ...}}"}
,
  {"command": "clj", "description": "Clojure tool to start a REPL or invoke a function with data.", "example": "clj"}
,
  {"command": "clockwork-cli", "description": "Interface for the Clockwork PHP debugging framework.", "example": "clockwork-cli"}
,
  {"command": "cloc", "description": "Count, and compute differences of, lines of source code and comments.", "example": "cloc {{path/to/directory}}"}
,
  {"command": "clojure", "description": "This command is an alias of `clj`.", "example": "tldr clj"}
,
  {"command": "cloudflared", "description": "Create a persistent connection to the Cloudflare network.", "example": "cloudflared tunnel login"}
,
  {"command": "cmake", "description": "Cross-platform build automation system, that generates recipes for native build systems.", "example": "cmake {{path/to/project_directory}}"}
,
  {"command": "cmark", "description": "Convert CommonMark Markdown formatted text to other formats.", "example": "cmark --to html {{filename.md}}"}
,
  {"command": "cmatrix", "description": "Shows a scrolling Matrix like screen in the terminal.", "example": "cmatrix -a"}
,
  {"command": "cmctl", "description": "Manage cert-manager resources inside your cluster.", "example": "cmctl check api"}
,
  {"command": "cmd-wrapped", "description": "View shell history statistics.", "example": "cmd-wrapped"}
,
  {"command": "cmp", "description": "Compare two files byte by byte.", "example": "cmp {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "cmuwmtopbm", "description": "Convert a CMU window manager bitmap to a PBM image.", "example": "cmuwmtopbm {{path/to/image.pbm}} > {{path/to/output.bmp}}"}
,
  {"command": "codecrafters", "description": "Practice writing complex software.", "example": "codecrafters test"}
,
  {"command": "code", "description": "Cross platform and extensible code editor.", "example": "code"}
,
  {"command": "codespell", "description": "Spellchecker for source code.", "example": "codespell"}
,
  {"command": "codex", "description": "Natural language code assistant for the terminal, powered by OpenAI.", "example": "codex"}
,
  {"command": "coffee", "description": "Execute CoffeeScript scripts or compiles them into JavaScript.", "example": "coffee {{path/to/file.coffee}}"}
,
  {"command": "cola", "description": "This command is an alias of `git-cola`.", "example": "tldr git-cola"}
,
  {"command": "colima", "description": "Container runtimes for macOS and Linux with minimal setup.", "example": "colima start"}
,
  {"command": "colon", "description": "Returns a successful exit status code of 0.", "example": ":"}
,
  {"command": "colordiff", "description": "A wrapper around `diff` that produces the same output but with pretty syntax highlighting.", "example": "colordiff {{file1}} {{file2}}"}
,
  {"command": "colorls", "description": "Beautify `ls` command output, with color and font-awesome icons. Available as a Ruby gem.", "example": "colorls -1"}
,
  {"command": "colorpicker", "description": "A minimalist X11 colorpicker.", "example": "colorpicker"}
,
  {"command": "combine", "description": "Perform set operations on lines of two files.", "example": "combine {{path/to/file1}} and {{path/to/file2}}"}
,
  {"command": "comby", "description": "Tool for structural code search and replace that supports many languages.", "example": "comby '{{assert_eq!(:[a], :[b])}}' '{{assert_eq!(:[b], :[a])}}' {{.rs}}"}
,
  {"command": "comma", "description": "This command is an alias of `,`.", "example": "tldr ,"}
,
  {"command": "command", "description": "Command forces the shell to execute the program and ignore any functions, builtins and aliases with the same name.", "example": "command {{ls}}"}
,
  {"command": "comm", "description": "Select or reject lines common to two files. Both files must be sorted.", "example": "comm {{file1}} {{file2}}"}
,
  {"command": "compare", "description": "This command is an alias of `magick compare`.", "example": "tldr magick compare"}
,
  {"command": "compgen", "description": "A built-in command for auto-completion in Bash, which is called on pressing `<Tab>` key twice.", "example": "compgen -c"}
,
  {"command": "complete", "description": "Get argument autocompletion to shell commands.", "example": "complete -F {{function}} {{command}}"}
,
  {"command": "compopt", "description": "Print or change the completion options for a command.", "example": "compopt"}
,
  {"command": "composer-audit", "description": "Analyze a PHP project's dependencies to detect known security vulnerabilities and list affected packages.", "example": "composer audit"}
,
  {"command": "composer", "description": "A package-based dependency manager for PHP projects.", "example": "composer init"}
,
  {"command": "composer-require-checker", "description": "Analyze Composer dependencies for soft dependencies.", "example": "composer-require-checker check {{path/to/composer.json}}"}
,
  {"command": "conan-frogarian", "description": "Display the conan frogarian.", "example": "conan frogarian"}
,
  {"command": "conan", "description": "The open source, decentralized and cross-platform package manager to create and share all your native binaries.", "example": "conan install {{.}}"}
,
  {"command": "conda-create", "description": "Create new conda environments.", "example": "conda create {{[-y|--yes]}} {{[-n|--name]}} {{py39}} python={{3.9}} \"{{numpy>=1.11}}\""}
,
  {"command": "conda-install", "description": "Install packages into an existing conda environment.", "example": "conda install {{package1 package2 ...}}"}
,
  {"command": "conda", "description": "Package, dependency and environment management for any programming language.", "example": "conda create {{[-n|--name]}} {{environment_name}} {{python=3.9 matplotlib}}"}
,
  {"command": "consul-kv", "description": "Distributed key-value store with health checking and service discovery.", "example": "consul kv get {{key}}"}
,
  {"command": "consul", "description": "Distributed key-value store with health checking and service discovery.", "example": "consul --help"}
,
  {"command": "continue", "description": "Skip to the next iteration of a `for`, `while`, `until` or `select` loop.", "example": "while :; do continue; echo \"This will never be reached\"; done"}
,
  {"command": "convert", "description": "This command is an alias of `magick convert`.", "example": "tldr magick convert"}
,
  {"command": "convmv", "description": "Convert filenames (NOT file content) from one encoding to another.", "example": "convmv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}"}
,
  {"command": "copr-cli", "description": "Interface with Fedora-Projects copr instance for building RPMs and publishing them.", "example": "copr-cli whoami"}
,
  {"command": "copr", "description": "This command is an alias of `copr-cli`.", "example": "tldr copr-cli"}
,
  {"command": "coproc", "description": "Bash builtin for creating interactive asynchronous subshells.", "example": "coproc { {{command1; command2; ...}}; }"}
,
  {"command": "copyq", "description": "Clipboard manager with advanced features.", "example": "copyq"}
,
  {"command": "cordova", "description": "Mobile apps with HTML, CSS & JS.", "example": "cordova create {{path/to/directory}} {{package}} {{project_name}}"}
,
  {"command": "corepack", "description": "Zero-runtime-dependency package acting as bridge between Node projects and their package managers.", "example": "corepack enable"}
,
  {"command": "coreutils", "description": "Uutils coreutils is a cross-platform reimplementation of the GNU coreutils in Rust Language.", "example": "coreutils {{util}} {{util_options}}"}
,
  {"command": "core-validate-commit", "description": "Validate commit messages for Node.js core.", "example": "core-validate-commit"}
,
  {"command": "cosign", "description": "Container Signing, Verification and Storage in an OCI registry.", "example": "cosign generate-key-pair"}
,
  {"command": "cotton", "description": "Markdown test specification runner.", "example": "cotton -u {{base_url}} {{path/to/file.md}}"}
,
  {"command": "couchdb", "description": "Command-line interface for Apache CouchDB database server.", "example": "couchdb"}
,
  {"command": "cowsay", "description": "Print ASCII art (by default a cow) saying or thinking something.", "example": "cowsay \"{{hello, world}}\""}
,
  {"command": "cpan", "description": "Query, download and build perl modules from CPAN sites.", "example": "cpan {{-i}} {{module_name}}"}
,
  {"command": "cpdf", "description": "Manipulate PDF files.", "example": "cpdf {{path/to/source_document.pdf}} {{1-3,6}} -o {{path/to/destination_document.pdf}}"}
,
  {"command": "cpio", "description": "Copy files in and out of archives.", "example": "echo \"{{path/to/file1 path/to/file2 ...}}\" | cpio {{[-o|--create]}} > {{archive.cpio}}"}
,
  {"command": "cp", "description": "Copy files and directories.", "example": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}"}
,
  {"command": "cppcheck", "description": "A static analysis tool for C/C++ code.", "example": "cppcheck . 2> cppcheck.log"}
,
  {"command": "cppclean", "description": "Find unused code in C++ projects.", "example": "cppclean {{path/to/project}}"}
,
  {"command": "crackle", "description": "Crack and decrypt Bluetooth Low Energy (BLE) encryption.", "example": "crackle -i {{path/to/input.pcap}}"}
,
  {"command": "cradle-deploy", "description": "Manage Cradle deployments.", "example": "cradle deploy production"}
,
  {"command": "cradle-elastic", "description": "Manage the Elasticsearch instances for a Cradle instance.", "example": "cradle elastic flush"}
,
  {"command": "cradle-install", "description": "Install the Cradle PHP framework components.", "example": "cradle install"}
,
  {"command": "cradle", "description": "The Cradle PHP framework.", "example": "cradle connect {{server_name}}"}
,
  {"command": "cradle-package", "description": "Manage packages for a Cradle instance.", "example": "cradle package list"}
,
  {"command": "cradle-sql", "description": "Manage Cradle SQL databases.", "example": "cradle sql build"}
,
  {"command": "crane-append", "description": "Push an image based on an (optional) base image.", "example": "crane append {{[-b|--base]}} {{image_name}}"}
,
  {"command": "crane-auth", "description": "Log in or access credentials.", "example": "crane auth {{subcommand}}"}
,
  {"command": "crane-blob", "description": "Read a blob from a registry.", "example": "crane blob {{blob_identifier}}"}
,
  {"command": "crane-catalog", "description": "List the repositories in a registry.", "example": "crane catalog {{registry_address}}"}
,
  {"command": "crane-config", "description": "Get the configuration of an image.", "example": "crane config {{image_name}}"}
,
  {"command": "crane-copy", "description": "Efficiently copy a remote image from source to target while retaining the digest value.", "example": "crane copy {{source}} {{target}}"}
,
  {"command": "crane-cp", "description": "This command is an alias of `crane copy`.", "example": "tldr crane copy"}
,
  {"command": "crane-delete", "description": "Delete an image reference from its registry.", "example": "crane delete {{image_name}}"}
,
  {"command": "crane-digest", "description": "Get the digest of an image.", "example": "crane digest {{image_name}}"}
,
  {"command": "crane-export", "description": "Export filesystem of a container image as a tarball.", "example": "crane export {{image_name}} -"}
,
  {"command": "crane-flatten", "description": "Flatten an image's layers into a single layer.", "example": "crane flatten"}
,
  {"command": "crane-index-append", "description": "Append manifest to a remote index.", "example": "crane index append"}
,
  {"command": "crane-index-filter", "description": "Modifies a remote index by filtering based on platform.", "example": "crane index filter"}
,
  {"command": "crane-index", "description": "Modify an image index.", "example": "crane index"}
,
  {"command": "crane-ls", "description": "List the tags in a repository.", "example": "crane ls {{repository}}"}
,
  {"command": "crane-manifest", "description": "Get the manifest of an image.", "example": "crane manifest {{image_name}}"}
,
  {"command": "crane", "description": "Container images managing tool.", "example": "crane {{subcommand}}"}
,
  {"command": "crane-mutate", "description": "Modify image labels and annotations.", "example": "crane mutate {{[-a|--annotation]}}/{{[-l|--label]}} {{annotation/label}}"}
,
  {"command": "crane-pull", "description": "Pull remote images by reference and store their contents locally.", "example": "crane pull {{image_name}} {{path/to/tarball}}"}
,
  {"command": "crane-push", "description": "Push local image contents to a remote registry.", "example": "crane push {{path/to/tarball}} {{image_name}}"}
,
  {"command": "crane-rebase", "description": "Rebase an image onto a new base image.", "example": "crane rebase"}
,
  {"command": "crane-registry", "description": "This command serves a registry implementation on an automatically chosen port (:0), $PORT or --address.", "example": "crane registry serve"}
,
  {"command": "crane-tag", "description": "Efficiently tag a remote image without downloading it, which differs from the `copy` command.", "example": "crane tag {{image_name}} {{tag_name}}"}
,
  {"command": "crane-validate", "description": "Validate that an image is well-formed.", "example": "crane validate"}
,
  {"command": "crane-version", "description": "Print the version of a binary.", "example": "crane version"}
,
  {"command": "createdb", "description": "Create a PostgreSQL database.", "example": "createdb {{database_name}}"}
,
  {"command": "crictl", "description": "Manage CRI-compatible container runtimes.", "example": "crictl pods"}
,
  {"command": "croc", "description": "Send and receive files easily and securely over any network.", "example": "croc send {{path/to/file_or_directory}}"}
,
  {"command": "cronic", "description": "Bash script for wrapping cron jobs to prevent excess email sending.", "example": "cronic {{command}}"}
,
  {"command": "cron", "description": "A system scheduler for running jobs or tasks unattended.", "example": "tldr crontab"}
,
  {"command": "crontab", "description": "Schedule cron jobs to run on a time interval for the current user.", "example": "crontab -e"}
,
  {"command": "crunch", "description": "Wordlist generator.", "example": "crunch {{1}} {{3}}"}
,
  {"command": "cryfs", "description": "A cryptographic filesystem for the cloud.", "example": "cryfs {{path/to/cipher_dir}} {{path/to/mount_point}}"}
,
  {"command": "crystal", "description": "Manage Crystal source code.", "example": "crystal {{path/to/file.cr}}"}
,
  {"command": "csc", "description": "The Microsoft C# Compiler.", "example": "csc {{path/to/input_file_a.cs}} {{path/to/input_file_b.cs}}"}
,
  {"command": "cs-complete-dep", "description": "Search for libraries without doing it directly on the web.", "example": "cs complete-dep {{group_id}}"}
,
  {"command": "cs-fetch", "description": "Fetch fetches the JARs of dependencies.", "example": "cs fetch {{group_id}}:{{artifact_id}}:{{artifact_version}}"}
,
  {"command": "csh", "description": "The shell (command interpreter) with C-like syntax.", "example": "csh"}
,
  {"command": "cs-install", "description": "Install an application in the installation directory onfigured when installing `cs` (to enable the binary to be loaded add to your `.bash_profile` the `$ eval \"$(cs install --env)\"` command).", "example": "cs install {{application_name}}"}
,
  {"command": "cs-java", "description": "The `java` and `java-home` commands fetch and install JVMs. The `java` command runs them too.", "example": "cs java -version"}
,
  {"command": "cs-launch", "description": "Launch an application from the name directly from Maven dependencies without the need of installing it.", "example": "cs launch {{application_name}} -- {{argument1 argument2 ...}}"}
,
  {"command": "cs", "description": "Application and artifact manager for the Scala language.", "example": "cs list"}
,
  {"command": "cs-resolve", "description": "Resolve lists the transitive dependencies of other dependencies.", "example": "cs resolve {{group_id1}}:{{artifact_id1}}:{{artifact_version1}} {{group_id2}}:{{artifact_id2}}:{{artifact_version2}}"}
,
  {"command": "csslint", "description": "Lint CSS code.", "example": "csslint {{file.css}}"}
,
  {"command": "csv2tsv", "description": "Convert CSV (comma-separated) text to TSV (tab-separated) format.", "example": "csv2tsv {{path/to/input_csv1 path/to/input_csv2 ...}} > {{path/to/output_tsv}}"}
,
  {"command": "csvclean", "description": "Find and clean common syntax errors in CSV files.", "example": "csvclean {{bad.csv}}"}
,
  {"command": "csvcut", "description": "Filter and truncate CSV files. Like Unix's `cut` command, but for tabular data.", "example": "csvcut {{[-n|--names]}} {{data.csv}}"}
,
  {"command": "csv-diff", "description": "View differences between two CSV, TSV or JSON files.", "example": "csv-diff {{path/to/file1.csv}} {{path/to/file2.csv}} --key {{column_name}}"}
,
  {"command": "csvformat", "description": "Convert a CSV file to a custom output format.", "example": "csvformat {{[-T|--out-tabs]}} {{data.csv}}"}
,
  {"command": "csvgrep", "description": "Filter CSV rows with string and pattern matching.", "example": "csvgrep {{[-c|--columns]}} {{1}} {{[-m|--match]}} {{string_to_match}} {{data.csv}}"}
,
  {"command": "csvkit", "description": "Manipulation toolkit for CSV files.", "example": "{{command}} {{[-d|--delimiter]}} {{delimiter}} {{path/to/file.csv}}"}
,
  {"command": "csvlook", "description": "Render a CSV file in the console as a fixed-width table.", "example": "csvlook {{data.csv}}"}
,
  {"command": "csvpy", "description": "Load a CSV file into a Python shell.", "example": "csvpy {{data.csv}}"}
,
  {"command": "csvsort", "description": "Sort CSV files.", "example": "csvsort {{[-c|--columns]}} {{9}} {{data.csv}}"}
,
  {"command": "csvsql", "description": "Generate SQL statements for a CSV file or execute those statements directly on a database.", "example": "csvsql {{path/to/data.csv}}"}
,
  {"command": "csvstat", "description": "Print descriptive statistics for all columns in a CSV file.", "example": "csvstat {{data.csv}}"}
,
  {"command": "csvtool", "description": "Utility to filter and extract data from CSV formatted sources.", "example": "csvtool {{[-c|--column]}} {{2}} {{path/to/file.csv}}"}
,
  {"command": "ctags", "description": "Generate an index (or tag) file of language objects found in source files for many popular programming languages.", "example": "ctags {{path/to/file}}"}
,
  {"command": "ctest", "description": "CMake test driver program.", "example": "ctest {{[-j|--parallel]}} {{4}} --output-on-failure"}
,
  {"command": "cupsaccept", "description": "Accept jobs sent to destinations.", "example": "cupsaccept {{destination1 destination2 ...}}"}
,
  {"command": "cups-config", "description": "Show technical information about your CUPS print server installation.", "example": "cups-config --serverbin"}
,
  {"command": "cupsctl", "description": "Update or query a server's `cupsd.conf`.", "example": "cupsctl"}
,
  {"command": "cupsdisable", "description": "Stop printers and classes.", "example": "cupsdisable {{destination1 destination2 ...}}"}
,
  {"command": "cupsd", "description": "Server daemon for the CUPS print server.", "example": "cupsd"}
,
  {"command": "cupsenable", "description": "Start printers and classes.", "example": "cupsenable {{destination1 destination2 ...}}"}
,
  {"command": "cups", "description": "Open source printing system.", "example": "tldr cupsd"}
,
  {"command": "cupsreject", "description": "Reject jobs sent to printers.", "example": "cupsreject {{destination1 destination2 ...}}"}
,
  {"command": "cupstestppd", "description": "Test conformance of PPD files to the version 4.3 of the specification.", "example": "cupstestppd -q {{path/to/file1.ppd path/to/file2.ppd ...}}"}
,
  {"command": "curl", "description": "Transfers data from or to a server.", "example": "curl {{https://example.com}}"}
,
  {"command": "cut", "description": "Cut out fields from `stdin` or files.", "example": "{{command}} | cut --{{characters|fields}} {{1|1,10|1-10|1-|-10}}"}
,
  {"command": "cvs", "description": "Concurrent Versions System, a revision control system.", "example": "cvs -d {{path/to/repository}} init"}
,
  {"command": "cwebp", "description": "Compress an image file to a WebP file.", "example": "cwebp {{path/to/image_file}} -o {{path/to/output.webp}}"}
,
  {"command": "cypher-shell", "description": "Open an interactive session and run Cypher queries against a Neo4j instance.", "example": "cypher-shell"}
,
  {"command": "czkawka-cli", "description": "Command-line version of `czkawka` a multi-functional app to find duplicates, empty folders, similar images and much more.", "example": "czkawka-cli {{dup|image}} --directories {{path/to/directory1 path/to/directory2 ...}}"}
,
  {"command": "d2", "description": "A modern diagram scripting language that turns text to diagrams.", "example": "d2 {{path/to/input_file.d2}} {{path/to/output_file.ext}}"}
,
  {"command": "d8", "description": "Developer shell for the V8 JavaScript engine.", "example": "d8"}
,
  {"command": "dalfox", "description": "A powerful open-source XSS scanner focused on automation.", "example": "dalfox url {{http://example.com}}"}
,
  {"command": "daps", "description": "An open source program for transforming DocBook XML into output formats such as HTML or PDF.", "example": "daps {{[-d|--docconfig]}} {{path/to/file.xml}} validate"}
,
  {"command": "darkhttpd", "description": "Darkhttpd web server.", "example": "darkhttpd {{path/to/docroot}}"}
,
  {"command": "dart", "description": "Manage Dart projects.", "example": "dart create {{project_name}}"}
,
  {"command": "dash", "description": "Debian Almquist Shell, a modern, POSIX-compliant implementation of `sh` (not Bash-compatible).", "example": "dash"}
,
  {"command": "datashader_cli", "description": "Quick visualization of large datasets using CLI based on datashader.", "example": "datashader_cli points {{path/to/input.parquet}} --x {{pickup_x}} --y {{pickup_y}} {{path/to/output.png}} --background {{black|white|#rrggbb}}"}
,
  {"command": "date", "description": "Set or display the system date.", "example": "date +%c"}
,
  {"command": "dbeaver", "description": "A GUI SQL client supporting many databases.", "example": "dbeaver"}
,
  {"command": "dbt", "description": "A tool to model transformations in data warehouses.", "example": "dbt debug"}
,
  {"command": "dbx", "description": "Interact with the Databricks platform.", "example": "dbx configure --profile {{DEFAULT}}"}
,
  {"command": "dcfldd", "description": "Enhanced version of dd for forensics and security.", "example": "dcfldd if={{/dev/disk_device}} of={{file.img}} hash=sha256 hashlog={{file.hash}}"}
,
  {"command": "dcg", "description": "Drupal code generator.", "example": "dcg"}
,
  {"command": "dc", "description": "An arbitrary precision calculator. Uses reverse polish notation (RPN).", "example": "dc"}
,
  {"command": "dcode", "description": "Recursively detect and decode strings, supporting hex, decimal, binary, base64, URL, FromChar encodings, Caesar ciphers, and MD5, SHA1, and SHA2 hashes.", "example": "dcode \"{{NjM3YTQyNzQ1YTQ0NGUzMg==}}\""}
,
  {"command": "ddev", "description": "Container based local development tool for PHP environments.", "example": "ddev start"}
,
  {"command": "ddgr", "description": "Search DuckDuckGo (HTML version) from the terminal.", "example": "ddgr"}
,
  {"command": "dd", "description": "Convert and copy a file.", "example": "dd if={{path/to/file.iso}} of={{/dev/usb_drive}} status=progress"}
,
  {"command": "decaffeinate", "description": "Move your CoffeeScript source to modern JavaScript.", "example": "decaffeinate {{path/to/file.coffee}}"}
,
  {"command": "declare", "description": "Declare variables and give them attributes.", "example": "declare {{variable}}=\"{{value}}\""}
,
  {"command": "deemix", "description": "A barebone deezer downloader library built from the ashes of Deezloader Remix.", "example": "deemix {{https://www.deezer.com/us/track/00000000}}"}
,
  {"command": "delta", "description": "A viewer for Git and diff output.", "example": "delta {{path/to/old_file_or_directory}} {{path/to/new_file_or_directory}}"}
,
  {"command": "deluge-console", "description": "An interactive interface for the Deluge BitTorrent client.", "example": "deluge-console"}
,
  {"command": "deluged", "description": "A daemon process for the Deluge BitTorrent client.", "example": "deluged"}
,
  {"command": "deluge", "description": "A BitTorrent client.", "example": "deluge {{url|magnet|path/to/file}}"}
,
  {"command": "deno", "description": "A secure runtime for JavaScript and TypeScript.", "example": "deno run {{path/to/file.ts}}"}
,
  {"command": "dep", "description": "Deploy PHP applications.", "example": "dep init"}
,
  {"command": "detox", "description": "Renames files to make them easier to work with.", "example": "detox {{path/to/file}}"}
,
  {"command": "devcontainer", "description": "Use a Docker container as a development environment.", "example": "devcontainer up"}
,
  {"command": "devenv", "description": "Fast, Declarative, Reproducible and Composable Developer Environments using Nix.", "example": "devenv init"}
,
  {"command": "devpod", "description": "Launch reproducible development environments using Docker, Kubernetes, or SSH.", "example": "devpod provider add {{provider_name}}"}
,
  {"command": "devspace", "description": "Develop, deploy, and debug applications inside Kubernetes.", "example": "devspace init"}
,
  {"command": "dexdump", "description": "Display information about Android DEX files.", "example": "dexdump {{path/to/file.apk}}"}
,
  {"command": "dexter", "description": "Authenticate the `kubectl` users with OpenId Connect.", "example": "dexter auth {{[-i|--client-id]}} {{client_id}} {{[-s|--client-secret]}} {{client_secret}}"}
,
  {"command": "dfc", "description": "Get an overview of the filesystem disk space usage with colors and graphs.", "example": "dfc"}
,
  {"command": "df", "description": "Display an overview of the filesystem disk space usage.", "example": "df"}
,
  {"command": "dhclient", "description": "DHCP client.", "example": "sudo dhclient {{eth0}}"}
,
  {"command": "dhcpig", "description": "Initiates an advanced DHCP exhaustion attack and stress test.", "example": "sudo ./pig.py {{eth0}}"}
,
  {"command": "dhcpwn", "description": "Test DHCP IP exhaustion attacks and sniff local DHCP traffic.", "example": "dhcpwn {{[-i|--interface]}} {{network_interface}} flood {{[-c|--count]}} {{number_of_requests}}"}
,
  {"command": "dict", "description": "Command line dictionary using the DICT protocol.", "example": "dict {{[-D|--dbs]}}"}
,
  {"command": "diff", "description": "Compare files and directories.", "example": "diff {{old_file}} {{new_file}}"}
,
  {"command": "diffoscope", "description": "Compare files, archives, and directories.", "example": "diffoscope {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "diff-pdf", "description": "Compare two PDFs.", "example": "diff-pdf {{path/to/a.pdf}} {{path/to/b.pdf}}"}
,
  {"command": "diffstat", "description": "Create a histogram from the output of the `diff` command.", "example": "diff {{path/to/file1}} {{path/to/file2}} | diffstat"}
,
  {"command": "difft", "description": "Compare files or directories based on the syntax of the programming language.", "example": "difft {{path/to/file_or_directory1}} {{path/to/file_or_directory2}}"}
,
  {"command": "dig", "description": "DNS lookup utility.", "example": "dig +short {{example.com}}"}
,
  {"command": "dillo", "description": "A lightweight web browser intended for slow computers.", "example": "dillo"}
,
  {"command": "dircolors", "description": "Output commands to set the LS_COLOR environment variable and style `ls`, `dir`, etc.", "example": "dircolors"}
,
  {"command": "direnv", "description": "Shell extension to load and unload environment variables depending on the current directory.", "example": "direnv allow {{.}}"}
,
  {"command": "dirname", "description": "Calculates the parent directory of a file or directory path.", "example": "dirname {{path/to/file_or_directory}}"}
,
  {"command": "dirsearch", "description": "Web path scanner.", "example": "dirsearch {{[-u|--url]}} {{url}} --extensions-list"}
,
  {"command": "dirs", "description": "Display or manipulate the directory stack.", "example": "dirs"}
,
  {"command": "diskonaut", "description": "Terminal disk space navigator, written in Rust.", "example": "diskonaut"}
,
  {"command": "disown", "description": "Allow sub-processes to live beyond the shell that they are attached to.", "example": "disown"}
,
  {"command": "distccd", "description": "Server daemon for the distcc distributed compiler.", "example": "distccd --daemon"}
,
  {"command": "dive", "description": "Explore a Docker image, layer contents, and discover ways to shrink it.", "example": "dive {{your_image_tag}}"}
,
  {"command": "django-admin", "description": "Django’s utility for administrative tasks.", "example": "django-admin startproject {{project_name}}"}
,
  {"command": "djxl", "description": "Decompress JPEG XL images.", "example": "djxl {{path/to/image.jxl}} {{path/to/output.ext}}"}
,
  {"command": "dlv", "description": "Debugger for the Go programming language.", "example": "dlv debug"}
,
  {"command": "dmd", "description": "Official D compiler.", "example": "dmd {{path/to/source.d}}"}
,
  {"command": "dnsx", "description": "A fast and multi-purpose DNS toolkit to run multiple DNS queries.", "example": "echo {{example.com}} | dnsx -a {{[-re|-resp]}}"}
,
  {"command": "doas", "description": "Executes a command as another user.", "example": "doas {{command}}"}
,
  {"command": "dockdiver", "description": "A tool for interacting with Docker registries, including listing and dumping repositories.", "example": "dockdiver -url {{https://example.com}} -list"}
,
  {"command": "docker-build", "description": "Build an image from a Dockerfile.", "example": "docker build ."}
,
  {"command": "docker-commit", "description": "Create a new image from a container’s changes.", "example": "docker commit {{container}} {{image}}:{{tag}}"}
,
  {"command": "docker-compose", "description": "Run and manage multi container Docker applications.", "example": "docker compose ps"}
,
  {"command": "docker-container-diff", "description": "This command is an alias of `docker diff`.", "example": "tldr docker diff"}
,
  {"command": "docker-container", "description": "Manage Docker containers.", "example": "docker container ls"}
,
  {"command": "docker-container-remove", "description": "This command is an alias of `docker rm`.", "example": "tldr docker rm"}
,
  {"command": "docker-container-rename", "description": "This command is an alias of `docker rename`.", "example": "tldr docker rename"}
,
  {"command": "docker-container-rm", "description": "This command is an alias of `docker rm`.", "example": "tldr docker rm"}
,
  {"command": "docker-container-top", "description": "This command is an alias of `docker top`.", "example": "tldr docker top"}
,
  {"command": "docker-context", "description": "Switch between contexts to manage multiple Docker environments.", "example": "docker context create {{my_context}} --docker \"host={{tcp://remote-host:2375}}\""}
,
  {"command": "docker-cp", "description": "Copy files or directories between host and container filesystems.", "example": "docker cp {{path/to/file_or_directory_on_host}} {{container_name}}:{{path/to/file_or_directory_in_container}}"}
,
  {"command": "docker-diff", "description": "Inspect changes to files or directories on a container's filesystem.", "example": "docker diff {{container}}"}
,
  {"command": "docker-exec", "description": "Execute a command on an already running Docker container.", "example": "docker exec {{[-it|--interactive --tty]}} {{container_name}} {{/bin/bash}}"}
,
  {"command": "docker-image", "description": "Manage Docker images.", "example": "docker image ls"}
,
  {"command": "docker-images", "description": "Manage Docker images.", "example": "docker images"}
,
  {"command": "docker-inspect", "description": "Return low-level information on Docker objects.", "example": "docker inspect"}
,
  {"command": "docker-load", "description": "Load Docker images from files or `stdin`.", "example": "docker load < {{path/to/image_file.tar}}"}
,
  {"command": "docker-login", "description": "Log into a Docker registry.", "example": "docker login"}
,
  {"command": "docker-logs", "description": "Print container logs.", "example": "docker logs {{container_name}}"}
,
  {"command": "docker-machine", "description": "Create and manage machines running Docker.", "example": "docker-machine ls"}
,
  {"command": "docker", "description": "Manage Docker containers and images.", "example": "docker ps {{[-a|--all]}}"}
,
  {"command": "docker-network", "description": "Create and manage Docker networks.", "example": "docker network ls"}
,
  {"command": "docker-node", "description": "Manage Docker Swarm nodes.", "example": "docker node ls"}
,
  {"command": "docker-ps", "description": "List Docker containers.", "example": "docker ps"}
,
  {"command": "docker-pull", "description": "Download Docker images from a registry.", "example": "docker pull {{image}}:{{tag}}"}
,
  {"command": "docker-rename", "description": "Rename a container.", "example": "docker rename {{container}} {{new_name}}"}
,
  {"command": "docker-rmi", "description": "Remove Docker images.", "example": "docker rmi"}
,
  {"command": "docker-rm", "description": "Remove containers.", "example": "docker rm {{container1 container2 ...}}"}
,
  {"command": "docker-run", "description": "Run a command in a new Docker container.", "example": "docker run {{image:tag}} {{command}}"}
,
  {"command": "docker-save", "description": "Export Docker images to archive.", "example": "docker save {{image}}:{{tag}} > {{path/to/file.tar}}"}
,
  {"command": "docker-search", "description": "Search for Docker images on Docker Hub.", "example": "docker search {{keyword}}"}
,
  {"command": "docker-secret", "description": "Manage Docker swarm secrets.", "example": "{{command}} | docker secret create {{secret_name}} -"}
,
  {"command": "docker-service", "description": "Manage the services on a Docker daemon.", "example": "docker service ls"}
,
  {"command": "docker-slim", "description": "Analyze and optimize Docker images.", "example": "docker-slim"}
,
  {"command": "docker-start", "description": "Start stopped containers.", "example": "docker start --help"}
,
  {"command": "docker-stats", "description": "Display a live stream of resource usage statistics for containers.", "example": "docker stats"}
,
  {"command": "docker-swarm", "description": "A container orchestration tool.", "example": "docker swarm init"}
,
  {"command": "docker-system", "description": "Manage Docker data and display system-wide information.", "example": "docker system"}
,
  {"command": "docker-tag", "description": "Assign tags to existing Docker images.", "example": "docker tag {{id}} {{name}}:{{tag}}"}
,
  {"command": "docker-top", "description": "Display the running processes of a container.", "example": "docker top {{container}}"}
,
  {"command": "docker-update", "description": "Update configuration of Docker containers.", "example": "docker update --restart={{always|no|on-failure|unless-stopped}} {{container_name}}"}
,
  {"command": "docker-volume", "description": "Manage Docker volumes.", "example": "docker volume create {{volume_name}}"}
,
  {"command": "docsify", "description": "Initialize and serve markdown documentation.", "example": "docsify init"}
,
  {"command": "doctl-account", "description": "Retrieve information about Digital Ocean accounts.", "example": "doctl account {{[g|get]}}"}
,
  {"command": "doctl-apps", "description": "Manage DigitalOcean apps.", "example": "doctl {{[a|apps]}} {{[c|create]}}"}
,
  {"command": "doctl-auth", "description": "Authenticate `doctl` with API tokens.", "example": "doctl auth init --context {{token_label}}"}
,
  {"command": "doctl-balance", "description": "Show the balance of a Digital Ocean account.", "example": "doctl balance {{[g|get]}}"}
,
  {"command": "doctl-compute-droplet", "description": "List, create, and delete virtual machines which are called droplets.", "example": "doctl compute {{[d|droplet]}} {{[c|create]}} --region {{region}} --image {{os_image}} --size {{vps_type}} {{droplet_name}}"}
,
  {"command": "doctl-databases-db", "description": "Manage databases that are served by a database cluster.", "example": "doctl {{[d|databases]}} db {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases-firewalls", "description": "Manage firewalls for database clusters.", "example": "doctl {{[d|databases]}} {{[fw|firewalls]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases-maintenance-window", "description": "Schedule, and check the schedule of, maintenance windows for your databases.", "example": "doctl {{[d|databases]}} {{[mw|maintenance-window]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases", "description": "Manage your MySQL, Redis, PostgreSQL, and MongoDB database services.", "example": "doctl {{[d|databases]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases-options", "description": "Enable the navigation of available options under each database engine.", "example": "doctl {{[d|databases]}} {{[o|options]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases-pool", "description": "Manage connection pools for your database cluster.", "example": "doctl {{[d|databases]}} {{[p|pool]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases-replica", "description": "Manage read-only replicas associated with a database cluster.", "example": "doctl {{[d|databases]}} {{[p|pool]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases-sql-mode", "description": "View and configure a MySQL database cluster’s global SQL modes.", "example": "doctl {{[d|databases]}} {{[sm|sql-mode]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-databases-user", "description": "View details for, and create, database users.", "example": "doctl {{[d|databases]}} {{[u|user]}} {{command}} {{[-t|--access-token]}} {{access_token}}"}
,
  {"command": "doctl-kubernetes-cluster", "description": "Manage Kubernetes clusters and view configuration options relating to clusters.", "example": "doctl {{[k|kubernetes]}} {{[c|cluster]}} {{[c|create]}} --count {{3}} --region {{nyc1}} --size {{s-1vcpu-2gb}} --version {{latest}} {{cluster_name}}"}
,
  {"command": "doctl-kubernetes-options", "description": "Get values available for use with `doctl`'s Kubernetes commands.", "example": "doctl {{[k|kubernetes]}} {{[o|options]}} {{[r|regions]}}"}
,
  {"command": "doctl-serverless", "description": "Manage serverless functions.", "example": "doctl {{[sls|serverless]}} connect"}
,
  {"command": "doctum", "description": "Generate documentation for a PHP API.", "example": "doctum parse"}
,
  {"command": "doggo", "description": "DNS client for Humans.", "example": "doggo {{example.com}}"}
,
  {"command": "dog", "description": "DNS lookup utility.", "example": "dog {{example.com}}"}
,
  {"command": "dokku", "description": "Docker powered mini-Heroku (PaaS).", "example": "dokku apps"}
,
  {"command": "dolt-add", "description": "Add the contents of a table to the list of Dolt staged tables.", "example": "dolt add {{table}}"}
,
  {"command": "dolt-blame", "description": "Display commit information for each row of a Dolt table.", "example": "dolt blame {{table}}"}
,
  {"command": "dolt-branch", "description": "Manage Dolt branches.", "example": "dolt branch"}
,
  {"command": "dolt-checkout", "description": "Checkout the work tree or tables to a branch or commit.", "example": "dolt checkout {{branch_name}}"}
,
  {"command": "dolt-clone", "description": "Clone a repository into a new directory.", "example": "dolt clone {{repository_url}} {{path/to/directory}}"}
,
  {"command": "dolt-commit", "description": "Commit staged changes to tables.", "example": "dolt commit"}
,
  {"command": "dolt-config", "description": "Read and write local (per repository) and global (per user) Dolt configuration variables.", "example": "dolt config --list"}
,
  {"command": "dolt-fetch", "description": "Download objects and refs from another repository.", "example": "dolt fetch"}
,
  {"command": "dolt-gc", "description": "Search the repository for data that are no longer referenced and no longer needed.", "example": "dolt gc"}
,
  {"command": "dolt-init", "description": "Create an empty Dolt data repository.", "example": "dolt init"}
,
  {"command": "dolt", "description": "An SQL database that you can fork, clone, branch, merge, push and pull just like a Git repository.", "example": "dolt {{subcommand}}"}
,
  {"command": "dolt-merge", "description": "Join two or more development histories together.", "example": "dolt merge {{branch_name}}"}
,
  {"command": "dolt-sql", "description": "Run an SQL query. Multiple SQL statements must be separated by semicolons.", "example": "dolt sql {{[-q|--query]}} \"{{INSERT INTO t values (1, 3);}}\""}
,
  {"command": "dolt-status", "description": "Display the status of the database session.", "example": "dolt status"}
,
  {"command": "dolt-version", "description": "Display the current dolt CLI version.", "example": "dolt version"}
,
  {"command": "do", "description": "This shell keyword is used with `for`, `while`, `select`, and `until` to mark the start of a loop.", "example": "tldr for"}
,
  {"command": "done", "description": "This shell keyword is used with `for`, `while`, `select`, and `until` to mark the end of a loop.", "example": "tldr for"}
,
  {"command": "doppler", "description": "Manage environment variables across different environments using Doppler.", "example": "doppler setup"}
,
  {"command": "doppler-projects", "description": "Manage Doppler Projects.", "example": "doppler projects"}
,
  {"command": "doppler-run", "description": "Run a command with Doppler secrets injected into the environment.", "example": "doppler run --command {{command}}"}
,
  {"command": "doppler-secrets", "description": "Manage your Doppler project's secrets.", "example": "doppler secrets"}
,
  {"command": "dotenvx", "description": "A better `dotenv`, from the creator of `dotenv`.", "example": "dotenvx run -- {{command}}"}
,
  {"command": "dot", "description": "Render an image of a `linear directed` network graph from a `graphviz` file.", "example": "dot -T {{png}} -O {{path/to/input.gv}}"}
,
  {"command": "dotnet-add-package", "description": "Add or update a .NET package reference in a project file.", "example": "dotnet add package {{package}}"}
,
  {"command": "dotnet-add-reference", "description": "Add .NET project-to-project references.", "example": "dotnet add reference {{path/to/reference.csproj}}"}
,
  {"command": "dotnet-build", "description": "Builds a .NET application and its dependencies.", "example": "dotnet build"}
,
  {"command": "dotnet-ef", "description": "Perform design-time development tasks for Entity Framework Core.", "example": "dotnet ef database update {{migration}}"}
,
  {"command": "dotnet", "description": "Cross platform .NET tools for .NET Core.", "example": "dotnet new {{template_short_name}}"}
,
  {"command": "dotnet-publish", "description": "Publish a .NET application and its dependencies to a directory for deployment to a hosting system.", "example": "dotnet publish {{[-c|--configuration]}} Release {{path/to/project_file}}"}
,
  {"command": "dotnet-restore", "description": "Restores the dependencies and tools of a .NET project.", "example": "dotnet restore"}
,
  {"command": "dotnet-run", "description": "Run a .NET application without explicit compile or launch commands.", "example": "dotnet run"}
,
  {"command": "dotnet-test", "description": "Execute tests for a .NET application.", "example": "dotnet test"}
,
  {"command": "dotnet-tool", "description": "Manage .NET tools and search published tools in NuGet.", "example": "dotnet tool install {{[-g|--global]}} {{dotnetsay}}"}
,
  {"command": "doxygen", "description": "A documentation system for various programming languages.", "example": "doxygen -g"}
,
  {"command": "drill", "description": "Perform various DNS queries.", "example": "drill {{example.com}}"}
,
  {"command": "dropdb", "description": "Remove a PostgreSQL database.", "example": "dropdb {{dbname}}"}
,
  {"command": "drupal-check", "description": "Check Drupal PHP code for deprecations.", "example": "drupal-check {{path/to/directory}}"}
,
  {"command": "drupal", "description": "Generate boilerplate code, interact with and debug Drupal projects.", "example": "drupal module:install {{module_name}}"}
,
  {"command": "drush", "description": "Shell and scripting interface for Drupal.", "example": "drush en {{foo}}"}
,
  {"command": "dtc", "description": "The Device Tree Compiler, a tool for recompiling device trees between formats.", "example": "dtc -I dtb -O dts -o {{path/to/output_file.dts}} {{path/to/input_file.dtb}}"}
,
  {"command": "dtrx", "description": "\"Do The Right eXtraction\" - extract any archive into new directory by guessing the tool from extension.", "example": "dtrx {{path/to/file}}"}
,
  {"command": "dua", "description": "Dua (Disk Usage Analyzer): get the disk space usage of a directory.", "example": "dua {{path/to/directory}}"}
,
  {"command": "dub", "description": "Package manager for D packages.", "example": "dub init {{project_name}}"}
,
  {"command": "duckdb", "description": "Client for DuckDB, an in-process analytical SQL engine.", "example": "duckdb"}
,
  {"command": "duc", "description": "A collection of tools for indexing, inspecting, and visualizing disk usage.", "example": "duc index {{/usr}}"}
,
  {"command": "duf", "description": "Disk Usage/Free Utility.", "example": "duf"}
,
  {"command": "du", "description": "Disk usage: estimate and summarize file and directory space usage.", "example": "du -{{b|k|m}} {{path/to/directory}}"}
,
  {"command": "dumpcap", "description": "A network traffic dump tool.", "example": "dumpcap {{[-D|--list-interfaces]}}"}
,
  {"command": "dune", "description": "A build system for OCaml programs.", "example": "dune build"}
,
  {"command": "dunstctl", "description": "Control the `dunst` notification daemon.", "example": "dunstctl set-paused {{true|false|toggle}}"}
,
  {"command": "dunstify", "description": "A notification tool that is an extension of `notify-send`, but has more features based around `dunst`.", "example": "dunstify \"{{Title}}\" \"{{Message}}\""}
,
  {"command": "dunst", "description": "A lightweight and customizable notification daemon for X11 and Wayland.", "example": "dunst"}
,
  {"command": "duplicacy", "description": "A lock-free deduplication cloud backup tool.", "example": "duplicacy init {{[-e|-encrypt]}} {{snapshot_id}} {{sftp://user@192.168.2.100/path/to/storage/}}"}
,
  {"command": "duplicity", "description": "Create incremental, compressed, encrypted and versioned backups.", "example": "FTP_PASSWORD={{ftp_login_password}} PASSPHRASE={{encryption_password}} duplicity {{path/to/source/directory}} {{ftps://user@hostname/target/directory/path/}}"}
,
  {"command": "dust", "description": "Dust gives an instant overview of which directories are using disk space.", "example": "dust"}
,
  {"command": "dvc-add", "description": "Add changed files to the index.", "example": "dvc add {{path/to/file}}"}
,
  {"command": "dvc-checkout", "description": "Checkout data files and directories from cache.", "example": "dvc checkout"}
,
  {"command": "dvc-commit", "description": "Record changes to DVC-tracked files in the project.", "example": "dvc commit"}
,
  {"command": "dvc-config", "description": "Low level command to manage custom configuration options for dvc repositories.", "example": "dvc config core.remote"}
,
  {"command": "dvc-dag", "description": "Visualize the pipeline(s) defined in `dvc.yaml`.", "example": "dvc dag"}
,
  {"command": "dvc-destroy", "description": "Remove all DVC files and directories from a DVC project.", "example": "dvc destroy"}
,
  {"command": "dvc-diff", "description": "Show changes in DVC tracked file and directories.", "example": "dvc diff {{commit_hash/tag/branch}}"}
,
  {"command": "dvc-fetch", "description": "Download DVC tracked files and directories from a remote repository.", "example": "dvc fetch"}
,
  {"command": "dvc-freeze", "description": "Freeze stages in the DVC pipeline.", "example": "dvc freeze {{stage_name1 stage_name2 ...}}"}
,
  {"command": "dvc-gc", "description": "Remove unused files and directories from the cache or remote storage.", "example": "dvc gc {{[-w|--workspace]}}"}
,
  {"command": "dvc-init", "description": "Initialize a new local DVC repository.", "example": "dvc init"}
,
  {"command": "dvc", "description": "Data Version Control: like `git` for data.", "example": "dvc {{subcommand}}"}
,
  {"command": "dvc-unfreeze", "description": "Unfreeze stages in the DVC pipeline.", "example": "dvc unfreeze {{stage_name1 stage_name2 ...}}"}
,
  {"command": "dwebp", "description": "`dwebp` decompresses WebP files into PNG, PAM, PPM or PGM images.", "example": "dwebp {{path/to/input.webp}} -o {{path/to/output.png}}"}
,
  {"command": "ebook-convert", "description": "Can be used to convert e-books between common formats, e.g. PDF, EPUB and MOBI.", "example": "ebook-convert {{path/to/input_file}} {{output_file}}"}
,
  {"command": "echo", "description": "Print given arguments.", "example": "echo \"{{Hello World}}\""}
,
  {"command": "ect", "description": "Efficient Compression Tool.", "example": "ect {{path/to/file.png}}"}
,
  {"command": "edgepaint", "description": "Colorize edges of a graph layout to clarify crossing edges.", "example": "edgepaint {{path/to/layout1.gv path/to/layout2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "ed", "description": "The original Unix text editor.", "example": "ed"}
,
  {"command": "eget", "description": "Easily install prebuilt binaries from GitHub.", "example": "eget {{zyedidia/micro}}"}
,
  {"command": "egrep", "description": "Find patterns in files using extended regular expression (supports `?`, `+`, `{}`, `()`, and `|`).", "example": "egrep \"{{search_pattern}}\" {{path/to/file}}"}
,
  {"command": "eksctl", "description": "The official CLI for Amazon EKS.", "example": "eksctl create cluster"}
,
  {"command": "elasticsearch-keystore", "description": "Manage secure settings (e.g., passwords, tokens, and credentials) used by Elasticsearch.", "example": "elasticsearch-keystore create"}
,
  {"command": "elasticsearch-reset-password", "description": "Reset the passwords of users in the native realm and built-in users.", "example": "elasticsearch-reset-password {{[-u|--username]}} {{user}}"}
,
  {"command": "elasticsearch-syskeygen", "description": "Create a system key file in the Elasticsearch configuration directory.", "example": "elasticsearch-syskeygen"}
,
  {"command": "electron-packager", "description": "Build Electron app executables for Windows, Linux and macOS.", "example": "electron-packager \"{{path/to/app}}\" \"{{app_name}}\""}
,
  {"command": "electrum", "description": "Ergonomic Bitcoin wallet and private key management.", "example": "electrum {{[-w|--wallet]}} {{path/to/new_wallet.dat}} create"}
,
  {"command": "elif", "description": "This shell keyword is used in combination with `if` and `else` to define a code branch.", "example": "tldr if"}
,
  {"command": "elinks", "description": "A text based browser similar to `lynx`.", "example": "elinks"}
,
  {"command": "elixir", "description": "Elixir programming language interpreter.", "example": "elixir {{path/to/file}}"}
,
  {"command": "elm", "description": "Compile and run Elm source files.", "example": "elm init"}
,
  {"command": "else", "description": "This shell keyword is used in combination with `if` and `elif` to define a code branch if no other branch was valid.", "example": "tldr if"}
,
  {"command": "elvish", "description": "Expressive programming language and a versatile interactive shell.", "example": "elvish"}
,
  {"command": "emacsclient", "description": "Open files in an existing Emacs server.", "example": "emacsclient {{path/to/file}}"}
,
  {"command": "emacs", "description": "The extensible, customizable, self-documenting, real-time display editor.", "example": "emacs {{path/to/file}}"}
,
  {"command": "ember", "description": "Ember CLI: create and manage Ember.js applications.", "example": "ember new {{my_new_app}}"}
,
  {"command": "emulator", "description": "Manage Android emulators.", "example": "emulator -avd {{name}}"}
,
  {"command": "enable", "description": "Enable and disable shell builtins.", "example": "enable"}
,
  {"command": "enca", "description": "Detect and convert the encoding of text files.", "example": "enca {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "encfs", "description": "Mount or create encrypted virtual filesystems.", "example": "encfs {{/path/to/cipher_dir}} {{/path/to/mount_point}}"}
,
  {"command": "enscript", "description": "Convert text files to PostScript, HTML, RTF, ANSI, and overstrikes.", "example": "enscript {{path/to/input_file}} {{[-o|--output]}} {{path/to/output_file}}"}
,
  {"command": "entr", "description": "Run arbitrary commands when files change.", "example": "{{ag --files-with-matches}} | entr {{make}}"}
,
  {"command": "env", "description": "Show the environment or run a program in a modified environment.", "example": "env"}
,
  {"command": "envoy", "description": "A PHP-based task manager for Laravel remote servers.", "example": "envoy init {{host_name}}"}
,
  {"command": "envsubst", "description": "Substitutes environment variables with their value in shell format strings.", "example": "echo '{{$HOME}}' | envsubst"}
,
  {"command": "eol", "description": "Show end-of-life dates (EoLs) for a number of products.", "example": "eol"}
,
  {"command": "eqn", "description": "Equation preprocessor for the groff (GNU Troff) document formatting system.", "example": "eqn {{path/to/input.eqn}} > {{path/to/output.roff}}"}
,
  {"command": "erl", "description": "Run and manage programs in the Erlang programming language.", "example": "erlc {{path/to/file1 path/to/file2 ...}} && erl -noshell '{{mymodule:myfunction(arguments)}}, init:stop().'"}
,
  {"command": "ern", "description": "Electrode Native platform client.", "example": "ern create-miniapp {{application_name}}"}
,
  {"command": "errno", "description": "Look up errno names and descriptions.", "example": "errno {{name|code}}"}
,
  {"command": "esac", "description": "This shell keyword is used to end a `case` statement.", "example": "tldr case"}
,
  {"command": "esbuild", "description": "JavaScript bundler and minifier built for speed.", "example": "esbuild --bundle {{path/to/file.js}}"}
,
  {"command": "escp2topbm", "description": "Convert a PBM image to a ESC/P2 printer file.", "example": "escp2topbm {{path/to/image.escp2}} > {{path/to/output.pbm}}"}
,
  {"command": "eslint", "description": "A pluggable linting utility for JavaScript and JSX.", "example": "eslint --init"}
,
  {"command": "espanso", "description": "Cross-platform Text Expander written in Rust.", "example": "espanso status"}
,
  {"command": "espeak", "description": "Use text-to-speech to speak through the default sound device.", "example": "espeak \"I like to ride my bike.\""}
,
  {"command": "esptool.py", "description": "Bootloader utility for Espressif chips (e.g. ESP8266).", "example": "sudo esptool.py --port {{port}} --baud {{baud_rate}} write_flash 0x0 {{path/to/firmware.bin}}"}
,
  {"command": "etcdctl", "description": "Interact with `etcd`, a highly-available key-value pair store.", "example": "etcdctl get {{my/key}}"}
,
  {"command": "etcd", "description": "A distributed, reliable key-value store for the most critical data of a distributed system.", "example": "etcd"}
,
  {"command": "eval", "description": "Execute arguments as a single command in the current shell and return its result.", "example": "eval \"{{echo foo}}\""}
,
  {"command": "eva", "description": "Simple calculator REPL, similar to `bc`, with syntax highlighting and persistent history.", "example": "eva"}
,
  {"command": "evil-winrm", "description": "Windows Remote Management (WinRM) shell for pentesting.", "example": "evil-winrm {{[-i|--ip]}} {{ip}} {{[-u|--user]}} {{user}} {{[-p|--password]}} {{password}}"}
,
  {"command": "exa", "description": "A modern replacement for `ls` (List directory contents).", "example": "exa {{[-1|--oneline]}}"}
,
  {"command": "exec", "description": "Execute a command without creating a child process.", "example": "exec {{command -with -flags}}"}
,
  {"command": "exenv", "description": "Easily install Elixir versions and manage application environments.", "example": "exenv versions"}
,
  {"command": "exercism", "description": "Download and solve problems.", "example": "exercism configure --token={{your-application-token}} --workspace={{/path/to/preferred/workspace}}"}
,
  {"command": "exfatlabel", "description": "Get or set an exFAT filesystem label.", "example": "exfatlabel {{/dev/sda}}"}
,
  {"command": "exiftool", "description": "Read and write meta information in files.", "example": "exiftool {{path/to/file}}"}
,
  {"command": "exit", "description": "Exit the shell.", "example": "exit"}
,
  {"command": "exiv2", "description": "Image metadata manipulation tool.", "example": "exiv2 {{path/to/file}}"}
,
  {"command": "ex", "description": "Text editor.", "example": "ex {{path/to/file}}"}
,
  {"command": "exo-compute-block-storage", "description": "Manage the Exoscale Block Storage service.", "example": "exo compute block-storage create {{volume_name}} --size 20 {{[-z|--zone]}} {{zone}}"}
,
  {"command": "exo-compute-instance", "description": "Manage Exoscale Compute instances.", "example": "exo compute instance create --disk-size 10 {{instance_name}} {{[-z|--zone]}} {{zone}} --template '{{Linux Debian 12 (Bookworm) 64-bit}}'"}
,
  {"command": "exo-compute", "description": "Manage Exoscale Compute resources.", "example": "exo compute {{resource_type}} create {{resource_name}}"}
,
  {"command": "exo-compute-sks", "description": "Manage the Exoscale Scalable Kubernetes Service (SKS).", "example": "exo compute sks versions"}
,
  {"command": "exo-dbaas", "description": "Manage Exoscale DBaaS.", "example": "exo dbaas type list"}
,
  {"command": "exo-iam", "description": "Manage the Exoscale IAM service.", "example": "exo iam role list"}
,
  {"command": "exo", "description": "Manage the Exoscale services.", "example": "exo config"}
,
  {"command": "exo-storage", "description": "Manage the Exoscale Simple Object Storage (SOS) service.", "example": "exo storage mb {{bucket_name}}"}
,
  {"command": "expand", "description": "Convert tabs to spaces.", "example": "expand {{path/to/file}}"}
,
  {"command": "export", "description": "Export shell variables to child processes.", "example": "export {{VARIABLE}}={{value}}"}
,
  {"command": "expose", "description": "An open source tunnel application for sharing websites.", "example": "expose token {{token}}"}
,
  {"command": "expr", "description": "Evaluate expressions and manipulate strings.", "example": "expr length \"{{string}}\""}
,
  {"command": "exrex", "description": "Generate all/random matching strings for a regular expression.", "example": "exrex '{{regular_expression}}'"}
,
  {"command": "eyuvtoppm", "description": "Convert a Berkeley YUV file to PPM.", "example": "eyuvtoppm --width {{width}} --height {{height}} {{path/to/input_file.eyuv}} > {{path/to/output_file.ppm}}"}
,
  {"command": "eza", "description": "Modern, maintained replacement for `ls`, built on `exa`.", "example": "eza {{[-1|--oneline]}}"}
,
  {"command": "f3fix", "description": "Edit the partition table of a fake flash drive.", "example": "sudo f3fix {{/dev/device_name}}"}
,
  {"command": "f3probe", "description": "Probe a block device (e.g. a flash drive or a microSD card) for counterfeit flash memory.", "example": "sudo f3probe {{path/to/block_device}}"}
,
  {"command": "f3read", "description": "Validate .h2w files to test the real capacity of the drive.", "example": "f3read {{path/to/mount_point}}"}
,
  {"command": "f3write", "description": "Fill a drive out with .h2w files to test its real capacity.", "example": "f3write {{path/to/mount_point}}"}
,
  {"command": "fabric", "description": "An open-source framework for augmenting humans using AI.", "example": "fabric {{[-S|--setup]}}"}
,
  {"command": "factor", "description": "Print the prime factorization of a number.", "example": "factor {{number}}"}
,
  {"command": "fakedata", "description": "Generate fake data using a large variety of generators.", "example": "fakedata --generators"}
,
  {"command": "faker", "description": "A Python library and a tool to generate fake data.", "example": "faker"}
,
  {"command": "false", "description": "Returns a non-zero exit code.", "example": "false"}
,
  {"command": "fastapi", "description": "Run FastAPI apps which uses Uvicorn under the hood.", "example": "fastapi run {{path/to/file.py}} --reload"}
,
  {"command": "fastboot", "description": "Communicate with connected Android devices when in bootloader mode (the one place ADB doesn't work).", "example": "fastboot oem unlock"}
,
  {"command": "fastd", "description": "VPN daemon.", "example": "fastd {{[-c|--config]}} {{path/to/fastd.conf}}"}
,
  {"command": "fastfetch", "description": "Display information about your operating system, software and hardware.", "example": "fastfetch"}
,
  {"command": "fastlane", "description": "Build and release mobile applications.", "example": "fastlane run build_app"}
,
  {"command": "fast", "description": "Test your download and upload speed using fast.com.", "example": "fast"}
,
  {"command": "fastmod", "description": "A fast partial replacement for the codemod tool, replace and replace all in the whole codebase.", "example": "fastmod {{regex_pattern}} {{replacement}}"}
,
  {"command": "fc-cache", "description": "Scan font directories to build font cache files.", "example": "fc-cache"}
,
  {"command": "fc-list", "description": "List available fonts installed on the system.", "example": "fc-list"}
,
  {"command": "fclones", "description": "Efficient duplicate file finder and remover.", "example": "fclones group ."}
,
  {"command": "fc-match", "description": "Match available fonts.", "example": "fc-match {{[-s|--sort]}} '{{DejaVu Serif}}'"}
,
  {"command": "fc", "description": "Open the most recent command for editing and then run it.", "example": "fc"}
,
  {"command": "fc-pattern", "description": "Shows information about a font matching a pattern.", "example": "fc-pattern {{[-d|--default]}} '{{DejaVu Serif}}'"}
,
  {"command": "fd", "description": "An alternative to `find`.", "example": "fd \"{{string|regex}}\""}
,
  {"command": "fdp", "description": "Render an image of a `force-directed` network graph from a `graphviz` file.", "example": "fdp -T png -O {{path/to/input.gv}}"}
,
  {"command": "fdroidcl", "description": "Manage F-Droid apps of devices connected via ADB.", "example": "fdroidcl update"}
,
  {"command": "fdroid", "description": "F-Droid build tool.", "example": "fdroid build {{app_id}}"}
,
  {"command": "fdupes", "description": "Finds duplicate files in a set of directories.", "example": "fdupes {{path/to/directory}}"}
,
  {"command": "feh", "description": "Lightweight image viewing utility.", "example": "feh {{path/to/images}}"}
,
  {"command": "feroxbuster", "description": "Simple, fast, recursive content discovery tool written in Rust.", "example": "feroxbuster --url \"{{https://example.com}}\" --wordlist {{path/to/file}} --threads {{100}} --extensions \"{{php,txt}}\" --random-agent"}
,
  {"command": "ffe", "description": "Extract fields from a flat database file and write to another format.", "example": "ffe {{[-c|--configuration]}} {{path/to/config.ffe}} {{path/to/input}}"}
,
  {"command": "ffmpeg", "description": "Video conversion tool.", "example": "ffmpeg -i {{path/to/video.mp4}} -vn {{path/to/sound.mp3}}"}
,
  {"command": "ffplay", "description": "A simple and portable media player using the FFmpeg libraries and the SDL library.", "example": "ffplay {{path/to/file}}"}
,
  {"command": "ffprobe", "description": "Multimedia stream analyzer.", "example": "ffprobe {{[-v|-loglevel]}} error -show_streams {{input.mp4}}"}
,
  {"command": "ffsend", "description": "Easily and securely share files.", "example": "ffsend upload {{path/to/file}}"}
,
  {"command": "ffuf", "description": "A fast web fuzzer written in Go.", "example": "ffuf -c -w {{path/to/wordlist.txt}} -u {{http://example.com/FUZZ}}"}
,
  {"command": "fg", "description": "Run jobs in foreground.", "example": "fg"}
,
  {"command": "fgrep", "description": "Matches fixed strings in files.", "example": "fgrep {{search_string}} {{path/to/file}}"}
,
  {"command": "fiascotopnm", "description": "Convert a compressed FIASCO file to a PNM image.", "example": "fiascotopnm {{path/to/file.fiasco}} {{[-o|--output]}} {{output_file_basename}}"}
,
  {"command": "figlet", "description": "Generate ASCII banners from user input.", "example": "figlet {{input_text}}"}
,
  {"command": "figlist", "description": "List the figlet fonts and control files.", "example": "figlist"}
,
  {"command": "filebrowser", "description": "Simple HTTP web server to manage files and directories.", "example": "filebrowser"}
,
  {"command": "filecheck", "description": "Flexible pattern matching file verifier.", "example": "FileCheck --input-file={{path/to/input_file}} {{path/to/check_file}}"}
,
  {"command": "file", "description": "Determine file type.", "example": "file {{path/to/file}}"}
,
  {"command": "fi", "description": "This shell keyword is used to end an `if` statement.", "example": "tldr if"}
,
  {"command": "find", "description": "Find files or directories under a directory tree, recursively.", "example": "find {{root_path}} -name '{{*.ext}}'"}
,
  {"command": "finger", "description": "User information lookup program.", "example": "finger"}
,
  {"command": "fin", "description": "Docksal utility.", "example": "fin project start"}
,
  {"command": "fio", "description": "Flexible I/O tester: do an I/O action spawning multiple threads or processes.", "example": "fio --filename={{path/to/file}} --direct=1 --rw=randread --bs=4k --ioengine=libaio --iodepth=256 --runtime=120 --numjobs=4 --time_based --group_reporting --name={{job_name}} --eta-newline=1 --readonly"}
,
  {"command": "firebase", "description": "Test, manage, and deploy Firebase projects.", "example": "firebase login"}
,
  {"command": "firefox", "description": "A free and open source web browser.", "example": "firefox {{https://www.duckduckgo.com}}"}
,
  {"command": "fisher", "description": "Fisher, a fish-shell plugin manager.", "example": "fisher {{plugin1}} {{plugin2}}"}
,
  {"command": "fish", "description": "The Friendly Interactive SHell, a command-line interpreter designed to be user friendly.", "example": "fish"}
,
  {"command": "fitstopnm", "description": "Convert a Flexible Image Transport System (FITS) file to a PNM image.", "example": "fitstopnm {{path/to/file.fits}} > {{path/to/output.pnm}}"}
,
  {"command": "fkill", "description": "Fabulously kill processes. Cross-platform.", "example": "fkill"}
,
  {"command": "flac", "description": "Encodes, decodes and tests FLAC files.", "example": "flac {{path/to/file.wav}}"}
,
  {"command": "flake8", "description": "Check the style and quality of Python code.", "example": "flake8 {{path/to/file_or_directory}}"}
,
  {"command": "flarectl", "description": "Official CLI for Cloudflare.", "example": "flarectl firewall rules create --zone=\"{{example.com}}\" --value=\"{{8.8.8.8}}\" --mode=\"{{block}}\" --notes=\"{{Block bad actor}}\""}
,
  {"command": "flask", "description": "A general utility script for Flask applications. Loads the application defined in the `FLASK_APP` environment variable.", "example": "flask run"}
,
  {"command": "flask-unsign", "description": "A tool to brute-force, decode and craft `Flask` session cookies.", "example": "flask-unsign {{[-d|--decode]}} {{[-c|--cookie]}} {{cookie}}"}
,
  {"command": "flexget", "description": "A multipurpose automation tool for content like torrents, nzbs, podcasts, comics, series, movies, etc.", "example": "flexget execute --now"}
,
  {"command": "flips", "description": "Create and apply patches for IPS and BPS files.", "example": "flips"}
,
  {"command": "flite", "description": "Speech synthesis engine.", "example": "flite -lv"}
,
  {"command": "flow", "description": "A static type checker for JavaScript.", "example": "flow"}
,
  {"command": "fls", "description": "List files and directories in an image file or device.", "example": "fls -r -m {{C:}} {{/dev/loop1p1}}"}
,
  {"command": "flutterfire", "description": "Configure a Firebase project for your Flutter app.", "example": "flutterfire configure"}
,
  {"command": "flutter", "description": "Google's free, open source, and cross-platform mobile app SDK.", "example": "flutter create {{project_name}}"}
,
  {"command": "flutter-pub", "description": "Flutter's package manager.", "example": "flutter pub get"}
,
  {"command": "fluxctl", "description": "Tool for Flux v1.", "example": "fluxctl --k8s-fwd-ns={{namespace}} list-workloads"}
,
  {"command": "flyctl", "description": "Tool for flyctl.io.", "example": "flyctl auth login"}
,
  {"command": "fly", "description": "Tool for concourse-ci.", "example": "fly {{[-t|--target]}} {{target_name}} login {{[-n|--team-name]}} {{team_name}} {{[-c|--concourse-url]}} {{https://ci.example.com}}"}
,
  {"command": "fmt", "description": "Reformat a text file by joining its paragraphs and limiting the line width to a number of characters (75 by default).", "example": "fmt {{path/to/file}}"}
,
  {"command": "fnm", "description": "Fast Node.js version manager.", "example": "fnm install {{node_version}}"}
,
  {"command": "fold", "description": "Wrap each line in an input file to fit a specified width and print it to `stdout`.", "example": "fold {{path/to/file}}"}
,
  {"command": "forever", "description": "Server-side JavaScript application that makes sure Node.js applications run indefinitely (restarts after exit).", "example": "forever {{script}}"}
,
  {"command": "for", "description": "Perform a command several times.", "example": "for {{variable}}; do {{echo $variable}}; done"}
,
  {"command": "fortune", "description": "Print a random quotation (fortune-cookie style).", "example": "fortune"}
,
  {"command": "fossa", "description": "CLI for the Fossa service - Generate realtime license audits, vulnerability scans and reports about dependencies licenses.", "example": "fossa init"}
,
  {"command": "fossil-add", "description": "Put files or directories under Fossil version control.", "example": "fossil add {{path/to/file_or_directory}}"}
,
  {"command": "fossil-ci", "description": "This command is an alias of `fossil commit`.", "example": "tldr fossil commit"}
,
  {"command": "fossil-commit", "description": "Commit files to a Fossil repository.", "example": "fossil commit"}
,
  {"command": "fossil-delete", "description": "This command is an alias of `fossil rm`.", "example": "tldr fossil rm"}
,
  {"command": "fossil-forget", "description": "This command is an alias of `fossil rm`, with the exception that it never removes files from the disk.", "example": "tldr fossil rm"}
,
  {"command": "fossil-init", "description": "Initialize a new repository for a project.", "example": "fossil init {{path/to/filename}}"}
,
  {"command": "fossil", "description": "Distributed version control system.", "example": "fossil {{subcommand}}"}
,
  {"command": "fossil-new", "description": "This command is an alias of `fossil init`.", "example": "tldr fossil init"}
,
  {"command": "fossil-rm", "description": "Remove files or directories from Fossil version control.", "example": "fossil rm {{path/to/file_or_directory}}"}
,
  {"command": "fping", "description": "A more powerful ping which can ping multiple hosts.", "example": "fping {{192.168.1.{1..254}}}"}
,
  {"command": "freeramdisk", "description": "Free memory used by `loadlin` ramdisk on legacy systems.", "example": "sudo freeramdisk"}
,
  {"command": "freshclam", "description": "Update virus definitions for ClamAV antivirus program.", "example": "freshclam"}
,
  {"command": "from", "description": "Print mail header lines from the current user's mailbox.", "example": "from"}
,
  {"command": "frpc", "description": "Connect to a `frps` server to start proxying connections on the current host.", "example": "frpc"}
,
  {"command": "frp", "description": "Fast Reverse Proxy: quickly set up network tunnels to expose certain services to the Internet or other external networks.", "example": "tldr frpc"}
,
  {"command": "frps", "description": "Quickly set up a reverse proxy service.", "example": "frps"}
,
  {"command": "fselect", "description": "Find files with SQL-like queries.", "example": "fselect size, path from {{path/to/directory}} where name = {{'*.cfg'}} or name = {{'*.tmp'}}"}
,
  {"command": "fstopgm", "description": "Convert a Usenix FaceSaver file into a PGM image.", "example": "fstopgm {{path/to/input.fs}} > {{path/to/output.pgm}}"}
,
  {"command": "fswatch", "description": "A cross-platform file change monitor.", "example": "fswatch {{path/to/file}} | xargs {{[-n|--max-args]}} 1 {{bash_command}}"}
,
  {"command": "fswebcam", "description": "Small and simple webcam for *nix.", "example": "fswebcam {{filename}}"}
,
  {"command": "ftp", "description": "Tools to interact with a server via File Transfer Protocol.", "example": "ftp {{ftp.example.com}}"}
,
  {"command": "fuck", "description": "Corrects your previous console command.", "example": "eval \"$(thefuck --alias)\""}
,
  {"command": "func", "description": "Azure Functions Core Tools: develop and test Azure Functions locally.", "example": "func init {{project}}"}
,
  {"command": "function", "description": "Define a function.", "example": "function {{func_name}} { {{echo \"Function contents here\"}}; }"}
,
  {"command": "funzip", "description": "Print the content of the first (non-directory) member in an archive without extraction.", "example": "funzip {{path/to/archive.zip}}"}
,
  {"command": "fusermount", "description": "Mount and unmount FUSE filesystems.", "example": "fusermount -u {{path/to/mount_point}}"}
,
  {"command": "fvm", "description": "Flutter version manager.", "example": "fvm install {{version}}"}
,
  {"command": "fzf", "description": "Fuzzy finder.", "example": "find {{path/to/directory}} -type f | fzf"}
,
  {"command": "gacutil", "description": "Global Assembly Cache (CAG) management utility.", "example": "gacutil -i {{path/to/assembly.dll}}"}
,
  {"command": "gallery-dl", "description": "Download image galleries and collections from several image hosting sites.", "example": "gallery-dl \"{{url}}\""}
,
  {"command": "gammastep", "description": "Adjust the screen's color temperature according to the time of day.", "example": "gammastep -t {{5700}}:{{3600}}"}
,
  {"command": "ganache-cli", "description": "Command-line version of Ganache, your personal blockchain for Ethereum development.", "example": "ganache-cli"}
,
  {"command": "gatsby", "description": "Static site generator for React.", "example": "gatsby new {{site_name}}"}
,
  {"command": "gau", "description": "Get All URLs: fetch known URLs from AlienVault's Open Threat Exchange, the Wayback Machine, and Common Crawl for any domains.", "example": "gau {{example.com}}"}
,
  {"command": "gawk", "description": "GNU version of awk, a versatile programming language for working on files.", "example": "gawk '{print $5}' {{path/to/file}}"}
,
  {"command": "gcalcli", "description": "Interact with Google Calendar.", "example": "gcalcli agenda"}
,
  {"command": "gcal", "description": "Display calendar.", "example": "gcal"}
,
  {"command": "gcc", "description": "Preprocess and compile C and C++ source files, then assemble and link them together.", "example": "gcc {{path/to/source1.c path/to/source2.c ...}} {{[-o|--output]}} {{path/to/output_executable}}"}
,
  {"command": "gcloud-app", "description": "Build scalable applications on a managed serverless platform.", "example": "gcloud app deploy {{deployables}}"}
,
  {"command": "gcloud-auth", "description": "Grant and revoke authorization to `gcloud` and manage credentials.", "example": "gcloud auth login"}
,
  {"command": "gcloud-components-install", "description": "Install components of the Google Cloud CLI, along with their dependencies.", "example": "gcloud components list"}
,
  {"command": "gcloud-components-update", "description": "Update all your installed Google Cloud CLI components to the latest version.", "example": "gcloud components update"}
,
  {"command": "gcloud-compute", "description": "Create, run, and manage VMs on Google Cloud infrastructure.", "example": "gcloud compute zones list"}
,
  {"command": "gcloud-config", "description": "Manage different configurations of `gcloud`.", "example": "gcloud config set {{property}} {{value}}"}
,
  {"command": "gcloud-config-set", "description": "Set a property in the Google Cloud CLI configuration.", "example": "gcloud config set project {{project_id}}"}
,
  {"command": "gcloud-container", "description": "Manage containerized applications on Kubernetes and clusters.", "example": "gcloud auth configure-docker"}
,
  {"command": "gcloud-feedback", "description": "Provide feedback to the Google Cloud team.", "example": "gcloud feedback"}
,
  {"command": "gcloud-help", "description": "Display help and reference information for `gcloud`.", "example": "gcloud help"}
,
  {"command": "gcloud-iam", "description": "Configure Identity and Access Management (IAM) preferences and service accounts.", "example": "gcloud iam list-grantable-roles {{resource}}"}
,
  {"command": "gcloud-info", "description": "Display information about the current `gcloud` environment.", "example": "gcloud info"}
,
  {"command": "gcloud-init", "description": "Launch an interactive workflow to setup `gcloud` or reinitialize configurations.", "example": "gcloud init"}
,
  {"command": "gcloud-kms-decrypt", "description": "Decrypt a ciphertext file using a Cloud KMS key.", "example": "gcloud kms decrypt --key={{key_name}} --keyring={{keyring_name}} --location={{global}} --ciphertext-file={{path/to/ciphertext}} --plaintext-file={{path/to/plaintext}}"}
,
  {"command": "gcloud-logging-logs-list", "description": "List logs in a Google Cloud project.", "example": "gcloud logging logs list"}
,
  {"command": "gcloud", "description": "The official CLI tool for Google Cloud Platform.", "example": "gcloud config list"}
,
  {"command": "gcloud-projects", "description": "Manage project access policies in Google Cloud.", "example": "gcloud projects create {{project_id|project_number}}"}
,
  {"command": "gcloud-sql-backups-describe", "description": "Retrieve information about a backup.", "example": "gcloud sql backups describe {{backup_id}} --instance={{instance_id}}"}
,
  {"command": "gcloud-sql-export-sql", "description": "Export data from a Cloud SQL instance to an SQL file in Google Cloud Storage.", "example": "gcloud sql export sql {{instance}} gs://{{bucket_name}}/{{file_name}}"}
,
  {"command": "gcloud-topic", "description": "Display supplementary help for topics not directly associated with individual commands.", "example": "gcloud topic {{topic_name}}"}
,
  {"command": "gcloud-version", "description": "Print version information for Google Cloud CLI components.", "example": "gcloud version"}
,
  {"command": "gcpdiag", "description": "Google Cloud Platform troubleshooting and diagnostics tool.", "example": "gcpdiag lint --project={{gcp_project_id}}"}
,
  {"command": "gcrane-copy", "description": "Efficiently copy a remote image from source to target while retaining the digest value.", "example": "gcrane {{[cp|copy]}} {{source}} {{target}}"}
,
  {"command": "gcrane-gc", "description": "List images that are not tagged.", "example": "gcrane gc {{repository}}"}
,
  {"command": "gcrane-help", "description": "Help provides help for any command in the application.", "example": "gcrane help {{command}}"}
,
  {"command": "gcrane-ls", "description": "List the tags in a repository.", "example": "gcrane ls {{repository}}"}
,
  {"command": "gcrane", "description": "Container images managing tool.", "example": "gcrane {{subcommand}}"}
,
  {"command": "gdal2tiles.py", "description": "Generate TMS or XYZ tiles for a raster dataset.", "example": "gdal2tiles.py --zoom 2-5 {{path/to/input.tif}} {{path/to/output_directory}}"}
,
  {"command": "gdaladdo", "description": "Build overview images of raster datasets.", "example": "gdaladdo -r average {{path/to/input.tif}}"}
,
  {"command": "gdalbuildvrt", "description": "Build Virtual Datasets from a list of existing datasets.", "example": "gdalbuildvrt {{path/to/output.vrt}} {{path/to/input_directory/*.tif}}"}
,
  {"command": "gdal_contour", "description": "Create contour lines and polygons from a digital elevation model.", "example": "gdal_contour -a {{ele}} -i {{100.0}} {{path/to/input.tif}} {{path/to/output.gpkg}}"}
,
  {"command": "gdaldem", "description": "Analyze and visualize digital elevation models (DEM).", "example": "gdaldem hillshade {{path/to/input.tif}} {{path/to/output.tif}}"}
,
  {"command": "gdalinfo", "description": "List various information about a GDAL supported raster dataset.", "example": "gdalinfo --formats"}
,
  {"command": "gdal_translate", "description": "Convert raster data between different formats.", "example": "gdal_translate -of {{JPEG}} {{path/to/input.tif}} {{path/to/output.jpeg}}"}
,
  {"command": "gdalwarp", "description": "Image reprojection and warping utility.", "example": "gdalwarp -t_srs {{EPSG:4326}} {{path/to/input.tif}} {{path/to/output.tif}}"}
,
  {"command": "gdb", "description": "The GNU Debugger.", "example": "gdb {{executable}}"}
,
  {"command": "gdc", "description": "D compiler using GCC as a backend.", "example": "gdc {{path/to/source.d}} -o {{path/to/output_executable}}"}
,
  {"command": "gdm-binary", "description": "This command is an alias of `gdm`.", "example": "tldr gdm"}
,
  {"command": "gdm-restart", "description": "Restart the GNOME Display Manager (GDM) daemon.", "example": "gdm-restart"}
,
  {"command": "gdm-safe-restart", "description": "Restart the GNOME Display Manager (GDM) only when all users have logged out.", "example": "gdm-safe-restart"}
,
  {"command": "gdmsetup", "description": "Launch a GUI for configuring the GNOME Display Manager (GDM).", "example": "gdmsetup"}
,
  {"command": "gdm-stop", "description": "Immediately stop running the GNOME Display Manager (GDM).", "example": "gdm-stop"}
,
  {"command": "gdown", "description": "Download files from Google Drive and other URLs.", "example": "gdown {{url}}"}
,
  {"command": "gdrive", "description": "Interact with Google Drive.", "example": "gdrive upload {{[-p|--parent]}} {{id}} {{path/to/file_or_folder}}"}
,
  {"command": "gdu", "description": "Disk usage analyzer with console interface.", "example": "gdu"}
,
  {"command": "gem", "description": "A package manager for the Ruby programming language.", "example": "gem search {{regular_expression}} --all"}
,
  {"command": "gemtopbm", "description": "This command has been superseded by `gemtopnm`.", "example": "tldr gemtopnm"}
,
  {"command": "gemtopnm", "description": "Convert a GEM image file into a PNM image.", "example": "gemtopnm {{path/to/file.img}} > {{path/to/output.pnm}}"}
,
  {"command": "gendesk", "description": "Specifies the command to generate a `.desktop` file and a download icon with minimal information.", "example": "gendesk -n --name \"{{app}}\" --exec \"{{/path/to/app}}\" --icon \"{{/path/to/icon.png}}\" --comment \"{{This is application}}\""}
,
  {"command": "getadusers.py", "description": "Retrieve a list of users from Active Directory, including attributes like last logon timestamp and email.", "example": "GetADUsers.py -all -dc-ip {{domain_controller_ip}} {{domain}}/{{username}}:{{password}}"}
,
  {"command": "getarch.py", "description": "Determine the OS architecture (x86 or x64) of a remote Windows system.", "example": "getArch.py -target {{target}}"}
,
  {"command": "geth", "description": "The go-ethereum command-line interface.", "example": "geth"}
,
  {"command": "get-nodeinstalllocation", "description": "Get the current Node.js installation directory for `ps-nvm`.", "example": "Get-NodeInstallLocation"}
,
  {"command": "get-nodeversions", "description": "List installed and available Node.js versions for `ps-nvm`.", "example": "Get-NodeVersions"}
,
  {"command": "getnpusers.py", "description": "Enumerate Active Directory accounts with Kerberos pre-authentication disabled, which may be susceptible to AS-REP roasting attacks.", "example": "GetNPUsers.py {{domain}}/ -usersfile {{path/to/userslist}} -dc-ip {{domain_controller_ip}} -no-pass"}
,
  {"command": "getopts", "description": "Parse shell options from arguments.", "example": "getopts {{x}} {{opt}}; echo $opt"}
,
  {"command": "gettext", "description": "Translates a string using stored translations in a compiled `.mo` file.", "example": "LANGUAGE={{locale}} gettext {{[-d|--domain]}} {{domain}} \"{{msgid}}\""}
,
  {"command": "getuserspns.py", "description": "Retrieve Service Principal Names (SPNs) associated with Active Directory user accounts.", "example": "GetUserSPNs.py {{domain}}/{{username}}:{{password}} -dc-ip {{domain_controller_ip}}"}
,
  {"command": "gfortran", "description": "Preprocess and compile Fortran source files, then assemble and link them together.", "example": "gfortran {{path/to/source1.f90 path/to/source2.f90 ...}} -o {{path/to/output_executable}}"}
,
  {"command": "gh-alias", "description": "Manage GitHub CLI command aliases.", "example": "gh alias list"}
,
  {"command": "gh-api", "description": "Make authenticated HTTP requests to the GitHub API and print the response.", "example": "gh api repos/:owner/:repo/releases"}
,
  {"command": "gh-auth", "description": "Authenticate with a GitHub host.", "example": "gh auth login"}
,
  {"command": "gh-browse", "description": "Open a GitHub repository in the browser or print the URL.", "example": "gh browse"}
,
  {"command": "ghcid", "description": "Simple and efficient CLI IDE for Haskell that reloads code on file changes.", "example": "ghcid {{path/to/Main.hs}}"}
,
  {"command": "ghci", "description": "The Glasgow Haskell Compiler's interactive environment.", "example": "ghci"}
,
  {"command": "ghc", "description": "The Glasgow Haskell Compiler.", "example": "ghc Main"}
,
  {"command": "gh-codespace", "description": "Connect and manage your codespaces in GitHub.", "example": "gh codespace create"}
,
  {"command": "gh-completion", "description": "Generate shell completion scripts for GitHub CLI commands.", "example": "gh completion {{[-s|--shell]}} {{bash|zsh|fish|powershell}}"}
,
  {"command": "gh-config", "description": "Change configuration for GitHub cli.", "example": "gh config get git_protocol"}
,
  {"command": "gh-cs", "description": "This command is an alias of `gh codespace`.", "example": "tldr gh codespace"}
,
  {"command": "ghcup", "description": "Haskell toolchain installer.", "example": "ghcup tui"}
,
  {"command": "ghdl", "description": "Open-source simulator for the VHDL language.", "example": "ghdl -a {{filename.vhdl}}"}
,
  {"command": "gh-environment", "description": "Display help about environment variables for the GitHub CLI command.", "example": "gh environment"}
,
  {"command": "gh-extension", "description": "Manage extensions for the GitHub CLI.", "example": "gh {{[ext|extension]}} create {{extension_name}}"}
,
  {"command": "gh-formatting", "description": "Formatting options for JSON data exported from gh GitHub CLI command.", "example": "gh formatting"}
,
  {"command": "gh-gist", "description": "Work with GitHub Gists.", "example": "gh gist create {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "gh-help", "description": "Display help about the GitHub CLI command.", "example": "gh help"}
,
  {"command": "gh-issue-create", "description": "Create GitHub issues on a repository.", "example": "gh issue create"}
,
  {"command": "gh-issue", "description": "Manage GitHub issues.", "example": "gh issue view {{issue_number}}"}
,
  {"command": "gh-label", "description": "Work with GitHub labels.", "example": "gh label list"}
,
  {"command": "gh", "description": "Work seamlessly with GitHub.", "example": "gh repo clone {{owner}}/{{repository}}"}
,
  {"command": "gh-mintty", "description": "Display help about MinTTY integration for the GitHub CLI command.", "example": "gh mintty"}
,
  {"command": "ghost", "description": "A blogging platform and headless CMS.", "example": "ghost install"}
,
  {"command": "ghostty", "description": "A fast, feature-rich, and cross-platform terminal emulator that uses platform-native UI and GPU acceleration.", "example": "ghostty"}
,
  {"command": "gh-pr-create", "description": "Manage GitHub pull requests.", "example": "gh pr create"}
,
  {"command": "gh-pr", "description": "Manage GitHub pull requests.", "example": "gh pr create"}
,
  {"command": "gh-pr-merge", "description": "Merge GitHub pull requests.", "example": "gh pr merge"}
,
  {"command": "gh-reference", "description": "Display a reference about the GitHub CLI command.", "example": "gh reference"}
,
  {"command": "gh-release", "description": "Manage GitHub releases.", "example": "gh release list"}
,
  {"command": "gh-repo-create", "description": "Create a new GitHub repository.", "example": "gh repo create"}
,
  {"command": "gh-repo", "description": "Work with GitHub repositories.", "example": "gh repo create {{name}}"}
,
  {"command": "gh-run", "description": "View, run and watch recent GitHub Actions workflow runs.", "example": "gh run view"}
,
  {"command": "gh-screensaver", "description": "Extension for GitHub CLI that runs animated terminal screensavers.", "example": "gh screensaver"}
,
  {"command": "gh-secret", "description": "Manage GitHub secrets.", "example": "gh secret list"}
,
  {"command": "gh-secret-set", "description": "Create or update GitHub secrets.", "example": "gh secret set {{name}}"}
,
  {"command": "gh-skyline", "description": "Generate a 3D model of your GitHub contribution history.", "example": "gh skyline"}
,
  {"command": "gh-ssh-key", "description": "Manage GitHub SSH keys.", "example": "gh ssh-key"}
,
  {"command": "gh-workflow", "description": "List, view, and run GitHub Actions workflows.", "example": "gh workflow view"}
,
  {"command": "gibo", "description": "Fetch gitignore boilerplates.", "example": "gibo list"}
,
  {"command": "gifdiff", "description": "Compare two GIFs for identical visual appearance.", "example": "gifdiff {{path/to/first.gif}} {{path/to/second.gif}}"}
,
  {"command": "gifsicle", "description": "Create, edit, manipulate, and get information about GIF files.", "example": "gifsicle {{path/to/input.gif}} {{[-O|--optimize=]}}3 {{[-o|--output]}} {{path/to/output.gif}}"}
,
  {"command": "giftopnm", "description": "Convert a GIF file into a PNM image.", "example": "giftopnm {{path/to/input.gif}} > {{path/to/output.pnm}}"}
,
  {"command": "gimp", "description": "GNU image manipulation program.", "example": "gimp"}
,
  {"command": "gist", "description": "Upload code to <https://gist.github.com>.", "example": "gist --login"}
,
  {"command": "git-abort", "description": "Abort an ongoing rebase, merge, or cherry-pick.", "example": "git abort"}
,
  {"command": "git-add", "description": "Adds changed files to the index.", "example": "git add {{path/to/file}}"}
,
  {"command": "git-alias", "description": "Create shortcuts for Git commands.", "example": "git alias"}
,
  {"command": "git-am", "description": "Apply patch files and create a commit. Useful when receiving commits via email.", "example": "git am {{path/to/file.patch}}"}
,
  {"command": "git-annex", "description": "Manage files with Git, without checking their contents in.", "example": "git annex init"}
,
  {"command": "git-annotate", "description": "Show commit hash and last author on each line of a file.", "example": "git annotate {{path/to/file}}"}
,
  {"command": "git-apply", "description": "Apply a patch to files and/or to the index without creating a commit.", "example": "git apply {{[-v|--verbose]}} {{path/to/file}}"}
,
  {"command": "git-archive-file", "description": "Export all the files of the current Git branch into a Zip archive.", "example": "git archive-file"}
,
  {"command": "git-archive", "description": "Create an archive of files from a tree.", "example": "git archive {{[-v|--verbose]}} HEAD"}
,
  {"command": "git-authors", "description": "Generate a list of committers of a Git repository.", "example": "git authors {{[-l|--list]}}"}
,
  {"command": "git-bisect", "description": "Use binary search to find the commit that introduced a bug.", "example": "git bisect start {{bad_commit}} {{good_commit}}"}
,
  {"command": "git-blame", "description": "Show commit hash and last author on each line of a file.", "example": "git blame {{path/to/file}}"}
,
  {"command": "git-blame-someone-else", "description": "Blame someone else for your bad code.", "example": "git blame-someone-else \"{{author <someone@example.com>}}\" {{commit}}"}
,
  {"command": "git-branch", "description": "Main Git command for working with branches.", "example": "git branch {{[-a|--all]}}"}
,
  {"command": "git-browse-ci", "description": "Open the current `git` repository's CI website in the default web browser.", "example": "git browse-ci"}
,
  {"command": "git-browse", "description": "View an upstream repository in the default browser.", "example": "git browse"}
,
  {"command": "git-brv", "description": "Print a list of branches, sorted by last commit date.", "example": "git brv"}
,
  {"command": "git-bug", "description": "A distributed bug tracker that uses Git's internal storage, so no files are added in your project.", "example": "git bug user create"}
,
  {"command": "git-bugreport", "description": "Captures debug information from the system and user, generating a text file to aid in the reporting of a bug in Git.", "example": "git bugreport"}
,
  {"command": "git-bulk", "description": "Execute operations on multiple Git repositories.", "example": "git bulk --addcurrent {{workspace_name}}"}
,
  {"command": "git-bundle", "description": "Package objects and references into an archive.", "example": "git bundle create {{path/to/file.bundle}} {{branch_name}}"}
,
  {"command": "git-cat-file", "description": "Provide content or type and size information for Git repository objects.", "example": "git cat-file -s HEAD"}
,
  {"command": "git-changelog", "description": "Generate a changelog report from repository commits and tags.", "example": "git changelog"}
,
  {"command": "git-check-attr", "description": "For every pathname, list if each attribute is unspecified, set, or unset as a gitattribute on that pathname.", "example": "git check-attr {{[-a|--all]}} {{path/to/file}}"}
,
  {"command": "git-check-ignore", "description": "Analyze and debug Git ignore/exclude (\".gitignore\") files.", "example": "git check-ignore {{path/to/file_or_directory}}"}
,
  {"command": "git-check-mailmap", "description": "Show canonical names and email addresses of contacts.", "example": "git check-mailmap \"<{{email@example.com}}>\""}
,
  {"command": "git-checkout-index", "description": "Copy files from the index to the working tree.", "example": "git checkout-index {{[-a|--all]}}"}
,
  {"command": "git-checkout", "description": "Checkout a branch or paths to the working tree.", "example": "git checkout -b {{branch_name}}"}
,
  {"command": "git-check-ref-format", "description": "Check if a reference name is acceptable, and exit with a non-zero status if it is not.", "example": "git check-ref-format {{refs/head/refname}}"}
,
  {"command": "git-cherry", "description": "Find commits that have yet to be applied upstream.", "example": "git cherry {{[-v|--verbose]}}"}
,
  {"command": "git-cherry-pick", "description": "Apply the changes introduced by existing commits to the current branch.", "example": "git cherry-pick {{commit}}"}
,
  {"command": "git-clean", "description": "Remove files not tracked by Git from the working tree.", "example": "git clean"}
,
  {"command": "git-clear", "description": "Clear a Git working directory as if it was freshly cloned with the current branch including files in `.gitignore`.", "example": "git clear"}
,
  {"command": "git-clear-soft", "description": "Clear a Git working directory as if it was freshly cloned with the current branch excluding files in `.gitignore`.", "example": "git clear-soft"}
,
  {"command": "git-cliff", "description": "A highly customizable changelog generator.", "example": "git cliff > {{CHANGELOG.md}}"}
,
  {"command": "git-clone", "description": "Clone an existing repository.", "example": "git clone {{remote_repository_location}} {{path/to/directory}}"}
,
  {"command": "git-coauthor", "description": "Add another author to the latest commit. Since this command rewrites the Git history, `--force` will be needed when pushing next time.", "example": "git coauthor {{name}} {{name@example.com}}"}
,
  {"command": "git-cola", "description": "A powerful Git GUI with a slick and intuitive user interface.", "example": "git cola"}
,
  {"command": "git-column", "description": "Display data in columns.", "example": "ls | git column --mode={{column}}"}
,
  {"command": "git-commit-graph", "description": "Write and verify Git commit-graph files.", "example": "git commit-graph write"}
,
  {"command": "git-commit", "description": "Commit files to the repository.", "example": "git commit {{[-m|--message]}} \"{{message}}\""}
,
  {"command": "git-commits-since", "description": "Display commits since a time or date.", "example": "git commits-since {{yesterday}}"}
,
  {"command": "git-commit-tree", "description": "Low level utility to create commit objects.", "example": "git commit-tree {{tree}} -m \"{{message}}\""}
,
  {"command": "git-config", "description": "Manage custom configuration options for Git repositories.", "example": "git config --global {{user.name|user.email}} \"{{Your Name|email@example.com}}\""}
,
  {"command": "git-contrib", "description": "Display commits from an author.", "example": "git contrib {{author}}"}
,
  {"command": "git-count", "description": "Print the total number of commits.", "example": "git count"}
,
  {"command": "git-count-objects", "description": "Count the number of unpacked objects and their disk consumption.", "example": "git count-objects"}
,
  {"command": "git-cp", "description": "Copy an existing file to a new location, preserving history.", "example": "git cp {{file}} {{new_file}}"}
,
  {"command": "git-create-branch", "description": "Create a Git branch in a repository.", "example": "git create-branch {{branch_name}}"}
,
  {"command": "git-credential-cache", "description": "Git helper to temporarily store passwords in memory.", "example": "git config credential.helper 'cache --timeout={{time_in_seconds}}'"}
,
  {"command": "git-credential", "description": "Retrieve and store user credentials.", "example": "echo \"{{url=http://example.com}}\" | git credential fill"}
,
  {"command": "git-credential-store", "description": "Git helper to store passwords on disk.", "example": "git config credential.helper 'store --file={{path/to/file}}'"}
,
  {"command": "git-cvsexportcommit", "description": "Export a single `Git` commit to a CVS checkout.", "example": "git cvsexportcommit -v -c -w {{path/to/project_cvs_checkout}} {{commit_sha1}}"}
,
  {"command": "git-daemon", "description": "A really simple server for Git repositories.", "example": "git daemon --export-all {{path/to/directory1}} {{path/to/directory2}}"}
,
  {"command": "git-delete-branch", "description": "Delete local and remote Git branches.", "example": "git delete-branch {{branch_name1 branch_name2 ...}}"}
,
  {"command": "git-delete-merged-branches", "description": "Delete branches that are listed in `git branch --merged` excluding master.", "example": "git delete-merged-branches"}
,
  {"command": "git-delete-squashed-branches", "description": "Delete branches that have been \"squashed-merged\" into a specified branch and checkout. If no branch is specified, default to the currently checked out branch.", "example": "git delete-squashed-branches"}
,
  {"command": "git-delete-submodule", "description": "Delete a submodule from a `git` repository.", "example": "git delete-submodule {{path/to/submodule}}"}
,
  {"command": "git-delete-tag", "description": "Delete existing local and remote tags.", "example": "git delete-tag {{tag_version}}"}
,
  {"command": "git-delta", "description": "List files that differ from another branch.", "example": "git delta {{main}}"}
,
  {"command": "git-describe", "description": "Give an object a human-readable name based on an available ref.", "example": "git describe"}
,
  {"command": "git-diff-files", "description": "Compare files using their sha1 hashes and modes.", "example": "git diff-files"}
,
  {"command": "git-diff-index", "description": "Compare the working directory with a commit or tree object.", "example": "git diff-index {{commit}}"}
,
  {"command": "git-diff", "description": "Show changes to tracked files.", "example": "git diff"}
,
  {"command": "git-difftool", "description": "Show file changes using external diff tools. Accepts the same options and arguments as `git diff`.", "example": "git difftool --tool-help"}
,
  {"command": "git-diff-tree", "description": "Compares the content and mode of blobs found via two tree objects.", "example": "git diff-tree {{tree-ish1}} {{tree-ish2}}"}
,
  {"command": "git-effort", "description": "Display how much activity a file has had, showing commits per file and \"active days\" i.e. total number of days that contributed to the file.", "example": "git effort"}
,
  {"command": "git-extras", "description": "Git extension pack.", "example": "git extras update"}
,
  {"command": "git-fame", "description": "Pretty-print Git repository contributions.", "example": "git fame"}
,
  {"command": "git-feature", "description": "Create or merge feature branches.", "example": "git feature {{feature_branch}}"}
,
  {"command": "git-fetch", "description": "Download objects and refs from a remote repository.", "example": "git fetch"}
,
  {"command": "git-filter-repo", "description": "A versatile tool for rewriting Git history.", "example": "git filter-repo --replace-text <(echo '{{find}}==>{{replacement}}')"}
,
  {"command": "git-flow", "description": "A collection of Git extensions to provide high-level repository operations.", "example": "git flow init"}
,
  {"command": "git-force-clone", "description": "Get the basic functionality of `git clone`, but if the destination Git repository already exists it will force-reset it to resemble a clone of the remote.", "example": "git force-clone {{remote_repository_location}} {{path/to/directory}}"}
,
  {"command": "git-for-each-ref", "description": "List and optionally format references (branches, tags) in a Git repository.", "example": "git for-each-ref"}
,
  {"command": "git-for-each-repo", "description": "Run a Git command on a list of repositories.", "example": "git for-each-repo --config maintenance.repo {{maintenance run}}"}
,
  {"command": "git-fork", "description": "Fork a GitHub repo. Like `git clone` but forks first.", "example": "git fork {{https://github.com/tldr-pages/tldr}}"}
,
  {"command": "git-format-patch", "description": "Prepare .patch files. Useful when emailing commits elsewhere.", "example": "git format-patch {{origin}}"}
,
  {"command": "git-fresh-branch", "description": "Create an empty local branch.", "example": "git fresh-branch {{branch_name}}"}
,
  {"command": "git-fsck", "description": "Verify the validity and connectivity of nodes in a Git repository index.", "example": "git fsck"}
,
  {"command": "git-gc", "description": "Optimise the local repository by cleaning unnecessary files.", "example": "git gc"}
,
  {"command": "git-gh-pages", "description": "Create a new branch inside the current repository called `gh-pages`.", "example": "git gh-pages"}
,
  {"command": "git-graft", "description": "Merge commits from a branch into another branch and delete the source branch.", "example": "git graft {{source_branch}} {{target_branch}}"}
,
  {"command": "git-grep", "description": "Find strings inside files anywhere in a repository's history.", "example": "git grep {{search_string}}"}
,
  {"command": "git-guilt", "description": "Show total blame count for files with unstaged changes or calculate the change in blame between two revisions.", "example": "git guilt"}
,
  {"command": "git-gui", "description": "A GUI for Git to manage branches, commits, and remotes, and perform local merges.", "example": "git gui"}
,
  {"command": "git-hash-object", "description": "Computes the unique hash key of content and optionally creates an object with specified type.", "example": "git hash-object {{path/to/file}}"}
,
  {"command": "git-help", "description": "Display help information about Git.", "example": "git help {{subcommand}}"}
,
  {"command": "github-label-sync", "description": "Synchronize GitHub labels.", "example": "github-label-sync --access-token {{token}} {{repository_name}}"}
,
  {"command": "git-ignore-io", "description": "Generate .gitignore files from predefined templates.", "example": "git ignore-io list"}
,
  {"command": "git-ignore", "description": "Show/update `.gitignore` files.", "example": "git ignore"}
,
  {"command": "git-imerge", "description": "Perform a merge or rebase between two Git branches incrementally.", "example": "git imerge rebase {{branch_to_rebase_onto}}"}
,
  {"command": "git-info", "description": "Display Git repository information.", "example": "git info"}
,
  {"command": "git-init", "description": "Initializes a new local Git repository.", "example": "git init"}
,
  {"command": "git-instaweb", "description": "Helper to launch a GitWeb server.", "example": "git instaweb --start"}
,
  {"command": "gitk", "description": "Browse Git repositories graphically.", "example": "gitk"}
,
  {"command": "gitlab-ctl", "description": "Manage the GitLab omnibus.", "example": "sudo gitlab-ctl status"}
,
  {"command": "gitlab", "description": "Ruby wrapper for the GitLab API.", "example": "gitlab create_project {{project_name}}"}
,
  {"command": "gitlab-runner", "description": "Manage GitLab runners.", "example": "sudo gitlab-runner register --url {{https://gitlab.example.com}} --registration-token {{token}} --name {{name}}"}
,
  {"command": "gitleaks", "description": "Detect secrets and API keys leaked in Git repositories.", "example": "gitleaks detect --repo-url {{https://github.com/username/repository.git}}"}
,
  {"command": "git-lfs", "description": "Work with large files in Git repositories.", "example": "git lfs install"}
,
  {"command": "gitlint", "description": "Git commit message linter checks your commit messages for style.", "example": "gitlint"}
,
  {"command": "git-local-commits", "description": "Show local commits that haven't been pushed to origin. Any additional arguments will be passed directly to `git log`.", "example": "git local-commits"}
,
  {"command": "git-locked", "description": "List locked files in a Git repository.", "example": "git locked"}
,
  {"command": "git-lock", "description": "Lock a file in a Git repository from being modified by a commit.", "example": "git lock {{path/to/file}}"}
,
  {"command": "git-log", "description": "Show a history of commits.", "example": "git log"}
,
  {"command": "git-ls-files", "description": "Show information about files in the index and the working tree.", "example": "git ls-files {{[-d|--deleted]}}"}
,
  {"command": "git-ls-remote", "description": "Git command for listing references in a remote repository based on name or URL.", "example": "git ls-remote"}
,
  {"command": "git-ls-tree", "description": "List the contents of a tree object.", "example": "git ls-tree {{branch_name}}"}
,
  {"command": "git-magic", "description": "Automate add, commit, and push routines.", "example": "git magic"}
,
  {"command": "git-mailinfo", "description": "Extract patch and authorship information from a single email message.", "example": "git mailinfo {{message|patch}}"}
,
  {"command": "git-maintenance", "description": "Run tasks to optimize Git repository data.", "example": "git maintenance register"}
,
  {"command": "git", "description": "Distributed version control system.", "example": "git init"}
,
  {"command": "git-merge-base", "description": "Find a common ancestor of two commits.", "example": "git merge-base {{commit_1}} {{commit_2}}"}
,
  {"command": "git-merge-into", "description": "Merge one branch into another branch.", "example": "git merge-into {{source_branch}} {{destination_branch}}"}
,
  {"command": "git-merge", "description": "Merge branches.", "example": "git merge {{branch_name}}"}
,
  {"command": "git-merge-repo", "description": "Merge two repository histories.", "example": "git merge-repo {{path/to/repo}} {{branch_name}} {{path/to/directory}}"}
,
  {"command": "git-mergetool", "description": "Run merge conflict resolution tools to resolve merge conflicts.", "example": "git mergetool"}
,
  {"command": "git-missing", "description": "Show commits which aren't shared between two branches.", "example": "git missing {{branch}}"}
,
  {"command": "git-mktree", "description": "Build a tree object using `ls-tree` formatted text.", "example": "git mktree"}
,
  {"command": "gitmoji", "description": "Interactively insert emojis on commits.", "example": "gitmoji --commit"}
,
  {"command": "git-mr", "description": "Check out GitLab merge requests locally.", "example": "git mr {{mr_number}}"}
,
  {"command": "git-mv", "description": "Move or rename files and update the Git index.", "example": "git mv {{path/to/file}} {{new/path/to/file}}"}
,
  {"command": "git-name-rev", "description": "Describe a commit using existing ref names.", "example": "git name-rev HEAD"}
,
  {"command": "git-notes", "description": "Add or inspect object notes.", "example": "git notes list"}
,
  {"command": "git-obliterate", "description": "Delete files and erase their history from a Git repository.", "example": "git obliterate {{file_1 file_2 ...}}"}
,
  {"command": "git-paste", "description": "Send commits to a pastebin site using `pastebinit`.", "example": "git paste"}
,
  {"command": "git-pr", "description": "Check out GitHub pull requests locally.", "example": "git pr {{pr_number}}"}
,
  {"command": "git-prune", "description": "Git command for pruning all unreachable objects from the object database.", "example": "git prune {{[-n|--dry-run]}}"}
,
  {"command": "git-psykorebase", "description": "Rebase a branch on top of another using a merge commit and only one conflict handling.", "example": "git psykorebase {{upstream_branch}}"}
,
  {"command": "git-pull", "description": "Fetch branch from a remote repository and merge it to local repository.", "example": "git pull"}
,
  {"command": "git-pull-request", "description": "Create a pull request for a project on GitHub.", "example": "git pull-request {{target_branch}}"}
,
  {"command": "git-push", "description": "Push commits to a remote repository.", "example": "git push"}
,
  {"command": "git-range-diff", "description": "Compare two commit ranges (e.g. two versions of a branch).", "example": "git range-diff {{commit_1}}^! {{commit_2}}^!"}
,
  {"command": "git-reauthor", "description": "Change details about an author identity. Since this command rewrites the Git history, `--force` will be needed when pushing next time.", "example": "git reauthor {{[-o|--old-email]}} {{old@example.com}} {{[-e|--correct-email]}} {{new@example.com}} {{[-n|--correct-name]}} \"{{name}}\""}
,
  {"command": "git-rebase", "description": "Reapply commits from one branch on top of another branch.", "example": "git rebase {{new_base_branch}}"}
,
  {"command": "git-rebase-patch", "description": "Find the commit the patch applies to and do a rebase.", "example": "git rebase-patch {{patch_file}}"}
,
  {"command": "git-reflog", "description": "Show a log of changes to local references like HEAD, branches or tags.", "example": "git reflog"}
,
  {"command": "git-release", "description": "Create a Git tag for a release.", "example": "git release {{tag_name}}"}
,
  {"command": "git-remote", "description": "Manage set of tracked repositories (\"remotes\").", "example": "git remote {{[-v|--verbose]}}"}
,
  {"command": "git-rename-branch", "description": "Rename a Git branch.", "example": "git rename-branch {{new_branch_name}}"}
,
  {"command": "git-rename-remote", "description": "Change remote for pulling and pushing.", "example": "git rename-remote {{upstream}} {{origin}}"}
,
  {"command": "git-rename-tag", "description": "Rename a Git tag.", "example": "git rename-tag {{old_tag_name}} {{new_tag_name}}"}
,
  {"command": "git-repack", "description": "Pack unpacked objects in a Git repository.", "example": "git repack"}
,
  {"command": "git-replace", "description": "Create, list, and delete refs to replace objects.", "example": "git replace {{object}} {{replacement}}"}
,
  {"command": "git-repl", "description": "Git REPL (read-evaluate-print-loop) - an interactive Git shell.", "example": "git repl"}
,
  {"command": "git-request-pull", "description": "Generate a request asking the upstream project to pull changes into its tree.", "example": "git request-pull {{v1.1}} {{https://example.com/project}} {{branch_name}}"}
,
  {"command": "git-reset-file", "description": "Revert a file to HEAD or a commit.", "example": "git reset-file {{path/to/file}}"}
,
  {"command": "git-reset", "description": "Undo commits or unstage changes, by resetting the current Git HEAD to the specified state.", "example": "git reset"}
,
  {"command": "git-restore", "description": "Restore working tree files. Requires Git version 2.23+.", "example": "git restore {{path/to/file}}"}
,
  {"command": "git-revert", "description": "Create new commits which reverse the effect of earlier ones.", "example": "git revert {{HEAD}}"}
,
  {"command": "git-rev-list", "description": "List revisions (commits) in reverse chronological order.", "example": "git rev-list {{HEAD}}"}
,
  {"command": "git-rev-parse", "description": "Display metadata related to revisions.", "example": "git rev-parse {{branch_name}}"}
,
  {"command": "git-rm", "description": "Remove files from repository index and local filesystem.", "example": "git rm {{path/to/file}}"}
,
  {"command": "git-root", "description": "Print the root directory of the current Git repository.", "example": "git root"}
,
  {"command": "git-rscp", "description": "Reverse `git scp` - copy files from the working directory of a remote repository to the current working tree.", "example": "git rscp {{remote_name}} {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "git-scp", "description": "Copy files from the current working tree to the working directory of a remote repository.", "example": "git scp {{remote_name}}"}
,
  {"command": "git-secret", "description": "Stores private data inside a Git repository. Written in Bash.", "example": "git secret init"}
,
  {"command": "git-sed", "description": "Replace patterns in git-controlled files using sed.", "example": "git sed '{{find_text}}' '{{replace_text}}'"}
,
  {"command": "git-send-email", "description": "Send a collection of patches as emails.", "example": "git send-email -1"}
,
  {"command": "git-setup", "description": "Create a Git repository in a directory and commit all files.", "example": "git setup"}
,
  {"command": "git-shortlog", "description": "Summarizes the `git log` output.", "example": "git shortlog"}
,
  {"command": "git-show-branch", "description": "Show branches and their commits.", "example": "git show-branch {{branch_name|ref|commit}}"}
,
  {"command": "git-show-index", "description": "Show the packed archive index of a Git repository.", "example": "git show-index {{path/to/file.idx}}"}
,
  {"command": "git-show", "description": "Show various types of Git objects (commits, tags, etc.).", "example": "git show"}
,
  {"command": "git-show-merged-branches", "description": "Print all branches which are merged into the current head.", "example": "git show-merged-branches"}
,
  {"command": "git-show-ref", "description": "Git command for listing references.", "example": "git show-ref"}
,
  {"command": "git-show-tree", "description": "Show a decorated tree graph with all branches of a Git repository, showing annotations.", "example": "git show-tree"}
,
  {"command": "git-show-unmerged-branches", "description": "Print all branches which are not merged into the current HEAD.", "example": "git show-unmerged-branches"}
,
  {"command": "git-sizer", "description": "Computes various Git repository size metrics and alerts you to any that might cause problems or inconvenience.", "example": "git-sizer"}
,
  {"command": "gitsome", "description": "A terminal-based interface for GitHub, accessed via the `gh` command.", "example": "gitsome"}
,
  {"command": "git-squash", "description": "Squash multiple commits into a single commit.", "example": "git squash {{source_branch}}"}
,
  {"command": "git-stage", "description": "This command is an alias of `git add`.", "example": "tldr git add"}
,
  {"command": "git-stamp", "description": "Stamp the last commit message, with the possibility to reference the issues numbers from your bug tracker or link to its review page.", "example": "git stamp {{issue_number}}"}
,
  {"command": "git-standup", "description": "See commits from a specified user.", "example": "git standup -a {{name|email}} -d {{10}}"}
,
  {"command": "git-stash", "description": "Stash local Git changes in a temporary area.", "example": "git stash push {{[-m|--message]}} {{optional_stash_message}}"}
,
  {"command": "gitstats", "description": "Git repository statistics generator.", "example": "gitstats {{path/to/git_repo/.git}} {{path/to/output_folder}}"}
,
  {"command": "git-status", "description": "Show the changes to files in a Git repository.", "example": "git status"}
,
  {"command": "git-stripspace", "description": "Read text (e.g. commit messages, notes, tags, and branch descriptions) from `stdin` and clean it into the manner used by Git.", "example": "cat {{path/to/file}} | git stripspace"}
,
  {"command": "git-submodule", "description": "Inspects, updates and manages submodules.", "example": "git submodule update --init --recursive"}
,
  {"command": "git-subtree", "description": "Manage project dependencies as subprojects.", "example": "git subtree add {{[-P|--prefix]}} {{path/to/directory/}} --squash {{repository_url}} {{branch_name}}"}
,
  {"command": "git-summary", "description": "Display information about a Git repository.", "example": "git summary"}
,
  {"command": "git-svn", "description": "Bidirectional operation between a Subversion repository and Git.", "example": "git svn clone {{https://example.com/subversion_repo}} {{local_dir}}"}
,
  {"command": "git-switch", "description": "Switch between Git branches. Requires Git version 2.23+.", "example": "git switch {{branch_name}}"}
,
  {"command": "git-symbolic-ref", "description": "Read, change, or delete files that store references.", "example": "git symbolic-ref refs/{{name}} {{ref}}"}
,
  {"command": "git-sync", "description": "Sync local branches with remote branches.", "example": "git sync"}
,
  {"command": "git-tag", "description": "Create, list, delete or verify tags.", "example": "git tag"}
,
  {"command": "git-touch", "description": "Create new files and add them to the index.", "example": "git touch {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "gitui", "description": "A lightweight keyboard-only TUI for Git.", "example": "gitui --theme {{theme}}"}
,
  {"command": "git-undo", "description": "Undo recent commits.", "example": "git undo"}
,
  {"command": "git-unlock", "description": "Unlock a file in a Git repository so it can be modified by a commit.", "example": "git unlock {{path/to/file}}"}
,
  {"command": "git-unpack-file", "description": "Create a temporary file with a blob's contents.", "example": "git unpack-file {{blob_id}}"}
,
  {"command": "git-update-index", "description": "Git command for manipulating the index.", "example": "git update-index --skip-worktree {{path/to/modified_file}}"}
,
  {"command": "git-update-ref", "description": "Git command for creating, updating, and deleting Git refs.", "example": "git update-ref -d {{HEAD}}"}
,
  {"command": "git-utimes", "description": "Change files modification time to their last commit date. Does not touch files that are in the working tree or index.", "example": "git utimes"}
,
  {"command": "git-var", "description": "Print a Git logical variable's value.", "example": "git var {{GIT_AUTHOR_IDENT|GIT_COMMITTER_IDENT|GIT_EDITOR|GIT_PAGER}}"}
,
  {"command": "git-verify-commit", "description": "Check for GPG verification of commits.", "example": "git verify-commit {{commit_hash1 optional_commit_hash2 ...}}"}
,
  {"command": "git-verify-pack", "description": "Verify packed Git archive files.", "example": "git verify-pack {{path/to/pack-file}}"}
,
  {"command": "git-verify-tag", "description": "Check for GPG verification of tags.", "example": "git verify-tag {{tag1 optional_tag2 ...}}"}
,
  {"command": "gitwatch", "description": "Automatically commit file or directory changes to a Git repository.", "example": "gitwatch {{path/to/file_or_directory}}"}
,
  {"command": "git-whatchanged", "description": "Show what has changed with recent commits or files.", "example": "git whatchanged"}
,
  {"command": "git-worktree", "description": "Manage multiple working trees attached to the same repository.", "example": "git worktree add {{path/to/directory}} {{branch}}"}
,
  {"command": "git-write-tree", "description": "Low level utility to create a tree object from the current index.", "example": "git write-tree"}
,
  {"command": "gixy", "description": "Analyze nginx configuration files.", "example": "gixy"}
,
  {"command": "glab-alias", "description": "Manage GitLab CLI command aliases.", "example": "glab alias list"}
,
  {"command": "glab-auth", "description": "Authenticate with a GitLab host.", "example": "glab auth login"}
,
  {"command": "glab-issue", "description": "Manage GitLab issues.", "example": "glab issue view {{issue_number}}"}
,
  {"command": "glab", "description": "Work seamlessly with GitLab.", "example": "glab repo clone {{owner}}/{{repository}}"}
,
  {"command": "glab-mr-create", "description": "Manage GitLab merge requests.", "example": "glab mr create"}
,
  {"command": "glab-mr", "description": "Manage GitLab merge requests.", "example": "glab mr create"}
,
  {"command": "glab-mr-merge", "description": "Merge GitLab merge requests.", "example": "glab mr merge"}
,
  {"command": "glab-pipeline", "description": "List, view, and run GitLab CI/CD pipelines.", "example": "glab pipeline status"}
,
  {"command": "glab-release", "description": "Manage GitLab releases.", "example": "glab release list"}
,
  {"command": "glab-repo", "description": "Work with GitLab repositories.", "example": "glab repo create {{name}}"}
,
  {"command": "gladtex", "description": "A LaTeX formula preprocessor for HTML files.", "example": "gladtex {{path/to/input.htex}}"}
,
  {"command": "glances", "description": "A cross-platform system monitoring tool.", "example": "glances"}
,
  {"command": "gleam", "description": "The compiler, build tool, package manager and code formatter for Gleam, \"a friendly language for building type-safe systems that scale!\".", "example": "gleam new {{project_name}}"}
,
  {"command": "glib-compile-resources", "description": "Compiles resource files (e.g. images) into a binary resource bundle.", "example": "glib-compile-resources {{file.gresource.xml}}"}
,
  {"command": "glow", "description": "Render Markdown in the terminal.", "example": "glow"}
,
  {"command": "g++", "description": "Compile C++ source files.", "example": "g++ {{path/to/source1.cpp path/to/source2.cpp ...}} {{[-o|--output]}} {{path/to/output_executable}}"}
,
  {"command": "gml2gv", "description": "Convert a graph from `gml` to `gv` format.", "example": "gml2gv -o {{output.gv}} {{input.gml}}"}
,
  {"command": "gmssl", "description": "GmSSL is a crypto toolkit supporting SM1, SM2, SM3, SM4, SM9, and ZUC/ZUC256.", "example": "gmssl sm3 {{path/to/file}}"}
,
  {"command": "gnatmake", "description": "A low-level build tool for Ada programs (part of the GNAT toolchain).", "example": "gnatmake {{source_file1.adb source_file2.adb ...}}"}
,
  {"command": "gnatprep", "description": "Preprocessor for Ada source code files (part of the GNAT toolchain).", "example": "gnatprep {{source_file}} {{target_file}} {{definitions_file}}"}
,
  {"command": "gnmic-get", "description": "Get a snapshot of a gnmi network device operation data.", "example": "gnmic {{[-a|--address]}} {{ip:port}} get --path {{path}}"}
,
  {"command": "gnmic", "description": "A gNMI client.", "example": "gnmic {{[-a|--address]}} {{ip:port}} capabilities"}
,
  {"command": "gnmic-set", "description": "Modify gnmi network device configuration.", "example": "gnmic {{[-a|--address]}} {{ip:port}} set --update-path {{path}} --update-value {{value}}"}
,
  {"command": "gnmic-sub", "description": "This command is an alias of `gnmic subscribe`.", "example": "tldr gnmic subscribe"}
,
  {"command": "gnmic-subscribe", "description": "Subscribe to a gnmic network device state updates.", "example": "gnmic {{[-a|--address]}} {{ip:port}} subscribe --path {{path}}"}
,
  {"command": "gnomon", "description": "Utility to annotate console logging statements with timestamps and find slow processes.", "example": "{{npm test}} | gnomon"}
,
  {"command": "gnucash-cli", "description": "A command-line version of GnuCash.", "example": "gnucash-cli {{[-Q|--quotes]}} get {{path/to/file.gnucash}}"}
,
  {"command": "gnucash", "description": "Personal and small-business financial-accounting software.", "example": "gnucash"}
,
  {"command": "gnuplot", "description": "A graph plotter that outputs in several formats.", "example": "gnuplot"}
,
  {"command": "go-bug", "description": "Report a bug.", "example": "go bug"}
,
  {"command": "go-build", "description": "Compile Go sources.", "example": "go build {{path/to/main.go}}"}
,
  {"command": "gobuster", "description": "Brute-forces hidden paths on web servers and more.", "example": "gobuster dir {{[-u|--url]}} {{https://example.com/}} {{[-w|--wordlist]}} {{path/to/file}}"}
,
  {"command": "go-clean", "description": "Remove object files and cached files.", "example": "go clean -n"}
,
  {"command": "gocr", "description": "Optical Character Recognition tool.", "example": "gocr -m 130 -p {{path/to/db_directory}} -i {{path/to/input_image.png}} -o {{path/to/output_file.txt}}"}
,
  {"command": "gocryptfs", "description": "Encrypted overlay filesystem written in Go.", "example": "gocryptfs -init {{path/to/cipher_dir}}"}
,
  {"command": "go-doc", "description": "View documentation for a package or symbol.", "example": "go doc"}
,
  {"command": "godoc", "description": "View documentation for go packages.", "example": "godoc {{fmt}}"}
,
  {"command": "godot", "description": "An open source 2D and 3D game engine.", "example": "godot"}
,
  {"command": "go-env", "description": "Manage environment variables used by the Go toolchain.", "example": "go env"}
,
  {"command": "goenv", "description": "Install, uninstall or switch between Golang versions.", "example": "goenv commands"}
,
  {"command": "go-fix", "description": "Update packages to use new APIs.", "example": "go fix {{packages}}"}
,
  {"command": "go-fmt", "description": "Format Go source files, printing the changed filenames.", "example": "go fmt"}
,
  {"command": "gofmt", "description": "Format Go source code.", "example": "gofmt {{source.go}}"}
,
  {"command": "go-generate", "description": "Generate Go files by running commands within source files.", "example": "go generate"}
,
  {"command": "go-get", "description": "Add a dependency package, or download packages in legacy GOPATH mode.", "example": "go get {{example.com/pkg}}"}
,
  {"command": "goimports", "description": "Updates Go import lines, adding missing ones and removing unreferenced ones.", "example": "goimports {{path/to/file.go}}"}
,
  {"command": "go-install", "description": "Compile and install packages named by the import paths.", "example": "go install"}
,
  {"command": "golangci-lint", "description": "Parallelized, smart and fast Go linters runner that integrates with all major IDEs and supports YAML configuration.", "example": "golangci-lint run"}
,
  {"command": "go-list", "description": "List packages or modules.", "example": "go list ./..."}
,
  {"command": "go", "description": "Manage Go source code.", "example": "go get {{package_path}}"}
,
  {"command": "gomi", "description": "Manage the trashcan.", "example": "gomi {{path/to/file1 path/to/file2 path/to/folder1 path/to/folder2 ...}}"}
,
  {"command": "go-mod", "description": "Module maintenance.", "example": "go mod init {{moduleName}}"}
,
  {"command": "google-chrome", "description": "This command is an alias of `chromium`.", "example": "tldr chromium"}
,
  {"command": "googler", "description": "Search Google from the command-line.", "example": "googler {{keyword}}"}
,
  {"command": "gopass", "description": "Standard Unix Password Manager for Teams. Written in Go.", "example": "gopass init"}
,
  {"command": "gops", "description": "List and diagnose Go processes currently running on your system.", "example": "gops"}
,
  {"command": "goreload", "description": "Live reload utility for Go programs.", "example": "goreload {{[-b|--bin]}} {{path/to/binary}} {{path/to/file.go}}"}
,
  {"command": "go-run", "description": "Compile and run Go code without saving a binary.", "example": "go run {{path/to/file.go}}"}
,
  {"command": "gotelemetry", "description": "Manage Go telemetry data and settings.", "example": "gotelemetry on"}
,
  {"command": "go-test", "description": "Tests Go packages (files have to end with `_test.go`).", "example": "go test"}
,
  {"command": "go-tool", "description": "Run a Go tool or command.", "example": "go tool"}
,
  {"command": "gotty", "description": "Share your terminal as a web application.", "example": "gotty {{command}}"}
,
  {"command": "gouldtoppm", "description": "Convert a Gould scanner file to a PPM image.", "example": "gouldtoppm {{path/to/file.gould}} > {{path/to/output.ppm}}"}
,
  {"command": "gource", "description": "Renders an animated tree diagram of Git, SVN, Mercurial and Bazaar repositories.", "example": "gource {{path/to/repository}}"}
,
  {"command": "go-version", "description": "Display Go version.", "example": "go version"}
,
  {"command": "go-vet", "description": "Check Go source code and report suspicious constructs (e.g. lint your Go source files).", "example": "go vet"}
,
  {"command": "gow", "description": "Watches Go files and restarts the app on changes.", "example": "gow run ."}
,
  {"command": "gox", "description": "Cross-compile Go programs.", "example": "gox"}
,
  {"command": "gpg2", "description": "This command is an alias of `gpg`.", "example": "tldr gpg"}
,
  {"command": "gpg-card", "description": "Administrate OpenPGP and PIV smart cards.", "example": "gpg-card"}
,
  {"command": "gpgconf", "description": "Modify .gnupg home directories.", "example": "gpgconf --list-components"}
,
  {"command": "gpg", "description": "GNU Privacy Guard, an OpenPGP encryption and signing tool.", "example": "gpg {{[--full-gen-key|--full-generate-key]}}"}
,
  {"command": "gpg-tui", "description": "Terminal user interface for GNU Public Guard.", "example": "gpg-tui"}
,
  {"command": "gpgv", "description": "Verify OpenPGP signatures.", "example": "gpgv {{path/to/file}}"}
,
  {"command": "gpg-zip", "description": "Encrypt files and directories in an archive using GPG.", "example": "gpg-zip {{[-c|--symmetric]}} {{[-o|--output]}} {{archive.gpg}} {{path/to/directory}}"}
,
  {"command": "gprbuild", "description": "A high-level build tool for projects written in Ada and other languages (C/C++/Fortran).", "example": "gprbuild"}
,
  {"command": "gprof", "description": "Performance analysis tool for many programming languages.", "example": "gcc {{[-p|-pg]}} {{program.c}} && ./a.out"}
,
  {"command": "gradle", "description": "An open source build automation system.", "example": "gradle build"}
,
  {"command": "grafana-cli", "description": "A small executable that is bundled with Grafana serve.", "example": "grafana-cli plugins {{install|update|remove}} {{plugin_id1 plugin_id2 ...}}"}
,
  {"command": "graphml2gv", "description": "Convert a graph from `graphml` to `gv` format.", "example": "graphml2gv -o {{output.gv}} {{input.gml}}"}
,
  {"command": "grap", "description": "A charting preprocessor for the groff (GNU Troff) document formatting system.", "example": "grap {{path/to/input.grap}} > {{path/to/output.pic}}"}
,
  {"command": "greater-than", "description": "Redirect output.", "example": "{{command}} > {{path/to/file}}"}
,
  {"command": "grep", "description": "Find patterns in files using regular expressions.", "example": "grep \"{{search_pattern}}\" {{path/to/file}}"}
,
  {"command": "grex", "description": "Generate regular expressions.", "example": "grex {{space_separated_strings}}"}
,
  {"command": "grip", "description": "Preview GitHub-flavoured Markdown files locally.", "example": "grip"}
,
  {"command": "groff", "description": "GNU replacement for the `troff` and `nroff` typesetting utilities.", "example": "groff {{path/to/input.roff}} > {{path/to/output.ps}}"}
,
  {"command": "gron", "description": "Transform `JSON` into individual assignments for easier management.", "example": "gron {{path/to/file|url}}"}
,
  {"command": "groups", "description": "Print group memberships for a user.", "example": "groups"}
,
  {"command": "grpcurl", "description": "Interact with gRPC servers.", "example": "grpcurl {{grpc.server.com:443}} {{my.custom.server.Service/Method}}"}
,
  {"command": "grumphp", "description": "A PHP Composer plugin that enables source code quality checks.", "example": "grumphp git:init"}
,
  {"command": "grunt", "description": "A JavaScript task runner for automating processes.", "example": "grunt"}
,
  {"command": "gst-device-monitor-1.0", "description": "List devices detected by GStreamer.", "example": "gst-device-monitor-1.0"}
,
  {"command": "gst-discoverer-1.0", "description": "Display file metadata and stream information.", "example": "gst-discoverer-1.0 {{path/to/file}}"}
,
  {"command": "gst-inspect-1.0", "description": "Print information on GStreamer plugins.", "example": "gst-inspect-1.0 {{plugin}}"}
,
  {"command": "gst-launch-1.0", "description": "Build and run a GStreamer pipeline.", "example": "gst-launch-1.0 videotestsrc ! autovideosink"}
,
  {"command": "gsutil", "description": "Access Google Cloud Storage.", "example": "gsutil ls"}
,
  {"command": "gt", "description": "Create and manage sequences of dependent code changes (stacks) for Git and GitHub.", "example": "gt init"}
,
  {"command": "gtop", "description": "System monitoring dashboard for the terminal.", "example": "gtop"}
,
  {"command": "guacd", "description": "Apache Guacamole proxy daemon.", "example": "guacd -b {{127.0.0.1}} -l {{4823}}"}
,
  {"command": "guetzli", "description": "JPEG image compression utility.", "example": "guetzli {{input.jpg}} {{output.jpg}}"}
,
  {"command": "guile", "description": "Guile Scheme interpreter.", "example": "guile"}
,
  {"command": "gulp", "description": "JavaScript task runner and streaming build system.", "example": "gulp"}
,
  {"command": "gum", "description": "Make glamorous shell scripts.", "example": "gum choose \"{{option_1}}\" \"{{option_2}}\" \"{{option_3}}\""}
,
  {"command": "gunicorn", "description": "Python WSGI HTTP Server.", "example": "gunicorn {{import.path:app_object}}"}
,
  {"command": "gunzip", "description": "Extract files from a `gzip` (`.gz`) archive.", "example": "gunzip {{archive.tar.gz}}"}
,
  {"command": "gv2gml", "description": "Convert a graph from `gv` to `gml` format.", "example": "gv2gml -o {{output.gml}} {{input.gv}}"}
,
  {"command": "gv2gxl", "description": "Convert a graph from `gv` to `gxl` format.", "example": "gv2gxl -o {{output.gxl}} {{input.gv}}"}
,
  {"command": "gvcolor", "description": "Colorize a ranked digraph with a range of colors.", "example": "gvcolor {{path/to/layout1.gv path/to/layout2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "gvim", "description": "A Graphical User Interface version of Vim (Vi IMproved), a command-line text editor.", "example": "gvim"}
,
  {"command": "gvpack", "description": "Combine several graph layouts (that already have layout information).", "example": "gvpack {{path/to/layout1.gv path/to/layout2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "gxl2gv", "description": "Convert a graph from `gxl` to `gv` format.", "example": "gxl2gv -o {{output.gv}} {{input.gxl}}"}
,
  {"command": "gyb", "description": "Locally back up Gmail messages using Gmail's API over HTTPS.", "example": "gyb --email {{email@gmail.com}} --action estimate"}
,
  {"command": "gzip", "description": "Compress/uncompress files with `gzip` compression (LZ77).", "example": "gzip {{path/to/file}}"}
,
  {"command": "hadolint", "description": "Dockerfile linter.", "example": "hadolint {{path/to/Dockerfile}}"}
,
  {"command": "hakyll-init", "description": "Generate a new Hakyll sample blog.", "example": "hakyll-init {{path/to/directory}}"}
,
  {"command": "handbrakecli", "description": "Command-line interface to the HandBrake video conversion and DVD ripping tool.", "example": "handbrakecli {{[-i|--input]}} {{input.avi}} {{[-o|--output]}} {{output.mkv}} {{[-e|--encoder]}} x264 {{[-q|--quality]}} 20 {{[-B|--ab]}} 160"}
,
  {"command": "hangups", "description": "Third party client for Google Hangouts.", "example": "hangups"}
,
  {"command": "hardhat", "description": "A development environment for Ethereum software.", "example": "hardhat"}
,
  {"command": "hashcat", "description": "Fast and advanced password recovery tool.", "example": "hashcat --hash-type {{hash_type_id}} --attack-mode {{3}} {{hash_value}}"}
,
  {"command": "hashid", "description": "Python3 program that identifies data and password hashes.", "example": "hashid"}
,
  {"command": "hash", "description": "View cached executable locations.", "example": "hash"}
,
  {"command": "hatch", "description": "Modern, extensible Python project manager.", "example": "hatch new {{project_name}}"}
,
  {"command": "haxelib", "description": "Haxe Library Manager.", "example": "haxelib search {{keyword}}"}
,
  {"command": "hcloud", "description": "Show how to use the CLI for Hetzner Cloud.", "example": "hcloud"}
,
  {"command": "hd", "description": "This command is an alias of `hexdump`.", "example": "tldr hexdump"}
,
  {"command": "head", "description": "Output the first part of files.", "example": "head -n {{count}} {{path/to/file}}"}
,
  {"command": "helix", "description": "Helix, A post-modern text editor, provides several modes for different kinds of text manipulation.", "example": "helix {{path/to/file}}"}
,
  {"command": "hello", "description": "Print \"Hello, world!\", \"hello, world\" or a customizable text.", "example": "hello"}
,
  {"command": "helm-install", "description": "Install a helm chart.", "example": "helm install {{name}} {{repository_name}}/{{chart_name}}"}
,
  {"command": "helm", "description": "A package manager for Kubernetes.", "example": "helm create {{chart_name}}"}
,
  {"command": "help2man", "description": "Produce simple man pages from an executable's `--help` and `--version` output.", "example": "help2man {{executable}}"}
,
  {"command": "help", "description": "Display information about Bash builtin commands.", "example": "help"}
,
  {"command": "heroku", "description": "Create and manage Heroku apps.", "example": "heroku login"}
,
  {"command": "hexdump", "description": "Display file contents in hexadecimal, decimal, octal, or ASCII.", "example": "hexdump {{path/to/file}}"}
,
  {"command": "hexedit", "description": "File editor for hexadecimal and ASCII content.", "example": "hexedit {{path/to/file}}"}
,
  {"command": "hexo", "description": "A fast, simple & powerful blog framework.", "example": "hexo init {{path/to/directory}}"}
,
  {"command": "hexyl", "description": "A simple hex viewer for the terminal. Uses colored output to distinguish different categories of bytes.", "example": "hexyl {{path/to/file}}"}
,
  {"command": "hg-add", "description": "Adds specified files to the staging area for the next commit in Mercurial.", "example": "hg add {{path/to/file}}"}
,
  {"command": "hg-branch", "description": "Create or show a branch name.", "example": "hg branch"}
,
  {"command": "hg-clone", "description": "Create a copy of an existing repository in a new directory.", "example": "hg clone {{remote_repository_source}} {{destination_path}}"}
,
  {"command": "hg-commit", "description": "Commit all staged or specified files to the repository.", "example": "hg commit"}
,
  {"command": "hg-init", "description": "Create a new repository in the specified directory.", "example": "hg init"}
,
  {"command": "hg-log", "description": "Display the revision history of the repository.", "example": "hg log"}
,
  {"command": "hg", "description": "Mercurial - a distributed source control management system.", "example": "hg {{command}}"}
,
  {"command": "hg-pull", "description": "Pull changes from a specified repository to the local repository.", "example": "hg pull"}
,
  {"command": "hg-push", "description": "Push changes from the local repository to a specified destination.", "example": "hg push"}
,
  {"command": "hg-remove", "description": "Remove specified files from the staging area.", "example": "hg remove {{path/to/file}}"}
,
  {"command": "hg-root", "description": "Display the root location of a Hg repository.", "example": "hg root"}
,
  {"command": "hg-serve", "description": "Start a standalone Mercurial web server for browsing repositories.", "example": "hg serve"}
,
  {"command": "hg-status", "description": "Show files that have changed in the working directory.", "example": "hg status"}
,
  {"command": "hg-update", "description": "Update the working directory to a specified changeset.", "example": "hg update"}
,
  {"command": "highlight", "description": "Outputs syntax-highlighted source code to a variety of formats.", "example": "highlight {{[-o|--out-format]}} {{html}} {{[-s|--style]}} {{theme_name}} {{[-S|--syntax]}} {{language}} {{path/to/source_code}}"}
,
  {"command": "hipstopgm", "description": "Read a HIPS file as input and return a PGM image as output.", "example": "hipstopgm {{path/to/file.hips}}"}
,
  {"command": "history", "description": "Command-line history.", "example": "history"}
,
  {"command": "hive", "description": "CLI tool for Apache Hive.", "example": "hive"}
,
  {"command": "hledger-accounts", "description": "List account names.", "example": "hledger {{[acc|accounts]}}"}
,
  {"command": "hledger-add", "description": "Record new transactions with interactive prompting in the console.", "example": "hledger add"}
,
  {"command": "hledger-aregister", "description": "Show the transactions and running balances in one account, with each transaction on one line.", "example": "hledger {{[areg|aregister]}} assets:bank:checking"}
,
  {"command": "hledger-balance", "description": "A flexible, general purpose \"summing\" report that shows accounts with some kind of numeric data.", "example": "hledger {{[bal|balance]}}"}
,
  {"command": "hledger-balancesheet", "description": "Show the end balances in asset and liability accounts.", "example": "hledger {{[bs|balancesheet]}}"}
,
  {"command": "hledger-import", "description": "Import new transactions from one or more data files to the main journal.", "example": "hledger import {{path/to/bank.csv}}"}
,
  {"command": "hledger-incomestatement", "description": "Show revenue inflows and expense outflows during the report period.", "example": "hledger {{[is|incomestatement]}}"}
,
  {"command": "hledger", "description": "A robust, friendly plain text accounting app.", "example": "hledger add"}
,
  {"command": "hledger-print", "description": "Show full journal entries, representing transactions.", "example": "hledger print"}
,
  {"command": "hledger-ui", "description": "A terminal interface (TUI) for `hledger`, a robust, friendly plain text accounting app.", "example": "hledger-ui"}
,
  {"command": "hledger-web", "description": "A web interface and API for `hledger`, a robust, friendly plain text accounting app.", "example": "hledger-web"}
,
  {"command": "hn", "description": "Command-line interface for Hacker News.", "example": "hn"}
,
  {"command": "holehe", "description": "Check if an email is attached to an account on sites like Twitter, Instagram, Imgur and over 120 others.", "example": "holehe {{username@example.org}}"}
,
  {"command": "home-manager", "description": "Manage a per-user environment using Nix, allowing declarative configuration of the user’s home.", "example": "home-manager build"}
,
  {"command": "hostapd", "description": "Start an access point using a wireless interface.", "example": "sudo hostapd {{path/to/hostapd.conf}}"}
,
  {"command": "hostess", "description": "Manage the `/etc/hosts` file.", "example": "hostess list"}
,
  {"command": "hostid", "description": "Print the numeric identifier for the current host (not necessarily the IP address).", "example": "hostid"}
,
  {"command": "host", "description": "Lookup Domain Name Server.", "example": "host {{domain}}"}
,
  {"command": "hostname", "description": "Show or set the system's host name.", "example": "hostname"}
,
  {"command": "hping3", "description": "Advanced ping utility which supports protocols such TCP, UDP, and raw IP.", "example": "hping3 --icmp --count {{4}} {{ip_or_hostname}}"}
,
  {"command": "hping", "description": "This command is an alias of `hping3`.", "example": "tldr hping3"}
,
  {"command": "hr", "description": "Print a horizontal rule in the terminal.", "example": "hr"}
,
  {"command": "hsd-cli", "description": "The REST tool for the Handshake blockchain.", "example": "hsd-cli info"}
,
  {"command": "hsw-cli", "description": "The REST tool for the Handshake wallet.", "example": "hsw-cli unlock {{passphrase}} {{timeout}}"}
,
  {"command": "html5validator", "description": "Validate HTML5.", "example": "html5validator {{path/to/file}}"}
,
  {"command": "htmlq", "description": "Use CSS selectors to extract content from HTML files.", "example": "cat {{path/to/file.html}} | htmlq '.card'"}
,
  {"command": "htop", "description": "Display dynamic real-time information about running processes. An enhanced version of `top`.", "example": "htop"}
,
  {"command": "htpasswd", "description": "Create and manage htpasswd files to protect web server directories using basic authentication.", "example": "htpasswd -c {{path/to/file}} {{username}}"}
,
  {"command": "httpflow", "description": "A utility to capture and dump HTTP streams.", "example": "httpflow -i {{any}}"}
,
  {"command": "httpie", "description": "Management interface for HTTPie.", "example": "httpie cli check-updates"}
,
  {"command": "httping", "description": "Measure the latency and throughput of a web server.", "example": "httping -g {{url}}"}
,
  {"command": "http", "description": "HTTPie: an HTTP client designed for testing, debugging, and generally interacting with APIs and HTTP servers.", "example": "http {{https://example.com}}"}
,
  {"command": "httprobe", "description": "Take a list of domains and probe for working HTTP and HTTPS servers.", "example": "cat {{input_file}} | httprobe"}
,
  {"command": "httpry", "description": "A lightweight packet sniffer for displaying and logging HTTP traffic.", "example": "httpry -o {{path/to/file.log}}"}
,
  {"command": "http-server", "description": "Simple static HTTP server to serve static files.", "example": "http-server"}
,
  {"command": "http-server-upload", "description": "Zero-configuration HTTP server which provides a lightweight interface to upload files.", "example": "http-server-upload"}
,
  {"command": "https", "description": "This command is an alias of `http`.", "example": "tldr http"}
,
  {"command": "httpx", "description": "A fast and multi-purpose HTTP toolkit written in Go to run multiple probes at once.", "example": "httpx -probe {{[-u|-target]}} {{url|host|ipaddress|subnet_with_cidr}}"}
,
  {"command": "hub-branch", "description": "Create a branch or show current branch.", "example": "hub branch"}
,
  {"command": "hub-browse", "description": "Open a GitHub repository in the browser or print the URL.", "example": "hub browse"}
,
  {"command": "hub-ci-status", "description": "Display status of GitHub checks.", "example": "hub ci-status {{[-v|--verbose]}}"}
,
  {"command": "hub-clone", "description": "Clone an existing repository.", "example": "hub clone {{remote_repository_location}}"}
,
  {"command": "hub-create", "description": "Create a new repository on GitHub.", "example": "hub create"}
,
  {"command": "hub-delete", "description": "Delete an existing repository on GitHub.", "example": "hub delete {{repo}}"}
,
  {"command": "hub-fork", "description": "Fork a GitHub repo. Like `git fork` from `git-extras`.", "example": "hub fork {{tldr-pages/tldr}}"}
,
  {"command": "hub-init", "description": "Initializes a new local Git repository.", "example": "hub init"}
,
  {"command": "hub-issue", "description": "Manage Github issues.", "example": "hub issue list {{[-L|--limit]}} {{10}} {{[-l|--labels]}} \"{{bug}}\""}
,
  {"command": "hub", "description": "A wrapper for Git that adds commands for working with GitHub-based projects.", "example": "hub clone {{username}}/{{repo_name}}"}
,
  {"command": "huggingface-cli", "description": "Interact with Hugging Face Hub.", "example": "huggingface-cli login"}
,
  {"command": "hugo", "description": "Template-based static site generator. Uses modules, components, and themes.", "example": "hugo new site {{path/to/site}}"}
,
  {"command": "hugo-server", "description": "Build and serve a site with Hugo's built-in webserver.", "example": "hugo server"}
,
  {"command": "hunspell", "description": "Check spelling.", "example": "hunspell {{path/to/file}}"}
,
  {"command": "husky", "description": "Native Git hooks made easy.", "example": "husky install"}
,
  {"command": "hut", "description": "A CLI tool for sourcehut.", "example": "hut init"}
,
  {"command": "hx", "description": "This command is an alias of `helix`.", "example": "tldr helix"}
,
  {"command": "hydra", "description": "Online password guessing tool.", "example": "hydra-wizard"}
,
  {"command": "hyperfine", "description": "A benchmarking tool.", "example": "hyperfine '{{make}}'"}
,
  {"command": "i3lock", "description": "Simple screen locker built for the i3 window manager.", "example": "i3lock"}
,
  {"command": "i3", "description": "A tiling window manager for X11.", "example": "i3"}
,
  {"command": "ia", "description": "Tool to interact with `archive.org`.", "example": "ia configure"}
,
  {"command": "ibmcloud-login", "description": "Log in to the IBM Cloud.", "example": "ibmcloud login"}
,
  {"command": "ibmcloud", "description": "A tool for managing IBM Cloud apps and services.", "example": "ibmcloud update"}
,
  {"command": "ical", "description": "View Hirji/Islamic and Gregorian calendars and convert their dates.", "example": "ical"}
,
  {"command": "icontopbm", "description": "This command has been superseded by `sunicontopnm`.", "example": "tldr sunicontopnm"}
,
  {"command": "iconv", "description": "Convert text from one encoding to another.", "example": "iconv {{[-f|--from-code]}} {{from_encoding}} {{[-t|--to-code]}} {{to_encoding}} {{input_file}}"}
,
  {"command": "id3tag", "description": "Read, write, and manipulate ID3v1 and ID3v2 tags of MP3 files.", "example": "id3tag --artist {{artist}} --song {{song_title}} {{path/to/file.mp3}}"}
,
  {"command": "idea", "description": "JetBrains Java and Kotlin IDE.", "example": "idea {{path/to/directory}}"}
,
  {"command": "identify", "description": "This command is an alias of `magick identify`.", "example": "tldr magick identify"}
,
  {"command": "idevicebackup2", "description": "Create or restore backups for devices running iOS 4 or later.", "example": "idevicebackup2 backup {{path/to/directory}}"}
,
  {"command": "idevicebackup", "description": "Create or restore backups for iOS devices.", "example": "idevicebackup backup {{path/to/directory}}"}
,
  {"command": "idevicecrashreport", "description": "Retrieve crash reports from an iOS device.", "example": "idevicecrashreport {{path/to/directory}}"}
,
  {"command": "idevicedate", "description": "Display the current date or set it on an iOS device.", "example": "idevicedate"}
,
  {"command": "idevicediagnostics", "description": "Interact with the diagnostics interface of an iOS device.", "example": "idevicediagnostics diagnostics"}
,
  {"command": "idevice_id", "description": "List attached iOS devices or print the device name of a given device.", "example": "idevice_id --list"}
,
  {"command": "ideviceimagemounter", "description": "Mount disk images on an iOS device.", "example": "ideviceimagemounter {{path/to/image_file}} {{path/to/signature_file}}"}
,
  {"command": "ideviceinfo", "description": "Show information about the first connected iOS device.", "example": "ideviceinfo"}
,
  {"command": "idevicename", "description": "Display the device name or set it to a new name.", "example": "idevicename"}
,
  {"command": "idevicepair", "description": "Manage host pairings with iOS devices.", "example": "idevicepair pair"}
,
  {"command": "idevicescreenshot", "description": "Get a screenshot from the connected iOS device.", "example": "idevicescreenshot"}
,
  {"command": "idevicesetlocation", "description": "Simulate a location on an iOS device.", "example": "idevicesetlocation {{latitude}} {{longitude}}"}
,
  {"command": "idevicesyslog", "description": "Relay syslog messages from a connected iOS device.", "example": "idevicesyslog"}
,
  {"command": "id", "description": "Display current user and group identity.", "example": "id"}
,
  {"command": "idnits", "description": "Check internet-drafts for submission nits.", "example": "idnits {{path/to/file.txt}}"}
,
  {"command": "iex", "description": "IEx is the interactive shell for Elixir.", "example": "iex"}
,
  {"command": "ifconfig", "description": "Network Interface Configurator.", "example": "ifconfig {{interface_name}}"}
,
  {"command": "ifdata", "description": "Display information about a network interface.", "example": "ifdata -p {{eth0}}"}
,
  {"command": "if", "description": "Performs conditional processing in shell scripts.", "example": "if {{condition_command}}; then {{echo \"Condition is true\"}}; fi"}
,
  {"command": "ifne", "description": "Run a command depending on the emptyness of `stdin`.", "example": "ifne {{command options ...}}"}
,
  {"command": "ifs", "description": "IFS (Internal Field Separator) is a special environment variable that defines the delimiter used for word splitting in Unix shells.", "example": "echo \"$IFS\""}
,
  {"command": "ignite", "description": "A CLI for React Native boilerplates, plugins, generators, and more.", "example": "ignite new {{project_name}}"}
,
  {"command": "ilbmtoppm", "description": "Convert an ILBM file to a PPM image.", "example": "ilbmtoppm {{path/to/file.ilbm}} > {{path/to/file.ppm}}"}
,
  {"command": "imapsync", "description": "Email IMAP tool for syncing, copying and migrating email mailboxes between two IMAP servers, one way, and without duplicates.", "example": "imapsync --host1 {{host1}} --user1 {{user1}} --password1 {{secret1}} --host2 {{host2}} --user2 {{user2}} --password2 {{secret2}}"}
,
  {"command": "img2pdf", "description": "Losslessly convert raster images to a PDF file.", "example": "img2pdf {{path/to/image1.ext path/to/image2.ext ...}} --output {{path/to/file.pdf}}"}
,
  {"command": "img2sixel", "description": "Convert images to the Sixel format for displaying in a terminal.", "example": "img2sixel {{path/to/image}}"}
,
  {"command": "imgcat", "description": "Display images on the command-line.", "example": "imgcat {{path/to/file}}"}
,
  {"command": "imgtoppm", "description": "Convert various image file formats to the PPM (Portable Pixmap) format.", "example": "imgtoppm {{path/to/input}} > {{path/to/output.ppm}}"}
,
  {"command": "immich-cli", "description": "Immich command-line interface (CLI) that allows you to perform certain actions.", "example": "immich login {{server_url/api}} {{server_key}}"}
,
  {"command": "immich-go", "description": "Immich-Go is an open-source tool designed to streamline uploading large photo collections to your self-hosted Immich server.", "example": "immich-go -server={{server_url}} -key={{server_key}} upload {{path/to/takeout_file.zip}}"}
,
  {"command": "impacket-getadusers", "description": "This command is an alias of `GetADUsers.py`.", "example": "tldr GetADUsers.py"}
,
  {"command": "impacket-getarch", "description": "This command is an alias of `getArch.py`.", "example": "tldr getArch.py"}
,
  {"command": "impacket-getnpusers", "description": "This command is an alias of `GetNPUsers.py`.", "example": "tldr GetNPUsers.py"}
,
  {"command": "impacket-getuserspns", "description": "This command is an alias of `GetUserSPNs.py`.", "example": "tldr GetUserSPNs.py"}
,
  {"command": "impacket-mqtt_check", "description": "This command is an alias of `mqtt_check.py`.", "example": "tldr mqtt_check.py"}
,
  {"command": "impacket-mssqlclient", "description": "This command is an alias of `mssqlclient.py`.", "example": "tldr mssqlclient.py"}
,
  {"command": "impacket-ntfs-read", "description": "This command is an alias of `ntfs-read.py`.", "example": "tldr ntfs-read.py"}
,
  {"command": "impacket-ping6", "description": "This command is an alias of `ping6.py`.", "example": "tldr ping6.py"}
,
  {"command": "impacket-ping", "description": "This command is an alias of `ping.py`.", "example": "tldr ping.py"}
,
  {"command": "impacket-rpcdump", "description": "This command is an alias of `rpcdump.py`.", "example": "tldr rpcdump.py"}
,
  {"command": "impacket-rpcmap", "description": "This command is an alias of `rpcmap.py`.", "example": "tldr rpcmap.py"}
,
  {"command": "impacket-secretsdump", "description": "This command is an alias of `secretsdump.py`.", "example": "tldr secretsdump.py"}
,
  {"command": "impacket-smbclient", "description": "This command is an alias of `smbclient.py`.", "example": "tldr smbclient.py"}
,
  {"command": "impacket-smbserver", "description": "This command is an alias of `smbserver.py`.", "example": "tldr smbserver.py"}
,
  {"command": "impacket-sniffer", "description": "This command is an alias of `sniffer.py`.", "example": "tldr sniffer.py"}
,
  {"command": "impacket-sniff", "description": "This command is an alias of `sniff.py`.", "example": "tldr sniff.py"}
,
  {"command": "import", "description": "This command is an alias of `magick import`.", "example": "tldr magick import"}
,
  {"command": "in2csv", "description": "Convert various tabular data formats to CSV.", "example": "in2csv {{data.xls}}"}
,
  {"command": "incus", "description": "Modern, secure and powerful system container and virtual machine manager.", "example": "incus list"}
,
  {"command": "indent", "description": "Change the appearance of a C/C++ program by inserting or deleting whitespace.", "example": "indent {{[-linux|--linux-style]}} {{path/to/source.c}} {{path/to/another_source.c}}"}
,
  {"command": "infection", "description": "A mutation testing framework for PHP.", "example": "infection"}
,
  {"command": "influx", "description": "InfluxDB v1 client.", "example": "influx"}
,
  {"command": "info", "description": "Read documentation stored in the info format.", "example": "info"}
,
  {"command": "initdb", "description": "Create a PostgreSQL database on disk.", "example": "initdb {{[-D|--pgdata]}} /usr/local/var/postgres"}
,
  {"command": "inkmake", "description": "GNU Makefile-style SVG exporting using Inkscape's backend.", "example": "inkmake {{path/to/Inkfile}}"}
,
  {"command": "inkscape", "description": "An SVG (Scalable Vector Graphics) editing program.", "example": "inkscape {{path/to/file.svg}}"}
,
  {"command": "inkview", "description": "Inkscape graphical SVG previewer.", "example": "inkview {{path/to/file.svg}}"}
,
  {"command": "in", "description": "This shell keyword is used with `for` to separate the iterator and items to iterate.", "example": "tldr for"}
,
  {"command": "install", "description": "Copy files and set attributes.", "example": "install {{path/to/source_file1 path/to/source_file2 ...}} {{path/to/destination}}"}
,
  {"command": "install-nodeversion", "description": "Install Node.js runtime versions for `ps-nvm`.", "example": "Install-NodeVersion {{node_version}}"}
,
  {"command": "install-tl", "description": "TeX Live cross-platform installer.", "example": "install-tl -no-gui"}
,
  {"command": "interdiff", "description": "Show differences between two diff files.", "example": "interdiff {{old_file}} {{new_file}}"}
,
  {"command": "in-toto-record", "description": "Create a signed link metadata file to provide evidence for supply chain steps.", "example": "in-toto-record start {{[-n|--step-name]}} {{path/to/edit_file1 path/to/edit_file2 ...}} -k {{path/to/key_file}} {{[-m|--materials]}} {{.}}"}
,
  {"command": "in-toto-run", "description": "Generating link metadata while carrying out a supply chain step.", "example": "in-toto-run {{[-n|--step-name]}} {{tag}} {{[-p|--products]}} {{.}} -k {{key_file}} -- {{git tag v1.0}}"}
,
  {"command": "in-toto-sign", "description": "Sign in-toto link or layout metadata or verify their signatures.", "example": "in-toto-sign {{[-f|--file]}} {{unsigned.layout}} {{[-k|--keep]}} {{priv_key1}} {{priv_key2}} {{[-o|--output]}} {{root.layout}}"}
,
  {"command": "ionic", "description": "A framework to build hybrid mobile apps.", "example": "ionic start"}
,
  {"command": "ioping", "description": "Monitor I/O latency in real time.", "example": "ioping ."}
,
  {"command": "iotop", "description": "Display a table of current I/O usage by processes or threads.", "example": "sudo iotop"}
,
  {"command": "ipaggcreate", "description": "Produce aggregate statistics of TCP/IP dumps.", "example": "ipaggcreate --src {{path/to/file.pcap}}"}
,
  {"command": "ipaggmanip", "description": "Manipulate aggregate statistics produced by `ipaggcreate`.", "example": "ipaggmanip {{[-p|--prefix]}} {{16}} {{path/to/file}}"}
,
  {"command": "ipcalc", "description": "Calculate IP information (subnet, broadcast, host range) from an IP address and netmask.", "example": "ipcalc {{192.168.0.1}}"}
,
  {"command": "ipcs", "description": "Show information about the usage of XSI IPC facilities: shared memory segments, message queues, and semaphore arrays.", "example": "ipcs -a"}
,
  {"command": "iperf3", "description": "Traffic generator for testing network bandwidth.", "example": "iperf3 {{[-s|--server]}}"}
,
  {"command": "iperf", "description": "Measure network bandwidth between computers.", "example": "iperf {{[-s|--server]}}"}
,
  {"command": "ipfs", "description": "Inter Planetary File System.", "example": "ipfs add {{path/to/file}}"}
,
  {"command": "ipmitool", "description": "Interface with the Intelligent Platform Management Interface (IPMI).", "example": "sudo ipmitool shell"}
,
  {"command": "ippevepcl", "description": "Print to B&W HP PCL laser printers.", "example": "ippeveps {{path/to/file}}"}
,
  {"command": "ippeveprinter", "description": "A simple IPP Everywhere printer server.", "example": "ippeveprinter \"{{service_name}}\""}
,
  {"command": "ippeveps", "description": "Print to Adobe PostScript printers.", "example": "ippeveps {{path/to/file}}"}
,
  {"command": "ippfind", "description": "Find services registered with a DNS server or available through local devices.", "example": "ippfind {{[-l|--ls]}}"}
,
  {"command": "ipptool", "description": "Issue IPP requests and receive printer's/server's responses.", "example": "ipptool ipp://{{printer_uri}} get-completed-jobs.test"}
,
  {"command": "iproxy", "description": "A proxy that binds local TCP ports to be forwarded to the specified ports on a usbmux device.", "example": "iproxy {{local_port}}:{{device_port}}"}
,
  {"command": "ipscan", "description": "A fast network scanner designed to be simple to use.", "example": "ipscan {{192.168.0.1}}"}
,
  {"command": "ipsumdump", "description": "Summarise TCP/IP dumps into a human and machine readable ASCII format.", "example": "ipsumdump --src --dst {{path/to/file.pcap}}"}
,
  {"command": "ipython", "description": "A Python shell with automatic history, dynamic object introspection, easier configuration, command completion, access to the system shell and more.", "example": "ipython"}
,
  {"command": "irb", "description": "Interactive Ruby shell.", "example": "irb"}
,
  {"command": "irssi", "description": "Text based IRC client.", "example": "irssi {{[-n|--nick]}} {{nickname}} {{[-c|--connect]}} {{irc.example.com}}"}
,
  {"command": "isisdl", "description": "A downloading utility for ISIS of TU-Berlin. Download all your files and videos from ISIS.", "example": "isisdl"}
,
  {"command": "ispell", "description": "Interactive spell checking.", "example": "ispell"}
,
  {"command": "is-up", "description": "Check whether a website is up or down.", "example": "is-up {{example.com}}"}
,
  {"command": "isutf8", "description": "Check whether text files contain valid UTF-8.", "example": "isutf8 {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "iverilog", "description": "Preprocesses and compiles Verilog HDL (IEEE-1364) code into executable programs for simulation.", "example": "iverilog {{path/to/source.v}} -o {{path/to/executable}}"}
,
  {"command": "ivpn", "description": "Interface for the IVPN client.", "example": "ivpn status"}
,
  {"command": "jadx", "description": "Dex to Java decompiler.", "example": "jadx {{path/to/file}}"}
,
  {"command": "jar", "description": "Java applications/libraries packager.", "example": "jar cf {{file.jar}} *"}
,
  {"command": "jarsigner", "description": "Sign and verify Java archive (JAR) files.", "example": "jarsigner {{path/to/file.jar}} {{keystore_alias}}"}
,
  {"command": "javac", "description": "Java application compiler.", "example": "javac {{path/to/file.java}}"}
,
  {"command": "javadoc", "description": "Generate Java API documentation in HTML format from source code.", "example": "javadoc -d {{path/to/directory/}} {{path/to/java_source_code}}"}
,
  {"command": "java", "description": "Java application launcher.", "example": "java {{classname}}"}
,
  {"command": "javap", "description": "Disassemble class files and list them.", "example": "javap {{path/to/file1.class path/to/file2.class ...}}"}
,
  {"command": "jbang", "description": "Easily create, edit and run self-contained source-only Java programs.", "example": "jbang init {{path/to/file.java}}"}
,
  {"command": "jcal", "description": "Display calendar information in the Jalali format, with the current day highlighted.", "example": "jcal"}
,
  {"command": "jc.json", "description": "Convert the output of multiple commands to JSON.", "example": "{{ifconfig}} | jc {{--ifconfig}}"}
,
  {"command": "jc", "description": "`jc` can refer to multiple commands with the same name.", "example": "tldr jc.json"}
,
  {"command": "jco", "description": "This command is an alias of `autojump`.", "example": "tldr autojump"}
,
  {"command": "jdeps", "description": "Java class dependency analyzer.", "example": "jdeps {{path/to/filename.class}}"}
,
  {"command": "jdupes", "description": "A powerful duplicate file finder and an enhanced fork of `fdupes`.", "example": "jdupes {{path/to/directory}}"}
,
  {"command": "jekyll", "description": "A simple, blog-aware, static site generator.", "example": "jekyll serve"}
,
  {"command": "jello", "description": "A JSON processor using Python syntax.", "example": "cat {{file.json}} | jello"}
,
  {"command": "jenv", "description": "Manage the \"JAVA_HOME\" environment variable.", "example": "jenv add {{path/to/jdk_home}}"}
,
  {"command": "jest", "description": "A zero-configuration JavaScript testing platform.", "example": "jest"}
,
  {"command": "jetifier", "description": "Jetifier AndroidX transition tool in npm format, with a react-native compatible style.", "example": "jetifier"}
,
  {"command": "jf", "description": "Interact with JFrog products like Artifactory, Xray, Distribution, Pipelines and Mission Control.", "example": "jf config add"}
,
  {"command": "jfrog", "description": "This command is an alias of `jf`.", "example": "tldr jf"}
,
  {"command": "jhat", "description": "Java heap analysis tool.", "example": "jhat {{dump_file.bin}}"}
,
  {"command": "jhipster", "description": "Web application generator using either monolithic or microservices architecture.", "example": "jhipster"}
,
  {"command": "jhsdb", "description": "Attach to a Java process or launch a postmortem debugger to analyze the core dump from a crashed Java Virtual Machine.", "example": "jhsdb jstack --pid {{pid}}"}
,
  {"command": "jigsaw", "description": "A Laravel-based static site builder for PHP.", "example": "jigsaw init"}
,
  {"command": "jira", "description": "Interface (third party) for interacting with Jira.", "example": "jira issue list"}
,
  {"command": "jj-abandon", "description": "Abandon a revision, rebasing descendants onto its parent(s).", "example": "jj abandon {{revsets}}"}
,
  {"command": "jj-absorb", "description": "Split changes in the source revision and move each change to the closest mutable ancestor where the corresponding lines were modified last.", "example": "jj absorb {{[-f|--from]}} {{revset}} {{[-t|--into]}} {{revsets}}"}
,
  {"command": "jj-bookmark", "description": "Manage bookmarks in a `jj` repository.", "example": "jj {{[b|bookmark]}} {{[c|create]}} {{[-r|--revision]}} {{revision}} {{name}}"}
,
  {"command": "jj-commit", "description": "Update the description and create a new change on top.", "example": "jj commit"}
,
  {"command": "jj-describe", "description": "Update the change description or other metadata.", "example": "jj {{[desc|describe]}}"}
,
  {"command": "jj-diff", "description": "Compare file contents between two revisions.", "example": "jj diff"}
,
  {"command": "jj-edit", "description": "Set the specified revision as the working-copy revision.", "example": "jj edit {{revset}}"}
,
  {"command": "jj-evolog", "description": "Show how a change has evolved over time, listing the previous commits it has pointed to.", "example": "jj evolog {{[-r|--revision]}} {{revset}}"}
,
  {"command": "jj-git", "description": "Run Git-related commands for a `jj` repository.", "example": "jj git init"}
,
  {"command": "jj-log", "description": "Show revision history as a graph.", "example": "jj log"}
,
  {"command": "jj", "description": "Jujutsu, a version control system.", "example": "jj {{[desc|describe]}} {{[-r|--revision]}} {{revsets}}"}
,
  {"command": "jj-new", "description": "Create a new empty change.", "example": "jj new"}
,
  {"command": "jj-operation", "description": "Work with the operation log of a `jj` repository.", "example": "jj {{[op|operation]}} log"}
,
  {"command": "jj-parallelize", "description": "Parallelize revisions by making them siblings.", "example": "jj parallelize {{revsets}}"}
,
  {"command": "jj-rebase", "description": "Move revisions to different parent(s).", "example": "jj rebase {{[-r|--revisions]}} {{revset}} {{[-d|--destination]}} {{revset}}"}
,
  {"command": "jj-resolve", "description": "Resolve conflicted files with an external merge tool.", "example": "jj resolve"}
,
  {"command": "jj-restore", "description": "Restore files from another revision.", "example": "jj restore {{[-f|--from]}} {{revset}} {{[-t|--into]}} {{revset}} {{filesets}}"}
,
  {"command": "jj-revert", "description": "Apply the reverse of the given revision(s).", "example": "jj revert {{[-r|--revisions]}} {{revsets}}"}
,
  {"command": "jj-show", "description": "Show commit description and changes in a revision.", "example": "jj show {{revset}}"}
,
  {"command": "jj-simplify-parents", "description": "Simplify parent edges for the specified revision(s).", "example": "jj simplify-parents {{[-r|--revisions]}} {{revsets}}"}
,
  {"command": "jj-split", "description": "Split a revision in two.", "example": "jj split {{[-r|--revision]}} {{revision}}"}
,
  {"command": "jj-squash", "description": "Move changes from a revision into another revision.", "example": "jj squash"}
,
  {"command": "jj-status", "description": "Show high-level repository status.", "example": "jj {{[st|status]}}"}
,
  {"command": "jmap", "description": "Java memory map tool.", "example": "jmap {{java_pid}}"}
,
  {"command": "j", "description": "This command is an alias of `autojump`.", "example": "tldr autojump"}
,
  {"command": "jmeter", "description": "Open source Java application designed for load testing functional behavior and measure performance.", "example": "jmeter --nongui --testfile {{path/to/file.jmx}}"}
,
  {"command": "jmtpfs", "description": "FUSE-based filesystem for accessing MTP devices.", "example": "jmtpfs {{path/to/directory}}"}
,
  {"command": "jobs", "description": "Display status of jobs in the current session.", "example": "jobs"}
,
  {"command": "joe", "description": "Joe's own text editor.", "example": "joe"}
,
  {"command": "john", "description": "Password cracker.", "example": "john {{path/to/hashes.txt}}"}
,
  {"command": "join", "description": "Join lines of two sorted files on a common field.", "example": "join {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "jo", "description": "This command is an alias of `autojump`.", "example": "tldr autojump"}
,
  {"command": "josm", "description": "Extensible OpenStreetMap editor for Java 8+.", "example": "josm"}
,
  {"command": "jp2a", "description": "Convert JPEG images to ASCII.", "example": "jp2a {{path/to/image.jpeg}}"}
,
  {"command": "jpegoptim", "description": "Optimise JPEG images.", "example": "jpegoptim {{image1.jpeg image2.jpeg image3.jpeg ...}}"}
,
  {"command": "jpegtopnm", "description": "Convert a JPEG/JFIF file to the PPM or PGM format.", "example": "jpegtopnm {{path/to/file.jpg}} > {{path/to/file.pnm}}"}
,
  {"command": "jps", "description": "Show JVM process status of current user.", "example": "jps"}
,
  {"command": "jq", "description": "A JSON processor that uses a domain-specific language (DSL).", "example": "jq '.' {{/path/to/file.json}}"}
,
  {"command": "jrnl", "description": "A simple journal application.", "example": "jrnl"}
,
  {"command": "json5", "description": "Convert JSON5 files to JSON.", "example": "echo {{input}} | json5"}
,
  {"command": "jstack", "description": "Java stack trace tool.", "example": "jstack {{java_pid}}"}
,
  {"command": "jtbl", "description": "Utility to print JSON and JSON Lines data as a table in the terminal.", "example": "cat {{file.json}} | jtbl"}
,
  {"command": "julia", "description": "A high-level, high-performance dynamic programming language for technical computing.", "example": "julia"}
,
  {"command": "jupyter-lab", "description": "Interactive development environment for Jupyter notebooks.", "example": "jupyter lab"}
,
  {"command": "jupyterlab", "description": "This command is an alias of `jupyter lab`.", "example": "tldr jupyter lab"}
,
  {"command": "jupyter", "description": "Web application to create and share documents that contain code, visualizations and notes.", "example": "jupyter notebook"}
,
  {"command": "jupytext", "description": "Convert Jupyter notebooks to plain text documents, and back again.", "example": "jupytext --set-formats ipynb,py {{notebook.ipynb}}"}
,
  {"command": "just.1", "description": "Save and run project-specific commands.", "example": "just {{recipe}}"}
,
  {"command": "just", "description": "`just` can refer to multiple commands with the same name.", "example": "tldr just.1"}
,
  {"command": "jwt", "description": "Work with JSON Web Tokens (JWTs).", "example": "jwt decode {{jwt_string}}"}
,
  {"command": "k3d", "description": "A wrapper to easily create k3s clusters inside Docker.", "example": "k3d cluster create {{cluster_name}}"}
,
  {"command": "k3s", "description": "Install and manage lightweight Kubernetes clusters.", "example": "k3s kubectl get nodes"}
,
  {"command": "k6", "description": "Open source load testing tool and SaaS for engineering teams.", "example": "k6 run {{script.js}}"}
,
  {"command": "k8sec", "description": "Manage Kubernetes secrets.", "example": "k8sec list"}
,
  {"command": "k8s-unused-secret-detector", "description": "Detect unused Kubernetes secrets.", "example": "k8s-unused-secret-detector"}
,
  {"command": "k9s", "description": "View and manage Kubernetes clusters.", "example": "k9s --context {{kubeconfig_context_name}}"}
,
  {"command": "kafkacat", "description": "This command is an alias of `kcat`.", "example": "tldr kcat"}
,
  {"command": "kaggle", "description": "Official CLI for Kaggle implemented in Python 3.", "example": "kaggle config view"}
,
  {"command": "kahlan", "description": "A unit and Behaviour Driven Development test framework for PHP.", "example": "kahlan"}
,
  {"command": "kak", "description": "Kakoune is a mode-based code editor implementing the \"multiple selections\" paradigm.", "example": "kak {{path/to/file}}"}
,
  {"command": "katana", "description": "A fast crawler focused on execution in automation pipelines offering both headless and non-headless crawling.", "example": "katana -list {{https://example.com,https://google.com,...}}"}
,
  {"command": "kate", "description": "KDE's advanced text editor.", "example": "kate {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "kcadm.sh", "description": "Perform administration tasks.", "example": "kcadm.sh config credentials --server {{host}} --realm {{realm_name}} --user {{username}} --password {{password}}"}
,
  {"command": "kcat", "description": "Apache Kafka producer and consumer tool.", "example": "kcat -C -t {{topic}} -b {{brokers}}"}
,
  {"command": "kdeconnect-cli", "description": "Use KDE Connect for sharing files or text to a device, ringing it, unlocking it, and much more.", "example": "kdeconnect-cli --list-devices"}
,
  {"command": "kdenlive", "description": "KDE's non-linear video editor.", "example": "kdenlive"}
,
  {"command": "kdig", "description": "Advanced DNS lookup utility.", "example": "kdig {{example.com}}"}
,
  {"command": "keepass2", "description": "A light-weight password manager.", "example": "keepass2"}
,
  {"command": "keepassxc-cli", "description": "Interface for KeepassXC.", "example": "keepassxc-cli search {{path/to/database_file}} {{name}}"}
,
  {"command": "keep-header", "description": "Keep first line untouched by a command, passing it directly to `stdout`.", "example": "keep-header {{path/to/file}} -- sort"}
,
  {"command": "keybase", "description": "Key directory that maps social media identities to encryption keys in a publicly auditable manner.", "example": "keybase follow {{username}}"}
,
  {"command": "keychain", "description": "Re-use ssh-agent and/or gpg-agent between logins.", "example": "keychain"}
,
  {"command": "keytool", "description": "A certificate management utility included with Java.", "example": "keytool -genkeypair -v -keystore {{path/to/file.keystore}} -alias {{key_name}}"}
,
  {"command": "khal", "description": "A text-based calendar and scheduling application.", "example": "ikhal"}
,
  {"command": "killall", "description": "Send kill signal to all instances of a process by name (must be exact name).", "example": "killall {{process_name}}"}
,
  {"command": "kill", "description": "Sends a signal to a process, usually related to stopping the process.", "example": "kill {{process_id}}"}
,
  {"command": "kind", "description": "Run local Kubernetes clusters using Docker container \"nodes\".", "example": "kind create cluster --name {{cluster_name}}"}
,
  {"command": "kinit", "description": "Authenticate a principal with a Kerberos server to gain and cache a ticket.", "example": "kinit {{username}}"}
,
  {"command": "kismet", "description": "A wireless network and device detector, sniffer, wardriving tool, and WIDS (wireless intrusion detection) framework.", "example": "sudo kismet -c {{wlan0}}"}
,
  {"command": "kite", "description": "This command is an alias of `kiterunner`.", "example": "tldr kiterunner"}
,
  {"command": "kiterunner-brute", "description": "A contextual web scanner for bruteforcing API paths and web endpoints using wordlists.", "example": "kiterunner brute {{https://example.com}} {{[-A|--assetnote-wordlist]}} {{apiroutes-210328:20000}}"}
,
  {"command": "kiterunner-kb", "description": "A contextual web scanner for manipulating kitebuilder schemas used in API and web endpoint discovery.", "example": "kiterunner kb compile {{path/to/wordlist.json}} {{path/to/wordlist.kite}}"}
,
  {"command": "kiterunner", "description": "A contextual web scanner for discovering API paths and web endpoints using wordlists and kitebuilder schemas.", "example": "tldr kiterunner brute"}
,
  {"command": "kiterunner-scan", "description": "A contextual web scanner for concurrently scanning API paths and web endpoints using kitebuilder wordlists.", "example": "kiterunner scan {{https://example.com}} {{[-A|--assetnote-wordlist]}} {{apiroutes-210228:5000}}"}
,
  {"command": "kiterunner-wordlist", "description": "A contextual web scanner for managing wordlists used in API and web endpoint discovery.", "example": "kiterunner wordlist list"}
,
  {"command": "kitex", "description": "Code generation tool provided by the Go RPC framework Kitex.", "example": "kitex {{path/to/IDL_file.thrift}}"}
,
  {"command": "kitty", "description": "A fast, feature-rich, GPU based terminal emulator.", "example": "kitty"}
,
  {"command": "kiwi-ng", "description": "An OS image and appliance builder.", "example": "kiwi-ng system build --description={{path/to/directory}} --target-dir={{path/to/directory}}"}
,
  {"command": "knife", "description": "Interact with a Chef server from a local Chef repo.", "example": "knife bootstrap {{fqdn_or_ip}}"}
,
  {"command": "knotc", "description": "Control knot DNS server.", "example": "knotc zone-begin {{zone}}"}
,
  {"command": "komac", "description": "Create WinGet manifests for the `winget-pkgs` repository.", "example": "komac new {{Package.Identifier}} --version {{1.2.3}} --urls {{https://example.com/app.exe}}"}
,
  {"command": "kompose", "description": "Convert docker-compose applications to Kubernetes.", "example": "kompose up {{[-f|--file]}} {{docker-compose.yml}}"}
,
  {"command": "kool", "description": "Build software development environments.", "example": "kool create {{preset}} {{project_name}}"}
,
  {"command": "kopia", "description": "Fast, secure open-source backup tool.", "example": "kopia repository create filesystem --path {{path/to/local_repository}}"}
,
  {"command": "kops", "description": "Create, destroy, upgrade and maintain Kubernetes clusters.", "example": "kops create cluster {{[-f|--filename]}} {{cluster_name.yaml}}"}
,
  {"command": "kosmorro", "description": "Compute the ephemerides and the events for a date at a position on Earth.", "example": "kosmorro --latitude={{48.7996}} --longitude={{2.3511}}"}
,
  {"command": "kotlinc", "description": "Kotlin compiler.", "example": "kotlinc"}
,
  {"command": "kotlin", "description": "Kotlin application launcher.", "example": "kotlin {{filename.jar}}"}
,
  {"command": "krita", "description": "A sketching and painting program designed for digital artists.", "example": "krita"}
,
  {"command": "kr", "description": "This command is an alias of `kiterunner`.", "example": "tldr kiterunner"}
,
  {"command": "krunvm", "description": "Create MicroVMs from OCI images.", "example": "krunvm create {{docker.io/fedora}} --cpus {{number_of_vcpus}} --mem {{memory_in_megabytes}} --name \"{{name}}\""}
,
  {"command": "ksh", "description": "Korn Shell, a Bash-compatible command-line interpreter.", "example": "ksh"}
,
  {"command": "kubeadm", "description": "Interface for creating and managing Kubernetes clusters.", "example": "kubeadm init"}
,
  {"command": "kube-capacity", "description": "Provide an overview of resource requests, limits, and utilization in a Kubernetes cluster.", "example": "kube-capacity"}
,
  {"command": "kubectl-apply", "description": "Manage applications through files defining Kubernetes resources.", "example": "kubectl apply {{[-f|--filename]}} {{resource_filename}}"}
,
  {"command": "kubectl-config", "description": "Manage Kubernetes configuration (kubeconfig) files for accessing clusters via `kubectl` or the Kubernetes API.", "example": "kubectl config get-contexts"}
,
  {"command": "kubectl-create", "description": "Create a resource from a file or from `stdin`.", "example": "kubectl create {{[-f|--filename]}} {{path/to/file.yml}}"}
,
  {"command": "kubectl-delete", "description": "Delete Kubernetes resources.", "example": "kubectl delete pod {{pod_name}}"}
,
  {"command": "kubectl-describe", "description": "Show details of Kubernetes objects and resources.", "example": "kubectl describe pods {{[-n|--namespace]}} {{namespace}}"}
,
  {"command": "kubectl-edit", "description": "Edit Kubernetes resources.", "example": "kubectl edit pod/{{pod_name}}"}
,
  {"command": "kubectl-expose", "description": "Expose a resource as a new Kubernetes service.", "example": "kubectl expose {{resource_type}} {{resource_name}} --port={{node_port}} --target-port={{container_port}}"}
,
  {"command": "kubectl-get", "description": "Get Kubernetes objects and resources.", "example": "kubectl get namespaces"}
,
  {"command": "kubectl-label", "description": "Label Kubernetes resources.", "example": "kubectl label pod {{pod_name}} {{key}}={{value}}"}
,
  {"command": "kubectl-logs", "description": "Show logs for containers in a pod.", "example": "kubectl logs {{pod_name}}"}
,
  {"command": "kubectl", "description": "Run commands against Kubernetes clusters.", "example": "kubectl get {{pod|service|deployment|ingress|...}} {{[-o|--output]}} wide"}
,
  {"command": "kubectl-replace", "description": "Replace a resource by file or `stdin`.", "example": "kubectl replace {{[-f|--filename]}} {{path/to/file.yml}}"}
,
  {"command": "kubectl-rollout", "description": "Manage the rollout of a Kubernetes resource (deployments, daemonsets, and statefulsets).", "example": "kubectl rollout restart {{resource_type}}/{{resource_name}}"}
,
  {"command": "kubectl-run", "description": "Run pods in Kubernetes. Specifies pod generator to avoid deprecation error in some K8S versions.", "example": "kubectl run {{nginx-dev}} --image=nginx --port 80"}
,
  {"command": "kubectl-scale", "description": "Set a new size for a deployment, replica set, replication controller, or stateful set.", "example": "kubectl scale --replicas={{number_of_replicas}} rs/{{replica_name}}"}
,
  {"command": "kubectl-taint", "description": "Update the taints on nodes.", "example": "kubectl taint nodes {{node_name}} {{label_key}}={{label_value}}:{{effect}}"}
,
  {"command": "kubectl-wait", "description": "Wait for resource(s) to reach a certain state.", "example": "kubectl wait --for=condition=available deployment/{{deployment_name}}"}
,
  {"command": "kubectx", "description": "Utility to manage and switch between `kubectl` contexts.", "example": "kubectx"}
,
  {"command": "kube-fzf", "description": "Shell commands for command-line fuzzy searching of Kubernetes Pods.", "example": "findpod"}
,
  {"command": "kubens", "description": "Utility to switch between Kubernetes namespaces.", "example": "kubens"}
,
  {"command": "kubeseal", "description": "Client-side utility for encrypting Kubernetes secrets using the Bitnami Sealed Secrets controller.", "example": "kubeseal < {{secret.yaml}} > {{sealedsecret.json}}"}
,
  {"command": "kubetail", "description": "Utility to tail multiple Kubernetes pod logs at the same time.", "example": "kubetail {{my_app}}"}
,
  {"command": "kubie", "description": "Utility to switch between `kubectl` contexts and namespaces.", "example": "kubie ctx"}
,
  {"command": "kustomize", "description": "Easily deploy resources for Kubernetes.", "example": "kustomize create --resources {{deployment.yaml,service.yaml}} --namespace {{staging}}"}
,
  {"command": "l2ping", "description": "Send an L2CAP echo request and receive an answer.", "example": "sudo l2ping {{mac_address}}"}
,
  {"command": "lambo", "description": "A super-powered `laravel new` for Laravel and Valet.", "example": "lambo new {{app_name}}"}
,
  {"command": "lambo-new", "description": "A super-powered `laravel new` for Laravel and Valet.", "example": "lambo new {{app_name}}"}
,
  {"command": "lame", "description": "Encode WAV to MP3 files.", "example": "lame -b 320 {{path/to/file}}.wav {{path/to/output}}.mp3"}
,
  {"command": "lando", "description": "Local development environment and DevOps tool built on Docker.", "example": "lando init"}
,
  {"command": "laravel", "description": "Installer for the Laravel framework.", "example": "laravel new {{name}}"}
,
  {"command": "laravel-zero", "description": "An installer for the Laravel Zero framework.", "example": "laravel-zero new {{name}}"}
,
  {"command": "lastcomm", "description": "Show last commands executed.", "example": "lastcomm"}
,
  {"command": "latexdiff", "description": "Determine differences between two LaTeX files.", "example": "latexdiff {{old.tex}} {{new.tex}} > {{diff.tex}}"}
,
  {"command": "latex", "description": "Compile a DVI document from LaTeX source files.", "example": "latex {{source.tex}}"}
,
  {"command": "latexmk", "description": "Compile LaTeX source files into finished documents.", "example": "latexmk"}
,
  {"command": "latexpand", "description": "Simplify LaTeX source files by removing comments and resolving includes, inputs, etc.", "example": "latexpand {{[-o|--output]}} {{path/to/output.tex}} {{path/to/file.tex}}"}
,
  {"command": "laydown", "description": "Command line application to prepare for Daily Standup.", "example": "laydown did {{item}}"}
,
  {"command": "lazydocker", "description": "A terminal UI for managing Docker containers, images, volumes, and more.", "example": "lazydocker"}
,
  {"command": "lazygit", "description": "A simple terminal UI for Git commands, providing an intuitive interface for managing repositories.", "example": "lazygit"}
,
  {"command": "lb", "description": "Manage a blog contained in the current directory.", "example": "lb new"}
,
  {"command": "lckdo", "description": "This command is deprecated and has been superseded by `flock`.", "example": "tldr flock"}
,
  {"command": "ldapsearch", "description": "Query an LDAP directory.", "example": "ldapsearch {{[-D|--bindDN]}} '{{admin_DN}}' {{[-w|--bindPassword]}} '{{password}}' {{[-h|--hostname]}} {{ldap_host}} {{[-b|--baseDN]}} {{base_ou}} '{{memberOf=group1}}' displayName"}
,
  {"command": "ldc", "description": "D compiler using LLVM as a backend.", "example": "ldc2 {{path/to/source.d}} -of={{path/to/output_executable}}"}
,
  {"command": "ld", "description": "Link object files together.", "example": "ld {{path/to/file.o}} {{[-o|--output]}} {{path/to/output_executable}}"}
,
  {"command": "leaftoppm", "description": "Convert an Interleaf image to a PPM image.", "example": "leaftoppm {{path/to/file.pl}}"}
,
  {"command": "leave", "description": "Set a reminder for when it's time to leave.", "example": "leave {{time_to_leave}}"}
,
  {"command": "lebab", "description": "A JavaScript modernizer for transpiling code to ES6/ES7.", "example": "lebab --transform {{transformation1,transformation2,...}}"}
,
  {"command": "ledger", "description": "A powerful, double-entry accounting system.", "example": "ledger balance --file {{path/to/ledger.journal}}"}
,
  {"command": "lein", "description": "Manage Clojure projects with declarative configuration.", "example": "lein new {{template_name}} {{project_name}}"}
,
  {"command": "lerna", "description": "Manage JavaScript projects with multiple packages.", "example": "lerna init"}
,
  {"command": "less", "description": "Open a file for interactive reading, allowing scrolling and search.", "example": "less {{source_file}}"}
,
  {"command": "less-than", "description": "Redirect data to `stdin`.", "example": "{{command}} < {{path/to/file.txt}}"}
,
  {"command": "let", "description": "Evaluate arithmetic expressions in shell.", "example": "let \"{{result = a + b}}\""}
,
  {"command": "lex", "description": "Lexical analyzer generator.", "example": "lex {{analyzer.l}}"}
,
  {"command": "libreoffice", "description": "CLI for the powerful and free office suite LibreOffice.", "example": "libreoffice --view {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "license", "description": "Create license files for open-source projects.", "example": "license {{license_name}}"}
,
  {"command": "licensor", "description": "Write licenses to `stdout`.", "example": "licensor {{MIT}} > {{LICENSE}}"}
,
  {"command": "light-arionum-cli", "description": "The PHP light wallet for the Arionum cryptocurrency.", "example": "light-arionum-cli"}
,
  {"command": "lighthouse", "description": "Analyzes web applications and web pages, collecting modern performance metrics and insights on developer best practices.", "example": "lighthouse {{https://example.com}}"}
,
  {"command": "lilypond", "description": "Typeset music and/or produce MIDI from file.", "example": "lilypond {{path/to/file}}"}
,
  {"command": "limactl", "description": "Virtual machine manager for Linux guests, with multiple VM templates available.", "example": "limactl list"}
,
  {"command": "lima", "description": "This command is an alias of `limactl shell` for the default VM instance.", "example": "tldr limactl"}
,
  {"command": "linkchecker", "description": "Client to check HTML documents and websites for broken links.", "example": "linkchecker {{https://example.com/}}"}
,
  {"command": "link", "description": "Create a hard link to an existing file.", "example": "link {{path/to/existing_file}} {{path/to/new_file}}"}
,
  {"command": "linode-cli-account", "description": "Manage Linode accounts.", "example": "linode-cli account view"}
,
  {"command": "linode-cli-domains", "description": "Manage Linode Domains and DNS configuration.", "example": "linode-cli domains list"}
,
  {"command": "linode-cli-events", "description": "Manage Linode events.", "example": "linode-cli events list"}
,
  {"command": "linode-cli-linodes", "description": "Manage Linode instances.", "example": "linode-cli linodes list"}
,
  {"command": "linode-cli-lke", "description": "Manage Linode Kubernetes Engine (LKE) clusters.", "example": "linode-cli lke clusters list"}
,
  {"command": "linode-cli", "description": "Manage Linode cloud services.", "example": "linode-cli linodes list"}
,
  {"command": "linode-cli-nodebalancers", "description": "Manage Linode NodeBalancers.", "example": "linode-cli nodebalancers list"}
,
  {"command": "linode-cli-object-storage", "description": "Manage Linode Object Storage.", "example": "linode-cli object-storage buckets list"}
,
  {"command": "linode-cli-tickets", "description": "Manage Linode Support Tickets.", "example": "linode-cli tickets list"}
,
  {"command": "linode-cli-volumes", "description": "Manage Linode Volumes.", "example": "linode-cli volumes list"}
,
  {"command": "liquidctl", "description": "Control liquid coolers.", "example": "liquidctl list"}
,
  {"command": "lispmtopgm", "description": "Convert a Lisp Machine bitmap into a PGM image.", "example": "lispmtopgm {{path/to/input.lispm}} > {{path/to/output.pgm}}"}
,
  {"command": "lit", "description": "LLVM integrated tester for executing LLVM and Clang style test suites, summarizing results.", "example": "lit {{path/to/test_file.test}}"}
,
  {"command": "live-server", "description": "A simple development HTTP server with live reload capability.", "example": "live-server"}
,
  {"command": "llc", "description": "Compiles LLVM Intermediate Representation or bitcode to target-specific assembly language.", "example": "llc {{path/to/file.ll}}"}
,
  {"command": "lldb", "description": "The LLVM Low-Level Debugger.", "example": "lldb {{executable}}"}
,
  {"command": "lli", "description": "Directly execute programs from LLVM bitcode.", "example": "lli {{path/to/file.ll}}"}
,
  {"command": "llm", "description": "Interact with Large Language Models (LLMs) via remote APIs and models that can be installed and run on your machine.", "example": "llm keys set openai"}
,
  {"command": "llvd", "description": "Linkedin Learning Video Downloader.", "example": "llvd {{[-c|--course]}} {{course-slug}} --cookies"}
,
  {"command": "llvm-ar", "description": "This command is an alias of `ar`.", "example": "tldr ar"}
,
  {"command": "llvm-as", "description": "LLVM Intermediate Representation (`.ll`) to Bitcode (`.bc`) assembler.", "example": "llvm-as -o {{path/to/out.bc}} {{path/to/source.ll}}"}
,
  {"command": "llvm-bcanalyzer", "description": "LLVM Bitcode (`.bc`) analyzer.", "example": "llvm-bcanalyzer {{path/to/file.bc}}"}
,
  {"command": "llvm-cat", "description": "Concatenate LLVM Bitcode (`.bc`) files.", "example": "llvm-cat {{path/to/file1.bc}} {{path/to/file2.bc}} -o {{path/to/out.bc}}"}
,
  {"command": "llvm-config", "description": "Get various configuration information needed to compile programs which use LLVM.", "example": "clang++ $(llvm-config --cxxflags --ldflags --libs) --output {{path/to/output_executable}} {{path/to/source.cc}}"}
,
  {"command": "llvm-dis", "description": "Convert LLVM bitcode files into human-readable LLVM Intermediate Representation (IR).", "example": "llvm-dis {{path/to/input.bc}} -o -"}
,
  {"command": "llvm-gcc", "description": "This command is an alias of `clang`.", "example": "tldr clang"}
,
  {"command": "llvm-g++", "description": "This command is an alias of `clang++`.", "example": "tldr clang++"}
,
  {"command": "llvm-mc", "description": "LLVM Machine Code Playground. It provides a set of tools for working with LLVM machine code.", "example": "llvm-mc --filetype=obj -o {{path/to/output.o}} {{path/to/input.s}}"}
,
  {"command": "llvm-nm", "description": "This command is an alias of `nm`.", "example": "tldr nm"}
,
  {"command": "llvm-objdump", "description": "This command is an alias of `objdump`.", "example": "tldr objdump"}
,
  {"command": "llvm-strings", "description": "This command is an alias of `strings`.", "example": "tldr strings"}
,
  {"command": "lmms", "description": "Free, open source, cross-platform digital audio workstation.", "example": "lmms"}
,
  {"command": "ln", "description": "Create links to files and directories.", "example": "ln {{[-s|--symbolic]}} {{/path/to/file_or_directory}} {{path/to/symlink}}"}
,
  {"command": "loadtest", "description": "Run a load test on the selected HTTP or WebSockets URL.", "example": "loadtest {{[-c|--concurrency]}} {{10}} {{[--rps|--requestsPerSecond]}} {{200}} {{https://example.com}}"}
,
  {"command": "local", "description": "Declare local variables and give them attributes.", "example": "local {{variable}}=\"{{value}}\""}
,
  {"command": "loc", "description": "Count lines of code. Written in Rust.", "example": "loc"}
,
  {"command": "locust", "description": "Load-testing tool to determine number of concurrent users a system can handle.", "example": "locust --host={{http://example.com}}"}
,
  {"command": "loft", "description": "Install and manage multi-tenant Kubernetes environments using virtual clusters.", "example": "loft start"}
,
  {"command": "logger", "description": "Add messages to syslog.", "example": "logger {{message}}"}
,
  {"command": "logname", "description": "Shows the user's login name.", "example": "logname"}
,
  {"command": "logout", "description": "Exit a login shell.", "example": "logout"}
,
  {"command": "logstash", "description": "An Elasticsearch ETL (extract, transform and load) tool.", "example": "logstash --configtest --config {{logstash_config.conf}}"}
,
  {"command": "lolcat", "description": "Put a rainbow in everything you `cat` to the console.", "example": "lolcat {{path/to/file}}"}
,
  {"command": "look", "description": "Display lines beginning with a prefix in a sorted file.", "example": "look {{prefix}} {{path/to/file}}"}
,
  {"command": "lorem", "description": "Create some random Latin looking placeholder text.", "example": "lorem -n {{20}}"}
,
  {"command": "lpadmin", "description": "Configure CUPS printers and classes.", "example": "lpadmin -d {{printer}}"}
,
  {"command": "lpass", "description": "Interface for the LastPass password manager.", "example": "lpass login {{username}}"}
,
  {"command": "lpinfo", "description": "List connected printers and installed drivers for the CUPS print server.", "example": "lpinfo -v"}
,
  {"command": "lp", "description": "Print files.", "example": "echo \"test\" | lp"}
,
  {"command": "lpmove", "description": "Move a job or all jobs to another printer.", "example": "lpmove {{job_id}} {{new_printer}}"}
,
  {"command": "lpoptions", "description": "Display or set printer options and defaults.", "example": "lpoptions -d {{printer[/instance]}}"}
,
  {"command": "lpq", "description": "Show printer queue status.", "example": "lpq"}
,
  {"command": "lpr", "description": "Print files.", "example": "lpr {{path/to/file}}"}
,
  {"command": "lprm", "description": "Cancel queued print jobs of a server.", "example": "lprm"}
,
  {"command": "lpstat", "description": "Show status information about printers.", "example": "lpstat -p"}
,
  {"command": "lsar", "description": "List an archive file's contents.", "example": "lsar {{path/to/archive}}"}
,
  {"command": "lsd", "description": "List directory contents.", "example": "lsd {{[-1|--oneline]}}"}
,
  {"command": "ls", "description": "List directory contents.", "example": "ls -1"}
,
  {"command": "lsof", "description": "List open files and the corresponding processes.", "example": "lsof {{path/to/file}}"}
,
  {"command": "lspath", "description": "List the contents of the `PATH` environment variable, with optional paging.", "example": "lspath"}
,
  {"command": "lstopo", "description": "Show the hardware topology of the system.", "example": "lstopo"}
,
  {"command": "lsyncd", "description": "Watch files and directories and run `rsync` when they change.", "example": "lsyncd -rsync {{path/to/source}} {{host::share_name}}"}
,
  {"command": "lt", "description": "Localtunnel exposes your localhost to the world for easy testing and sharing.", "example": "lt {{[-p|--port]}} {{8000}}"}
,
  {"command": "luac", "description": "Lua bytecode compiler.", "example": "luac -o {{byte_code.luac}} {{source.lua}}"}
,
  {"command": "luajit", "description": "A just-in-time compiler (JIT) for the Lua programming language.", "example": "luajit"}
,
  {"command": "lualatex", "description": "An extended version of TeX using Lua to compile.", "example": "lualatex"}
,
  {"command": "lua", "description": "A powerful, light-weight embeddable programming language.", "example": "lua"}
,
  {"command": "ludusavi", "description": "Backup video game save data.", "example": "ludusavi backup --path {{path/to/backup}}"}
,
  {"command": "lumen", "description": "An installer for the Lumen micro-framework.", "example": "lumen new {{application_name}}"}
,
  {"command": "lwp-request", "description": "Simple HTTP client.", "example": "lwp-request -m GET {{http://example.com/some/path}}"}
,
  {"command": "lychee", "description": "Find broken URLs.", "example": "lychee {{https://example.com}}"}
,
  {"command": "lynx", "description": "Command-line web browser.", "example": "lynx {{example.com}}"}
,
  {"command": "lz4", "description": "Compress or decompress .lz4 files.", "example": "lz4 {{path/to/file}}"}
,
  {"command": "lzcat", "description": "This command is an alias of `xz --format=lzma --decompress --stdout`.", "example": "tldr xz"}
,
  {"command": "lzcmp", "description": "This command is an alias of `xzcmp`.", "example": "tldr xzcmp"}
,
  {"command": "lzegrep", "description": "This command is an alias of `xzgrep --extended-regexp`.", "example": "tldr xzgrep"}
,
  {"command": "lzfgrep", "description": "This command is an alias of `xzgrep --fixed-strings`.", "example": "tldr xzgrep"}
,
  {"command": "lzgrep", "description": "This command is an alias of `xzgrep`.", "example": "tldr xzgrep"}
,
  {"command": "lzip", "description": "A lossless data compressor with a user interface similar to `gzip` or `bzip2`.", "example": "lzip {{path/to/file}}"}
,
  {"command": "lzless", "description": "This command is an alias of `xzless`.", "example": "tldr xzless"}
,
  {"command": "lzma", "description": "This command is an alias of `xz --format=lzma`.", "example": "tldr xz"}
,
  {"command": "lzmore", "description": "This command is an alias of `xzmore`.", "example": "tldr xzmore"}
,
  {"command": "lzop", "description": "Compress or decompress files with LZO compression.", "example": "lzop {{path/to/file}}"}
,
  {"command": "m4b-tool", "description": "Merge, split, and manipulate audiobook files with chapters.", "example": "m4b-tool merge {{path/to/input_directory}} --output-file={{path/to/merged.m4b}}"}
,
  {"command": "m4", "description": "Macro processor.", "example": "m4 {{path/to/file}}"}
,
  {"command": "macchina", "description": "Display information about your computer.", "example": "macchina"}
,
  {"command": "macptopbm", "description": "Read a MacPaint file as input and produce a PBM image as output.", "example": "macptopbm {{path/to/file.macp}} > {{path/to/output.pbm}}"}
,
  {"command": "maestral", "description": "A lightweight Dropbox client for macOS and Linux.", "example": "maestral gui"}
,
  {"command": "magento", "description": "Manage the Magento PHP framework.", "example": "magento module:enable {{module1 module2 ...}}"}
,
  {"command": "magick-compare", "description": "Create a comparison image to visually annotate the difference between two images.", "example": "magick compare {{path/to/image1.png}} {{path/to/image2.png}} {{path/to/diff.png}}"}
,
  {"command": "magick-convert", "description": "Convert between image formats, scale, join, and create images, and much more.", "example": "magick convert {{path/to/input_image.jpg}} {{path/to/output_image.png}}"}
,
  {"command": "magick-identify", "description": "Describe the format and characteristics of image files.", "example": "magick identify {{path/to/image}}"}
,
  {"command": "magick-import", "description": "Capture some or all of an X server screen and save the image to a file.", "example": "magick import -window root {{path/to/output.ps}}"}
,
  {"command": "magick", "description": "Create, edit, compose, or convert between image formats.", "example": "magick {{path/to/input_image.png}} {{path/to/output_image.jpg}}"}
,
  {"command": "magick-mogrify", "description": "Perform operations on multiple images, such as resizing, cropping, flipping, and adding effects.", "example": "magick mogrify -resize {{50%}} {{*.jpg}}"}
,
  {"command": "magick-montage", "description": "Tile images into a customizable grid.", "example": "magick montage {{path/to/image1.jpg path/to/image2.jpg ...}} {{path/to/montage.jpg}}"}
,
  {"command": "mail", "description": "Operate on the user's mailbox.", "example": "mail"}
,
  {"command": "mailx", "description": "Send and receive mail.", "example": "mailx {{[-s|--subject]}} \"{{subject}}\" {{to_addr}}"}
,
  {"command": "makebuildserver", "description": "Create an F-Droid build server virtual machine.", "example": "makebuildserver"}
,
  {"command": "make", "description": "Task runner for targets described in Makefile.", "example": "make"}
,
  {"command": "makensis", "description": "Cross-platform compiler for NSIS installers.", "example": "makensis {{path/to/file.nsi}}"}
,
  {"command": "makepasswd", "description": "Generate and encrypt passwords.", "example": "makepasswd"}
,
  {"command": "mamba", "description": "Fast, cross-platform package manager, intended as a drop-in replacement for conda.", "example": "mamba create {{[-n|--name]}} {{environment_name}} {{python=3.10 matplotlib}}"}
,
  {"command": "mamba-repoquery", "description": "Efficiently query conda and mamba package repositories and package dependencies.", "example": "mamba repoquery search {{package}}"}
,
  {"command": "man", "description": "Format and display manual pages.", "example": "man {{command}}"}
,
  {"command": "mapfile", "description": "This command is an alias of `readarray`.", "example": "tldr readarray"}
,
  {"command": "mariadb-install-db", "description": "Initialize a MariaDB database.", "example": "sudo mariadb-install-db --user {{user}} --basedir {{/usr}} --datadir {{/var/lib/mysql}}"}
,
  {"command": "mariadb", "description": "The mariadb client tool.", "example": "mariadb {{db_name}}"}
,
  {"command": "marimo", "description": "A reactive Python notebook environment.", "example": "marimo edit"}
,
  {"command": "markdown2pdf", "description": "Convert markdown to PDF.", "example": "markdown2pdf {{[-p|--path]}} {{path/to/input_file.md}}"}
,
  {"command": "masscan", "description": "Network scanner for scanning as fast as possible.", "example": "masscan {{ip_address|network_prefix}} {{[-p|--ports]}} {{80}}"}
,
  {"command": "mat2", "description": "Anonymise various file formats by removing metadata.", "example": "mat2 --list"}
,
  {"command": "mate-dictionary", "description": "Look up words on dictionaries.", "example": "mate-dictionary --no-window --look-up '{{word}}'"}
,
  {"command": "matlab", "description": "Numerical computation environment by MathWorks.", "example": "matlab -nosplash"}
,
  {"command": "maza", "description": "Local ad blocker. Like Pi-hole but local and using the operating system.", "example": "maza update"}
,
  {"command": "mcfly", "description": "A smart command history search and management tool.", "example": "mcfly init {{bash|fish|zsh}}"}
,
  {"command": "mc", "description": "Midnight Commander, a TUI file manager.", "example": "mc"}
,
  {"command": "mcs", "description": "Mono C# Compiler.", "example": "mcs {{path/to/input_file1.cs path/to/input_file2.cs ...}}"}
,
  {"command": "!", "description": "Reuse and expand the shell history in `sh`, Bash, Zsh, `rbash` and `ksh`.", "example": "sudo !!"}
,
  {"command": "%", "description": "Manage jobs.", "example": "%"}
,
  {"command": ",", "description": "Run commands without installing them.", "example": ", {{command -with -flags}}"}
,
  {"command": "[", "description": "Check file types and compare values.", "example": "[ \"${{variable}}\" {{=|!=}} \"{{string}}\" ]"}
,
  {"command": "[[", "description": "Check file types and compare values.", "example": "[[ ${{variable}} {{==|!=}} \"{{string}}\" ]]"}
,
  {"command": "]", "description": "This shell keyword is used to close out `[`.", "example": "tldr ["}
,
  {"command": "]]", "description": "This shell keyword is used to close out `[[`.", "example": "tldr [["}
,
  {"command": "^", "description": "Bash builtin to quick substitute a string in the previous command and run the result.", "example": "^{{string1}}^{{string2}}"}
,
  {"command": "{", "description": "Multipurpose shell syntax.", "example": "echo ${HOME}work"}
,
  {"command": "}", "description": "This shell keyword is used to close out `{`.", "example": "tldr {"}
,
  {"command": "~", "description": "Expand to a directory.", "example": "ls ~"}
,
  {"command": "md5sum", "description": "Calculate MD5 cryptographic checksums.", "example": "md5sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "mdatopbm", "description": "Convert a Microdesign MDA file to a PBM image.", "example": "mdatopbm {{path/to/image.mda}} > {{path/to/output.pbm}}"}
,
  {"command": "mdk4", "description": "A proof-of-concept tool to exploit common IEEE 802.11 protocol weaknesses.", "example": "sudo mdk4 {{wifi_interface}} b -f {{path/to/beacons.txt}}"}
,
  {"command": "mdp", "description": "Make presentations from Markdown files.", "example": "mdp {{presentation.md}}"}
,
  {"command": "md-to-clip", "description": "Convert tldr-pages to Command Line Interface Pages.", "example": "md-to-clip {{path/to/page1.md path/to/page2.md ...}}"}
,
  {"command": "mediainfo", "description": "Display metadata from video and audio files.", "example": "mediainfo {{file}}"}
,
  {"command": "medusa", "description": "A modular and parallel login brute-forcer for a variety of protocols.", "example": "medusa -d"}
,
  {"command": "meld", "description": "Graphical diffing and merging tool.", "example": "meld"}
,
  {"command": "mesg", "description": "Check or set a terminal's ability to receive messages from other users, usually from the `write` command.", "example": "mesg"}
,
  {"command": "meshlabserver", "description": "Interface for the MeshLab 3D mesh processing software.", "example": "meshlabserver -i {{input.stl}} -o {{output.obj}}"}
,
  {"command": "meshnamed", "description": "Distributed naming system for IPv6 mesh networks.", "example": "meshnamed"}
,
  {"command": "meson", "description": "SCons-like build system that uses Python as a front-end language and Ninja as a building backend.", "example": "meson init {{[-l|--language]}} c {{[-n|--name]}} {{myproject}} --version {{0.1}}"}
,
  {"command": "meteor", "description": "Full-stack JavaScript platform for building web applications.", "example": "meteor"}
,
  {"command": "mg", "description": "A small, fast, and portable text editor based on `emacs`.", "example": "mg {{path/to/file}}"}
,
  {"command": "mgrtopbm", "description": "Convert a MGR bitmap into a PBM file.", "example": "mgrtopbm {{path/to/image.mgr}} > {{path/to/output.pbm}}"}
,
  {"command": "mh_copyright", "description": "Adjust copyright headers for MATLAB or Octave code.", "example": "mh_copyright --primary-entity=\"{{entity}}\" --update-year {{path/to/file_or_directory1.m path/to/file_or_director2.m ...}}"}
,
  {"command": "mh_lint", "description": "Attempt to find bugs in MATLAB or Octave code.", "example": "mh_lint"}
,
  {"command": "mh_metric", "description": "Calculate and enforce code metrics for MATLAB or Octave code.", "example": "mh_metric {{path/to/file1.m path/to/file2.m ...}}"}
,
  {"command": "micromamba", "description": "A fast, minimal, standalone package and environment manager for `conda` packages.", "example": "micromamba create {{[-p|--prefix]}} {{/path/to/env}} {{python=3.11 numpy}}"}
,
  {"command": "micro", "description": "A modern and intuitive terminal-based text editor.", "example": "micro {{path/to/file}}"}
,
  {"command": "microsoft-edge", "description": "Modern web browser developed by Microsoft based on the Chromium web browser developed by Google.", "example": "microsoft-edge {{https://example.com|path/to/file.html}}"}
,
  {"command": "mid3v2", "description": "Edit audio tags.", "example": "id3v2 --list-frames {{path/to/file1.mp3 path/to/file2.mp3 ...}}"}
,
  {"command": "middleman", "description": "Static site generator written in Ruby.", "example": "middleman init \"{{project_name}}\""}
,
  {"command": "minecraft", "description": "Run a headless Minecraft server.", "example": "java -jar {{path/to/server.jar}} --nogui"}
,
  {"command": "minetest", "description": "Multiplayer infinite-world block sandbox.", "example": "minetest"}
,
  {"command": "minetestserver", "description": "Multiplayer infinite-world block sandbox server.", "example": "minetestserver"}
,
  {"command": "mingle", "description": "Bundle the edges of a graph layout.", "example": "mingle {{path/to/layout1.gv path/to/layout2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "minifab", "description": "Automate the setup and deployment of Hyperledger Fabric networks.", "example": "minifab up {{[-i|--fabric-release]}} {{minifab_version}}"}
,
  {"command": "minikube", "description": "Run Kubernetes locally.", "example": "minikube start"}
,
  {"command": "minikube-start", "description": "Start `minikube` with different configurations.", "example": "minikube start --kubernetes-version {{v1.24.0}}"}
,
  {"command": "miniserve", "description": "Simple HTTP file server.", "example": "miniserve {{path/to/directory}}"}
,
  {"command": "minisign", "description": "A dead simple tool to sign files and verify signatures.", "example": "minisign -G"}
,
  {"command": "mise", "description": "Manage language runtimes like Node.js, Python, Ruby, Go, Java, etc and various tools.", "example": "mise plugins list-all"}
,
  {"command": "mispipe", "description": "Pipe two commands and return the exit status of the first command.", "example": "mispipe {{command1}} {{command2}}"}
,
  {"command": "mitmdump", "description": "View, record, and programmatically transform HTTP traffic.", "example": "mitmdump {{[-w|--wfile]}} {{path/to/file}}"}
,
  {"command": "mitmproxy", "description": "An interactive man-in-the-middle HTTP proxy.", "example": "mitmproxy"}
,
  {"command": "mitmweb", "description": "A web-based interactive man-in-the-middle HTTP proxy.", "example": "mitmweb"}
,
  {"command": "mix", "description": "Build tool that provides tasks for creating, compiling, and testing Elixir projects, managing its dependencies, and more.", "example": "mix run {{my_script.exs}}"}
,
  {"command": "mixxx", "description": "Free and open source cross-platform DJ software.", "example": "mixxx --fullScreen"}
,
  {"command": "mkcert", "description": "Make locally-trusted development certificates.", "example": "mkcert -install"}
,
  {"command": "mkdir", "description": "Create directories and set their permissions.", "example": "mkdir {{path/to/directory1 path/to/directory2 ...}}"}
,
  {"command": "mkdocs", "description": "Project documentation with Markdown.", "example": "mkdocs new {{project_name}}"}
,
  {"command": "mkfifo", "description": "Make FIFOs (named pipes).", "example": "mkfifo {{path/to/pipe}}"}
,
  {"command": "mkfile", "description": "Create empty files of any size.", "example": "mkfile -n {{15k}} {{path/to/file}}"}
,
  {"command": "mk", "description": "Task runner for targets described in Mkfile.", "example": "mk"}
,
  {"command": "mktemp", "description": "Create a temporary file or directory.", "example": "mktemp"}
,
  {"command": "mktorrent", "description": "Create BitTorrent metainfo files.", "example": "mktorrent {{[-a|--announce]}} {{tracker_announce_url}} {{[-l|--piece-length]}} {{21}} {{[-o|--output]}} {{path/to/example.torrent}} {{path/to/file_or_directory}}"}
,
  {"command": "mkvmerge", "description": "Merge and extract multimedia streams.", "example": "mkvmerge --identify {{path/to/file.mkv}}"}
,
  {"command": "mlr", "description": "Miller is like `awk`, `sed`, `cut`, `join`, and `sort` for name-indexed data such as CSV, TSV, and tabular JSON.", "example": "mlr --icsv --opprint cat {{example.csv}}"}
,
  {"command": "mm2gv", "description": "Convert a graph from Matrix Market `mm` format to `gv` format.", "example": "mm2gv -o {{output.gv}} {{input.mm}}"}
,
  {"command": "mmdc", "description": "CLI for mermaid, a diagram generation tool with a domain-specific language.", "example": "mmdc {{[-i|--input]}} {{input.mmd}} {{[-o|--output]}} {{output.svg}}"}
,
  {"command": "mmls", "description": "Display the partition layout of a volume system.", "example": "mmls {{path/to/image_file}}"}
,
  {"command": "mmv", "description": "Move and rename files in bulk.", "example": "mmv \"*{{.old_extension}}\" \"#1{{.new_extension}}\""}
,
  {"command": "mocha", "description": "A feature-rich JavaScript test framework.", "example": "mocha"}
,
  {"command": "mods", "description": "AI for the command-line, built for pipelines.", "example": "mods \"{{write me a poem about platypuses}}\""}
,
  {"command": "modutil", "description": "Manage PKCS #11 module information within the NSS security module database.", "example": "modutil -dbdir sql:{{path/to/nss/db/dir}} -add \"{{module_label}}\" -libfile {{path/to/pkcs11_mod.so}}"}
,
  {"command": "moe", "description": "A WYSIWYG text editor for ISO-8859-15 encoded text.", "example": "moe {{path/to/file}}"}
,
  {"command": "mogrify", "description": "This command is an alias of `magick mogrify`.", "example": "tldr magick mogrify"}
,
  {"command": "molecule", "description": "Molecule helps testing Ansible roles.", "example": "molecule init role --role-name {{role_name}}"}
,
  {"command": "mongod", "description": "The MongoDB database server.", "example": "mongod --dbpath {{path/to/directory}}"}
,
  {"command": "mongodump", "description": "Utility to export the contents of a MongoDB instance.", "example": "mongodump"}
,
  {"command": "mongoexport", "description": "Produce exports of data stored in a MongoDB instance formatted as JSON or CSV.", "example": "mongoexport --uri={{connection_string}} --collection={{collection_name}}"}
,
  {"command": "mongoimport", "description": "Imports content from a JSON, CSV, or TSV file into a MongoDB database.", "example": "mongoimport --file {{path/to/file.json}} --uri {{mongodb_uri}} {{[-c|--collection]}} {{collection_name}}"}
,
  {"command": "mongo", "description": "The legacy MongoDB shell. See `mongosh` for the new shell.", "example": "mongo"}
,
  {"command": "mongorestore", "description": "Utility to import a collection or database from a binary dump into a MongoDB instance.", "example": "mongorestore --db {{database_name}} {{path/to/directory}}"}
,
  {"command": "mongosh", "description": "A new shell for MongoDB, replacement for `mongo`.", "example": "mongosh"}
,
  {"command": "monodevelop", "description": "Cross platform IDE for C#, F# and more.", "example": "monodevelop"}
,
  {"command": "monodis", "description": "The Mono Common Intermediate Language (CIL) disassembler.", "example": "monodis {{path/to/assembly.exe}}"}
,
  {"command": "monop", "description": "Finds and displays signatures of Types and methods inside .NET assemblies.", "example": "monop {{System.String}}"}
,
  {"command": "montage", "description": "This command is an alias of `magick montage`.", "example": "tldr magick montage"}
,
  {"command": "more", "description": "Interactively display a file, allowing scrolling and searching.", "example": "more {{path/to/file}}"}
,
  {"command": "moreutils", "description": "A collection of UNIX tools.", "example": "tldr {{ifne|mispipe|pee|sponge|vipe|vidir}}"}
,
  {"command": "moro", "description": "Track work time.", "example": "moro"}
,
  {"command": "mosh", "description": "Mobile Shell (`mosh`) is a robust and responsive replacement for SSH.", "example": "mosh {{username}}@{{remote_host}}"}
,
  {"command": "mosquitto", "description": "An MQTT broker.", "example": "mosquitto"}
,
  {"command": "mosquitto_passwd", "description": "Manage password files for mosquitto.", "example": "mosquitto_passwd {{path/to/password_file}} {{username}}"}
,
  {"command": "mosquitto_pub", "description": "A simple MQTT version 3.1.1 client that will publish a single message on a topic and exit.", "example": "mosquitto_pub {{[-h|--host]}} {{192.168.1.1}} {{[-t|--topic]}} {{sensors/temperature}} {{[-m|--message]}} {{32}} {{[-q|--qos]}} {{1}}"}
,
  {"command": "mosquitto_sub", "description": "A simple MQTT version 3.1.1 client that will subscribe to topics and print the messages that it receives.", "example": "mosquitto_sub {{[-t|--topic]}} {{sensors/temperature}} {{[-q|--qos]}} {{1}}"}
,
  {"command": "most", "description": "Open one or several files for interactive reading, allowing scrolling and search.", "example": "most {{path/to/file}}"}
,
  {"command": "mozillavpn", "description": "A Virtual Private Network from the makers of Firefox.", "example": "mozillavpn login"}
,
  {"command": "mp3info", "description": "Viewer/editor for ID3v1 (but not ID3v2) tags of MP3 files.", "example": "mp3info {{path/to/file.mp3}}"}
,
  {"command": "mp4box", "description": "MPEG-4 Systems Toolbox: muxe streams into MP4 container.", "example": "mp4box -info {{path/to/file}}"}
,
  {"command": "mpc", "description": "Music Player Client: control the Music Player Daemon (MPD).", "example": "mpc toggle"}
,
  {"command": "mpd", "description": "Music Player Daemon.", "example": "mpd"}
,
  {"command": "mpg321", "description": "High Performance MPEG 1.0/2.0/2.5 Audio Player for Layer 1, 2, and 3.", "example": "mpg321 {{[-l|--loop]}} {{n}} {{path/to/file_a|URL path/to/file_b|URL ...}}"}
,
  {"command": "mplayer", "description": "Cross-platform multimedia player.", "example": "mplayer {{path/to/file|url}}"}
,
  {"command": "mpremote", "description": "Remotely control MicroPython devices.", "example": "mpremote connect list"}
,
  {"command": "mpv", "description": "A audio/video player based on MPlayer.", "example": "mpv {{url|path/to/file}}"}
,
  {"command": "mqtt_check.py", "description": "Simple utility for testing and validating MQTT login credentials.", "example": "mqtt_check.py {{domain}}/{{username}}:{{password}}@{{targetName}}"}
,
  {"command": "mr", "description": "Manage all of your version control repositories at once.", "example": "mr register"}
,
  {"command": "msbuild", "description": "The Microsoft build tool for Visual Studio project solutions.", "example": "msbuild"}
,
  {"command": "mscore", "description": "This command is an alias of `musescore`.", "example": "tldr musescore"}
,
  {"command": "msedge", "description": "The Microsoft Edge command-line utility is available as `msedge` on Windows and `microsoft-edge` for other platforms.", "example": "tldr {{[-p|--platform]}} windows msedge"}
,
  {"command": "msfconsole", "description": "Console for the Metasploit Framework.", "example": "msfconsole"}
,
  {"command": "msfvenom", "description": "Manually generate payloads for metasploit.", "example": "msfvenom {{[-l|--list]}} payloads"}
,
  {"command": "msgcat", "description": "Concatenate and merge multiple `.po` translation files.", "example": "msgcat {{file1.po file2.po ...}} {{[-o|--output-file]}} {{combined.po}}"}
,
  {"command": "msgfmt", "description": "Compile message catalog to binary format.", "example": "msgfmt {{file.po}}"}
,
  {"command": "msginit", "description": "Generate language specific translation files based on Portable Object Templates.", "example": "msginit"}
,
  {"command": "msgmerge", "description": "Update an existing translation file from a new template.", "example": "msgmerge {{[-U|--update]}} {{path/to/file.po}} {{path/to/messages.pot}}"}
,
  {"command": "msgunfmt", "description": "Decompile message catalog from the binary format.", "example": "msgunfmt {{path/to/file.mo}}"}
,
  {"command": "msmtp", "description": "An SMTP client.", "example": "echo \"{{Hello world}}\" | msmtp {{to@example.org}}"}
,
  {"command": "mssqlclient.py", "description": "Connect to Microsoft SQL Server instances and execute queries.", "example": "mssqlclient.py -windows-auth {{domain}}/{{username}}:{{password}}@{{target}}"}
,
  {"command": "mtm", "description": "Minimal terminal multiplexer.", "example": "mtm"}
,
  {"command": "mtr", "description": "Matt's Traceroute: combined traceroute and ping tool.", "example": "mtr {{example.com}}"}
,
  {"command": "mtvtoppm", "description": "Convert an MTV or PRT ray tracer file to a PPM image.", "example": "mtvtoppm {{path/to/file.mtv}} > {{path/to/output.ppm}}"}
,
  {"command": "mullvad", "description": "CLI client for Mullvad VPN.", "example": "mullvad account set {{account_number}}"}
,
  {"command": "multipass", "description": "Manage Ubuntu virtual machines using native hypervisors.", "example": "multipass find"}
,
  {"command": "multitail", "description": "Extension of tail.", "example": "multitail -Q 1 '{{pattern}}'"}
,
  {"command": "mumble", "description": "Low-latency, high quality voice chat software.", "example": "mumble"}
,
  {"command": "mu", "description": "Index and search emails from a local Maildir.", "example": "mu init --maildir={{path/to/directory}} --my-address={{name@example.com}}"}
,
  {"command": "mupdf", "description": "A lightweight PDF, XPS, and E-book viewer.", "example": "mupdf {{path/to/file}}"}
,
  {"command": "musescore", "description": "MuseScore 3 sheet music editor.", "example": "musescore --audio-driver {{jack|alsa|portaudio|pulse}}"}
,
  {"command": "musl-gcc", "description": "A wrapper around `gcc` that automatically sets options for linking against musl libc.", "example": "tldr gcc"}
,
  {"command": "mutagen", "description": "Real-time file synchronization and network forwarding tool.", "example": "mutagen sync create --name={{session_name}} {{/path/to/local/directory/}} {{user}}@{{host}}:{{/path/to/remote/directory/}}"}
,
  {"command": "mutool", "description": "Convert, query information and extract data from PDF files.", "example": "mutool convert -o {{path/to/output%nd.png}} {{path/to/input.pdf}} {{1-10}}"}
,
  {"command": "mutt", "description": "Command-line email client.", "example": "mutt -f {{mailbox}}"}
,
  {"command": "mv", "description": "Move or rename files and directories.", "example": "mv {{path/to/source}} {{path/to/target}}"}
,
  {"command": "mvn", "description": "Apache Maven: build and manage Java-based projects.", "example": "mvn compile"}
,
  {"command": "mycli", "description": "A CLI for MySQL, MariaDB, and Percona that can do auto-completion and syntax highlighting.", "example": "mycli {{database_name}}"}
,
  {"command": "mypy", "description": "Type check Python code.", "example": "mypy {{path/to/file.py}}"}
,
  {"command": "mysqlbinlog", "description": "Utility for processing MySQL binary log files.", "example": "mysqlbinlog {{path/to/binlog}}"}
,
  {"command": "mysqlcheck", "description": "Check and repair MySQL tables.", "example": "mysqlcheck --check {{table}}"}
,
  {"command": "mysqld", "description": "Start the MySQL database server.", "example": "mysqld"}
,
  {"command": "mysqldump", "description": "Backups MySQL databases.", "example": "mysqldump --user {{user}} --password {{database_name}} --result-file={{path/to/file.sql}}"}
,
  {"command": "mysql", "description": "The MySQL tool.", "example": "mysql {{database_name}}"}
,
  {"command": "mysql_secure_installation", "description": "Set up MySQL to have better security.", "example": "mysql_secure_installation"}
,
  {"command": "mysqlsh", "description": "Advanced client for MySQL, supporting SQL, JavaScript, and Python.", "example": "mysqlsh"}
,
  {"command": "mytop", "description": "Display MySQL server performance info like `top`.", "example": "mytop"}
,
  {"command": "naabu", "description": "A fast port scanner written in Go with a focus on reliability and simplicity.", "example": "sudo naabu -host {{host}}"}
,
  {"command": "nano", "description": "Text editor. An enhanced `pico` clone.", "example": "nano {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "nasm", "description": "The Netwide Assembler, a portable 80x86 assembler.", "example": "nasm {{source.asm}}"}
,
  {"command": "nativefier", "description": "Create a desktop app for any web site with minimal configuration.", "example": "nativefier {{url}}"}
,
  {"command": "nbtscan", "description": "Scan networks for NetBIOS name information.", "example": "nbtscan {{192.168.0.1/24}}"}
,
  {"command": "ncc", "description": "Compile a Node.js application into a single file.", "example": "ncc build {{path/to/file.js}}"}
,
  {"command": "ncdu", "description": "Disk usage analyzer with an ncurses interface.", "example": "ncdu"}
,
  {"command": "nc", "description": "Redirect I/O into a network stream through this versatile tool.", "example": "nc -l -p {{port}} < {{filename}}"}
,
  {"command": "ncmpcpp", "description": "A music player client for the Music Player Daemon.", "example": "ncmpcpp --host {{ip}} --port {{port}}"}
,
  {"command": "ncu", "description": "Find newer versions of package dependencies and check outdated npm packages locally or globally.", "example": "ncu"}
,
  {"command": "ndc", "description": "Name daemon control service for name servers.", "example": "ndc -c {{channel}} {{command}}"}
,
  {"command": "neato", "description": "Render an image of a `linear undirected` network graph from a `graphviz` file.", "example": "neato -T {{png}} -O {{path/to/input.gv}}"}
,
  {"command": "ned", "description": "Like `grep` but with powerful replace capabilities.", "example": "ned --ignore-case --recursive '{{^[dl]og}}' {{.}}"}
,
  {"command": "neo4j-admin", "description": "Manage and administer a Neo4j DBMS (Database Management System).", "example": "neo4j-admin server start"}
,
  {"command": "neofetch", "description": "Display information about your operating system, software and hardware.", "example": "neofetch"}
,
  {"command": "neomutt", "description": "NeoMutt email client.", "example": "neomutt -f {{path/to/mailbox}}"}
,
  {"command": "neotoppm", "description": "Convert an Atari Neochrome NEO file into a PPM image.", "example": "neotoppm {{path/to/file.neo}}"}
,
  {"command": "nest", "description": "Initialize, develop, and maintain Nest applications.", "example": "nest info"}
,
  {"command": "netcat", "description": "This command is an alias of `nc`.", "example": "tldr nc"}
,
  {"command": "netdiscover", "description": "Network scanner used to find live hosts on a network.", "example": "netdiscover -r {{172.16.6.0/23}} -i {{ens244}}"}
,
  {"command": "netexec", "description": "This command is an alias of `nxc`.", "example": "tldr nxc"}
,
  {"command": "netlify", "description": "Deploy sites and configure continuous deployment to the Netlify platform.", "example": "netlify login"}
,
  {"command": "netperf", "description": "Client-side command for `netperf`, the benchmarking application that measures network throughput. Similar to `iperf`.", "example": "netperf {{address}}"}
,
  {"command": "netserver", "description": "Server-side command for `netperf`, the benchmarking application that measures network throughput.", "example": "netserver"}
,
  {"command": "netstat", "description": "Display network-related information such as open connections, open socket ports, etc.", "example": "netstat {{[-a|--all]}}"}
,
  {"command": "nettacker", "description": "Automate information gathering, vulnerability scanning and eventually generate a report.", "example": "nettacker --show-all-modules"}
,
  {"command": "newman", "description": "Collection runner for Postman.", "example": "newman run {{path/to/collection.json}}"}
,
  {"command": "newsboat", "description": "An RSS/Atom feed reader for text terminals.", "example": "newsboat {{[-i|--import-from-opml]}} {{my-feeds.xml}}"}
,
  {"command": "nextclade", "description": "Bioinformatics tool for virus genome alignment, clade assignment and qc checks.", "example": "nextclade run {{path/to/sequences.fa}} {{[-r|--input-ref]}} {{path/to/reference.fa}} {{[-o|--output-fasta]}} {{path/to/alignment.fa}}"}
,
  {"command": "nextflow", "description": "Run computational pipelines. Mostly used for bioinformatics workflows.", "example": "nextflow run {{main.nf}} -resume"}
,
  {"command": "next", "description": "React framework that uses server-side rendering for building optimized web applications.", "example": "next dev"}
,
  {"command": "nf-core", "description": "The nf-core framework tools, to create, check and develop best-practice guidelines for Nextflow.", "example": "nf-core list"}
,
  {"command": "nginx", "description": "Nginx web server.", "example": "nginx"}
,
  {"command": "ng", "description": "Create and manage Angular applications.", "example": "ng new {{project_name}}"}
,
  {"command": "ngrep", "description": "Filter network traffic packets using regular expressions.", "example": "ngrep -d any"}
,
  {"command": "ngrok", "description": "Reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service.", "example": "ngrok http {{80}}"}
,
  {"command": "ngs", "description": "Scripting language created specifically for Ops.", "example": "ngs -e \"{{echo('ngs is executed')}}\""}
,
  {"command": "nhentai", "description": "Download doujinshis from nhentai.", "example": "nhentai --cookie \"csrftoken={{TOKEN}}; sessionid={{ID}}\""}
,
  {"command": "nice", "description": "Execute a program with a custom scheduling priority (niceness).", "example": "nice -{{niceness_value}} {{command}}"}
,
  {"command": "nicotine", "description": "Graphical client for the Soulseek peer-to-peer network.", "example": "nicotine"}
,
  {"command": "nikto", "description": "Web server scanner which performs tests against web servers for multiple items.", "example": "perl nikto.pl {{[-h|-host]}} {{192.168.0.1}}"}
,
  {"command": "nimble", "description": "Package manager for the Nim programming language.", "example": "nimble search {{search_string}}"}
,
  {"command": "nim", "description": "The Nim compiler.", "example": "nim {{[c|compile]}} {{path/to/file.nim}}"}
,
  {"command": "ninja", "description": "A Build system designed to be fast.", "example": "ninja"}
,
  {"command": "nix-build.2", "description": "Build a Nix expression.", "example": "nix-build '<nixpkgs>' {{[-A|--attr]}} {{firefox}}"}
,
  {"command": "nix-build.3", "description": "Build a Nix expression (downloading from the cache when possible).", "example": "nix build {{nixpkgs#pkg}}"}
,
  {"command": "nix-build", "description": "`nix-build` can refer to multiple commands with the same name.", "example": "tldr nix-build.2"}
,
  {"command": "nix-channel", "description": "Manage `nix` update channels.", "example": "nix-channel --list"}
,
  {"command": "nix-classic", "description": "A classic, stable interface to a powerful package manager that makes package management reliable, reproducible, and declarative.", "example": "nix-env {{[-qaP|--query --available --attr-path]}} {{search_term_regexp}}"}
,
  {"command": "nix-collect-garbage", "description": "Delete unused and unreachable nix store paths.", "example": "sudo nix-collect-garbage {{[-d|--delete-old]}}"}
,
  {"command": "nix-develop", "description": "Run a Bash shell that provides the build environment of a derivation.", "example": "nix develop {{nixpkgs#pkg}}"}
,
  {"command": "nix-edit", "description": "Open the Nix expression of a Nix package in $EDITOR.", "example": "nix edit {{nixpkgs#pkg}}"}
,
  {"command": "nix-env", "description": "Manipulate or query Nix user environments.", "example": "nix-env {{[-q|--query]}}"}
,
  {"command": "nix-flake", "description": "Manage Nix flakes.", "example": "nix flake init"}
,
  {"command": "nix", "description": "A powerful package manager that makes package management reliable, reproducible, and declarative.", "example": "mkdir {{[-p|--parents]}} ~/.config/nix; echo 'experimental-features = nix-command flakes' > ~/.config/nix/nix.conf"}
,
  {"command": "nixpkgs-review", "description": "Review pull requests in the NixOS packages repository (nixpkgs).", "example": "nixpkgs-review pr {{pr_number|pr_url}}"}
,
  {"command": "nix-profile", "description": "Install, update and remove packages from Nix profiles.", "example": "nix profile install {{nixpkgs#pkg1 nixpkgs#pkg2 ...}}"}
,
  {"command": "nix-registry", "description": "Manage a Nix flake registry.", "example": "nix registry pin {{nixpkgs}}"}
,
  {"command": "nix-repl", "description": "Start an interactive environment for evaluating Nix expressions.", "example": "nix repl"}
,
  {"command": "nix-run", "description": "Run an application from a Nix flake.", "example": "nix run"}
,
  {"command": "nix-search", "description": "Search for packages in a Nix flake.", "example": "nix search {{nixpkgs}} {{search_term}}"}
,
  {"command": "nix-shell.2", "description": "Start an interactive shell based on a Nix expression.", "example": "nix-shell"}
,
  {"command": "nix-shell.3", "description": "Start a shell in which the specified packages are available.", "example": "nix shell {{nixpkgs#pkg1 nixpkgs#packageSet.pkg2 ...}}"}
,
  {"command": "nix-shell", "description": "`nix-shell` can refer to multiple commands with the same name.", "example": "tldr nix-shell.2"}
,
  {"command": "nix-store.2", "description": "Manipulate or query the Nix store.", "example": "nix-store --gc"}
,
  {"command": "nix-store.3", "description": "Manipulate the Nix store.", "example": "nix store gc"}
,
  {"command": "nix-store", "description": "`nix-store` can refer to multiple commands with the same name.", "example": "tldr nix-store.2"}
,
  {"command": "nix-why-depends", "description": "Show why a package depends on another package.", "example": "nix why-depends {{/run/current-system}} /nix/store/{{checksum-package-version.ext}}"}
,
  {"command": "nkf", "description": "Network kanji filter: convert kanji code from one encoding to another.", "example": "nkf -w {{path/to/file.txt}}"}
,
  {"command": "nl", "description": "Number lines from a file or from `stdin`.", "example": "nl {{path/to/file}}"}
,
  {"command": "nload", "description": "Visualize network usage in the terminal.", "example": "nload"}
,
  {"command": "nmap", "description": "Network exploration tool and security/port scanner.", "example": "nmap -v{{1|2|3}} {{ip_or_hostname}}"}
,
  {"command": "nmblookup", "description": "Discover SMB shares.", "example": "nmblookup {{[-S|--status]}} '*'"}
,
  {"command": "nm-classic", "description": "This command is an alias of `nm`.", "example": "tldr nm"}
,
  {"command": "n", "description": "Manage multiple node versions.", "example": "n {{version}}"}
,
  {"command": "nm", "description": "List symbol names in object files.", "example": "nm {{[-g|--extern-only]}} {{path/to/file.o}}"}
,
  {"command": "nms", "description": "Tool that recreates the famous data decryption effect seen in the 1992 movie Sneakers from `stdin`.", "example": "echo \"{{Hello, World!}}\" | nms"}
,
  {"command": "nnn", "description": "Interactive terminal file manager and disk usage analyzer.", "example": "nnn"}
,
  {"command": "node", "description": "Server-side JavaScript platform (Node.js).", "example": "node {{path/to/file}}"}
,
  {"command": "nodemon", "description": "Watch files and automatically restart a node application when changes are detected.", "example": "nodemon {{path/to/file.js}}"}
,
  {"command": "nodenv", "description": "Manage Node.js versions.", "example": "nodenv install {{version}}"}
,
  {"command": "nohup", "description": "Allows for a process to live when the terminal gets killed.", "example": "nohup {{command}} {{argument1 argument2 ...}}"}
,
  {"command": "nokogiri", "description": "An HTML, XML, SAX and Reader parser.", "example": "nokogiri {{url|path/to/file}}"}
,
  {"command": "nomad", "description": "Distributed, highly available, datacenter-aware scheduler.", "example": "nomad node status"}
,
  {"command": "nop", "description": "Check validity and pretty-print graphs in canonical format.", "example": "nop {{path/to/input1.gv path/to/input2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "notify-send", "description": "Use the current desktop environment's notification system to create a notification.", "example": "notify-send \"{{Test}}\" \"{{This is a test}}\""}
,
  {"command": "noti", "description": "Monitor a process and trigger a banner notification.", "example": "noti {{tar -cjf example.tar.bz2 example/}}"}
,
  {"command": "notmuch", "description": "Index, search, read, and tag large collections of email messages.", "example": "notmuch setup"}
,
  {"command": "now", "description": "Cloud platform for serverless deployment.", "example": "now"}
,
  {"command": "nping", "description": "Network packet generation tool/ping utility.", "example": "nping {{example.com}}"}
,
  {"command": "npm-access", "description": "Set access level on published packages.", "example": "npm access list packages {{user|scope|scope:team}} {{package_name}}"}
,
  {"command": "npm-adduser", "description": "Add a registry user account.", "example": "npm adduser --registry {{registry_url}}"}
,
  {"command": "npm-audit", "description": "Scan for known vulnerabilities in project dependencies.", "example": "npm audit"}
,
  {"command": "npm-author", "description": "This command is an alias of `npm owner`.", "example": "tldr npm owner"}
,
  {"command": "npm-bugs", "description": "Report bugs for a package in a web browser.", "example": "npm bugs {{package_name}}"}
,
  {"command": "npm-cache", "description": "Manage the npm package cache.", "example": "npm cache add {{package_name}}"}
,
  {"command": "npm-check", "description": "Check for outdated, incorrect, and unused npm package dependencies.", "example": "npm-check"}
,
  {"command": "npm-ci", "description": "Clean install of `npm` project dependencies for automated environments.", "example": "npm ci"}
,
  {"command": "npm-config", "description": "Manage the `npm` configuration settings.", "example": "npm config list"}
,
  {"command": "npm-dedupe", "description": "Reduce duplication in the `node_modules` directory.", "example": "npm dedupe"}
,
  {"command": "npm-deprecate", "description": "Mark a version or range of versions of an `npm` package as deprecated.", "example": "npm deprecate {{package_name}}@{{version}} \"{{deprecation_message}}\""}
,
  {"command": "npm-doctor", "description": "Check the health of the npm environment.", "example": "npm doctor"}
,
  {"command": "npm-find-dupes", "description": "Identify duplicate dependencies in `node_modules`.", "example": "npm find-dupes"}
,
  {"command": "npm-fund", "description": "Retrieve funding information from packages.", "example": "npm fund"}
,
  {"command": "npm-home", "description": "Open the `npm` page, Yarn page, or GitHub repository of a package in the web browser.", "example": "npm-home {{package}}"}
,
  {"command": "npm-init", "description": "Create a `package.json` file.", "example": "npm init"}
,
  {"command": "npm-install", "description": "Install Node packages.", "example": "npm install"}
,
  {"command": "npm-list", "description": "This command is an alias of `npm ls`.", "example": "tldr npm ls"}
,
  {"command": "npm-login", "description": "Log in to a registry user account.", "example": "npm login"}
,
  {"command": "npm-logout", "description": "Log out of the registry user account.", "example": "npm logout"}
,
  {"command": "npm-ls", "description": "Print installed packages to `stdout`.", "example": "npm ls"}
,
  {"command": "npm", "description": "JavaScript and Node.js package manager.", "example": "npm init {{[-y|--yes]}}"}
,
  {"command": "npm-name", "description": "Check whether a package or organization name is available on npm.", "example": "npm-name {{package}}"}
,
  {"command": "npm-org", "description": "Manage organizations.", "example": "npm org set {{organization_name}} {{username}}"}
,
  {"command": "npm-outdated", "description": "Check for outdated npm package dependencies.", "example": "npm outdated"}
,
  {"command": "npm-owner", "description": "Manage ownership of published packages.", "example": "npm owner add {{username}} {{package_name}}"}
,
  {"command": "npm-query", "description": "Print an array of dependency objects using CSS-like selectors.", "example": "npm query ':root > *'"}
,
  {"command": "npm-restart", "description": "This command is an alias of `npm run restart`.", "example": "tldr npm run"}
,
  {"command": "npm-root", "description": "Display path to `node_modules` directory.", "example": "npm root"}
,
  {"command": "npm-run", "description": "Run a script.", "example": "npm run {{script_name}}"}
,
  {"command": "npm-run-script", "description": "This command is an alias of `npm run`.", "example": "tldr npm run"}
,
  {"command": "npm-search", "description": "Search for packages in the `npm` registry.", "example": "npm search {{package}}"}
,
  {"command": "npm-star", "description": "Mark a package as favorite.", "example": "npm star {{package_name}}"}
,
  {"command": "npm-start", "description": "This command is an alias of `npm run start`.", "example": "tldr npm run"}
,
  {"command": "npm-stop", "description": "This command is an alias of `npm run stop`.", "example": "tldr npm run"}
,
  {"command": "npm-team", "description": "Manage teams in an organization on the `npm` registry.", "example": "npm team add {{organization:team}} {{username}}"}
,
  {"command": "npm-test", "description": "This command is an alias of `npm run test`.", "example": "tldr npm run"}
,
  {"command": "npm-token", "description": "Manage and generate authentication tokens for the npm registry.", "example": "npm token create"}
,
  {"command": "npm-uninstall", "description": "Remove a package.", "example": "npm uninstall {{package_name}}"}
,
  {"command": "npm-unpublish", "description": "Remove a package from the npm registry.", "example": "npm unpublish {{package_name}}@{{version}}"}
,
  {"command": "npm-unstar", "description": "Remove the favorite/star mark from a package.", "example": "npm unstar {{package_name}}"}
,
  {"command": "npm-update", "description": "Update packages in the current project.", "example": "npm update"}
,
  {"command": "npm-version", "description": "Bump a node package version.", "example": "npm version"}
,
  {"command": "npm-view", "description": "View registry information about a package.", "example": "npm view {{package}}"}
,
  {"command": "npm-whoami", "description": "Display npm username.", "example": "npm whoami"}
,
  {"command": "npm-why", "description": "Identifies why an npm package is installed.", "example": "npm-why {{package}}"}
,
  {"command": "nproc", "description": "Print the number of processing units (normally CPUs) available.", "example": "nproc"}
,
  {"command": "npx", "description": "Execute binaries from `npm` packages.", "example": "npx {{command}} {{argument1 argument2 ...}}"}
,
  {"command": "nrm", "description": "npm registry manager.", "example": "nrm ls"}
,
  {"command": "nslookup", "description": "Query name servers for various domain records.", "example": "nslookup {{example.com}}"}
,
  {"command": "ntfs-read.py", "description": "A read-only NTFS explorer for accessing and extracting files from NTFS volumes.", "example": "ntfs-read.py {{volume}}"}
,
  {"command": "ntfy", "description": "Send and receive HTTP POST notifications.", "example": "ntfy pub security \"{{Front door has been opened.}}\""}
,
  {"command": "ntfyme", "description": "A notification tool to track and notify you about your long-running termination process.", "example": "ntfyme exec {{[-c|--cmd]}} {{command}}"}
,
  {"command": "nth", "description": "Name That Hash - Instantly name the type of any hash.", "example": "nth {{[-t|--text]}} {{5f4dcc3b5aa765d61d8327deb882cf99}}"}
,
  {"command": "ntl", "description": "This command is an alias of `netlify`.", "example": "tldr netlify"}
,
  {"command": "ntp-ctl", "description": "Management client for the `ntpd-rs` daemon.", "example": "ntp-ctl status"}
,
  {"command": "ntpctl", "description": "Display information about the running instance of OpenNTPD.", "example": "ntpctl -s {{[a|all]}}"}
,
  {"command": "nuclei", "description": "Fast and customizable vulnerability scanner based on a simple YAML based DSL.", "example": "nuclei {{[-ut|-update-templates]}}"}
,
  {"command": "nudoku", "description": "Sudoku game in terminal.", "example": "nudoku"}
,
  {"command": "nu", "description": "Nushell (\"a new type of shell\") takes a modern, structured approach to your command-line.", "example": "nu"}
,
  {"command": "numfmt", "description": "Convert numbers to and from human-readable strings.", "example": "numfmt --from si 1.5K"}
,
  {"command": "nvcc", "description": "The NVIDIA CUDA Compiler Driver.", "example": "nvcc {{path/to/source.cu}} {{[-o|--output-file]}} {{path/to/executable}}"}
,
  {"command": "nvidia-smi", "description": "Aid the management and monitoring of NVIDIA GPU devices.", "example": "nvidia-smi"}
,
  {"command": "nvim", "description": "Neovim, a programmer's text editor based on Vim, provides several modes for different kinds of text manipulation.", "example": "nvim {{path/to/file}}"}
,
  {"command": "nvme", "description": "NVMe storage user space utility.", "example": "sudo nvme list"}
,
  {"command": "nvm.fish", "description": "Install, uninstall, or switch between Node.js versions under the fish shell.", "example": "nvm install {{node_version}}"}
,
  {"command": "nvm", "description": "Install, uninstall or switch between Node.js versions.", "example": "nvm install {{node_version}}"}
,
  {"command": "nxcdb", "description": "Interact with the NetExec database.", "example": "nxcdb"}
,
  {"command": "nxc-ftp", "description": "Pentest and exploit FTP servers.", "example": "nxc ftp {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nxc-ldap", "description": "Pentest and exploit Windows Active Directory Domains via LDAP.", "example": "nxc ldap {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nxc", "description": "Network service enumeration and exploitation tool.", "example": "nxc {{smb|ssh|ldap|ftp|wmi|winrm|rdp|vnc|mssql}} {{[-L|--list-modules]}}"}
,
  {"command": "nxc-mssql", "description": "Pentest and exploit Microsoft SQL servers.", "example": "nxc mssql {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nxc-nfs", "description": "Pentest and exploit NFS servers. Currently supports anonymous mode only.", "example": "nxc nfs {{192.168.178.0/24}}"}
,
  {"command": "nxc-rdp", "description": "Pentest and exploit RDP servers.", "example": "nxc rdp {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nxc-smb", "description": "Pentest and exploit SMB servers.", "example": "nxc smb {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nxc-ssh", "description": "Pentest and exploit SSH servers.", "example": "nxc ssh {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{password}}"}
,
  {"command": "nxc-vnc", "description": "Pentest and exploit VNC servers.", "example": "nxc vnc {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nxc-winrm", "description": "Pentest and exploit Windows Remote Management (winrm).", "example": "nxc winrm {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nxc-wmi", "description": "Pentest and exploit the Windows Management Instrumentation (WMI).", "example": "nxc wmi {{192.168.178.2}} {{[-u|--username]}} {{path/to/usernames.txt}} {{[-p|--password]}} {{path/to/passwords.txt}}"}
,
  {"command": "nx", "description": "Manage `nx` workspaces.", "example": "nx build {{project}}"}
,
  {"command": "nyxt", "description": "A keyboard-driven web browser for power users.", "example": "nyxt --list-data-profiles"}
,
  {"command": "oathtool", "description": "OATH one-time password tool.", "example": "oathtool --totp {{[-b|--base32]}} \"{{secret}}\""}
,
  {"command": "objdump", "description": "View information about object files.", "example": "objdump {{[-f|--file-headers]}} {{path/to/binary}}"}
,
  {"command": "obs", "description": "Open Broadcaster Software.", "example": "obs"}
,
  {"command": "ocamlc", "description": "The OCaml bytecode compiler.", "example": "ocamlc {{path/to/source_file.ml}}"}
,
  {"command": "ocamlfind", "description": "The findlib package manager for OCaml.", "example": "ocamlfind ocamlopt -package {{package1}},{{package2}} -linkpkg -o {{path/to/executable}} {{path/to/source.ml}}"}
,
  {"command": "ocaml", "description": "The OCaml repl (read-evaluate-print-loop).", "example": "ocaml"}
,
  {"command": "ocamlopt", "description": "The OCaml native code compiler.", "example": "ocamlopt -o {{path/to/binary}} {{path/to/source_file.ml}}"}
,
  {"command": "oc", "description": "The OpenShift Container Platform CLI.", "example": "oc login"}
,
  {"command": "ocrmypdf", "description": "Generate a searchable PDF or PDF/A from a scanned PDF or an image of text.", "example": "ocrmypdf {{path/to/input_file}} {{path/to/output.pdf}}"}
,
  {"command": "octave", "description": "A programming language for scientific computing.", "example": "octave"}
,
  {"command": "octez-client", "description": "Interact with the Tezos blockchain.", "example": "octez-client -E {{endpoint}} config update"}
,
  {"command": "od", "description": "Display file contents in octal, decimal or hexadecimal format.", "example": "od {{path/to/file}}"}
,
  {"command": "odps-auth", "description": "User authorities in ODPS (Open Data Processing Service).", "example": "add user {{username}};"}
,
  {"command": "odps-func", "description": "Manage functions in ODPS (Open Data Processing Service).", "example": "list functions;"}
,
  {"command": "odps-inst", "description": "Manage instances in ODPS (Open Data Processing Service).", "example": "show instances;"}
,
  {"command": "odps", "description": "Aliyun ODPS (Open Data Processing Service) command-line tool.", "example": "odpscmd --config={{odps_config.ini}}"}
,
  {"command": "odps-resource", "description": "Manage resources in ODPS (Open Data Processing Service).", "example": "list resources;"}
,
  {"command": "odps-table", "description": "Create and modify tables in ODPS (Open Data Processing Service).", "example": "create table {{table_name}} ({{col}} {{type}}) partitioned by ({{col}} {{type}}) lifecycle {{days}};"}
,
  {"command": "odps-tunnel", "description": "Data tunnel in ODPS (Open Data Processing Service).", "example": "tunnel download {{table_name}} {{path/to/file}};"}
,
  {"command": "offlineimap", "description": "Synchronize a remote IMAP server with local Maildir folders.", "example": "offlineimap -o"}
,
  {"command": "ogr2ogr", "description": "Convert geospatial vector data between file formats.", "example": "ogr2ogr -f GPKG {{path/to/output.gpkg}} {{path/to/input.shp}}"}
,
  {"command": "ogrinfo", "description": "List information about an OGR-supported data source.", "example": "ogrinfo --formats"}
,
  {"command": "ogrmerge.py", "description": "Merge several vector datasets into a single one.", "example": "ogrmerge.py -f {{GPKG}} -o {{path/to/output.gpkg}} {{path/to/input1.shp path/to/input2.shp ...}}"}
,
  {"command": "ohdear-cli", "description": "An unofficial Oh Dear CLI written with Laravel Zero.", "example": "ohdear-cli me"}
,
  {"command": "okular", "description": "View documents.", "example": "okular"}
,
  {"command": "olevba", "description": "Parse OLE and OpenXML files (e.g., DOC, XLS, PPT, etc.) to extract VBA macros, deobfuscate, and analyze malicious code.", "example": "olevba {{path/to/file}}"}
,
  {"command": "ollama", "description": "A large language model runner.", "example": "ollama serve"}
,
  {"command": "o", "description": "Orbiton, a simple configuration-free text editor.", "example": "o {{path/to/file}}"}
,
  {"command": "omf", "description": "Oh My Fish, the Fishshell Framework.", "example": "omf install {{name}}"}
,
  {"command": "omz", "description": "Oh My Zsh command-line tool.", "example": "omz update"}
,
  {"command": "on_ac_power", "description": "A simple utility which tests if a computer is running on line power.", "example": "on_ac_power"}
,
  {"command": "onefetch", "description": "Display project information and code statistics for a local Git repository.", "example": "onefetch"}
,
  {"command": "onionsearch", "description": "Scrape URLs on different `.onion` search engines.", "example": "onionsearch \"{{string}}\""}
,
  {"command": "ooniprobe", "description": "Open Observatory of Network Interference (OONI).", "example": "ooniprobe list"}
,
  {"command": "opam", "description": "OCaml Package Manager.", "example": "opam init"}
,
  {"command": "openai", "description": "CLI tool providing access to the OpenAI API.", "example": "openai api models.list"}
,
  {"command": "openconnect", "description": "A VPN client, for Cisco AnyConnect VPNs and others.", "example": "openconnect {{vpn.example.org}}"}
,
  {"command": "open.fish", "description": "Opens files, directories, and URIs with default applications.", "example": "open {{path/to/file.ext}}"}
,
  {"command": "open", "description": "`open` can refer to multiple commands with the same name.", "example": "tldr open {{[-p|--platform]}} osx"}
,
  {"command": "openscad", "description": "Software for creating solid 3D CAD objects.", "example": "openscad {{path/to/button.scad}}"}
,
  {"command": "openssl-dgst", "description": "OpenSSL command to generate digest values and perform signature operations.", "example": "openssl dgst -sha256 -binary -out {{output_file}} {{input_file}}"}
,
  {"command": "openssl-genpkey", "description": "OpenSSL command to generate asymmetric key pairs.", "example": "openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:{{2048}} -out {{filename.key}}"}
,
  {"command": "openssl-genrsa", "description": "OpenSSL command to generate RSA private keys.", "example": "openssl genrsa"}
,
  {"command": "openssl", "description": "OpenSSL cryptographic toolkit.", "example": "openssl help"}
,
  {"command": "openssl-prime", "description": "OpenSSL command to compute prime numbers.", "example": "openssl prime -generate -bits 2048 -hex"}
,
  {"command": "openssl-req", "description": "OpenSSL command to manage PKCS#10 Certificate Signing Requests.", "example": "openssl req -new -sha256 -key {{filename.key}} -out {{filename.csr}}"}
,
  {"command": "openssl-s_client", "description": "OpenSSL command to create TLS client connections.", "example": "openssl s_client -connect {{host}}:{{port}} 2>/dev/null | openssl x509 -noout -dates"}
,
  {"command": "openssl-ts", "description": "OpenSSL command to generate and verify timestamps.", "example": "openssl ts -query -data {{path/to/file}} -sha512 -out {{path/to/file.tsq}}"}
,
  {"command": "openssl-x509", "description": "OpenSSL command to manage X.509 certificates.", "example": "openssl x509 -in {{filename.crt}} -noout -text"}
,
  {"command": "openstack-help", "description": "Display help information about the openstackclient cli.", "example": "openstack help {{command_name}}"}
,
  {"command": "openstack-image", "description": "OpenStack Image service, aka OpenStack Glance, allows users to upload and discover data assets meant to be used with other services.", "example": "openstack image list {{--private|--shared|--all}}"}
,
  {"command": "openstack-server", "description": "Manage OpenStack virtual machines.", "example": "openstack server list"}
,
  {"command": "openstack-volume", "description": "Manage OpenStack volumes.", "example": "openstack volume list --all-projects"}
,
  {"command": "openttd", "description": "Open source clone of the Microprose game \"Transport Tycoon Deluxe\".", "example": "openttd -g"}
,
  {"command": "openvpn", "description": "OpenVPN client and daemon binary.", "example": "sudo openvpn {{path/to/client.conf}}"}
,
  {"command": "opera", "description": "This command is an alias of `chromium`.", "example": "tldr chromium"}
,
  {"command": "op", "description": "Official CLI for 1Password's desktop app.", "example": "op signin"}
,
  {"command": "optipng", "description": "PNG file optimization utility.", "example": "optipng {{path/to/file.png}}"}
,
  {"command": "opt", "description": "Run optimizations and analyse LLVM source files.", "example": "opt -{{passname}} {{path/to/file.bc}} -S -o {{file_opt.bc}}"}
,
  {"command": "opusenc", "description": "Convert WAV or FLAC audio to Opus.", "example": "opusenc {{path/to/input.wav}} {{path/to/output.opus}}"}
,
  {"command": "orca-c", "description": "A C-port of the ORCA live programming environment.", "example": "orca-c"}
,
  {"command": "osage", "description": "Render an image of a `clustered` network graph from a `graphviz` file.", "example": "osage -T {{png}} -O {{path/to/input.gv}}"}
,
  {"command": "osmium", "description": "Multipurpose tool for handling OpenStreetMap (OSM) files.", "example": "osmium fileinfo {{path/to/input.osm}}"}
,
  {"command": "osv-scanner", "description": "Scan various mediums for dependencies and matches them against the OSV database.", "example": "osv-scanner -D {{docker_image_name}}"}
,
  {"command": "ouch", "description": "Utility for compressing and decompressing files and directories.", "example": "ouch decompress {{path/to/archive.tar.xz}}"}
,
  {"command": "oxipng", "description": "Losslessly improve compression of PNG files.", "example": "oxipng {{path/to/file.png}}"}
,
  {"command": "p10k", "description": "Manage configurations for powerlevel10k.", "example": "p10k configure"}
,
  {"command": "p4", "description": "Perforce Version Control System.", "example": "p4 login -a"}
,
  {"command": "p5", "description": "Template builder and sketch manager for p5.js.", "example": "p5 new {{collection_name}}"}
,
  {"command": "p7zip", "description": "Wrapper of 7-Zip file archiver with high compression ratio.", "example": "p7zip {{path/to/file}}"}
,
  {"command": "paci", "description": "A package manager for Bash scripts.", "example": "paci refresh"}
,
  {"command": "packer", "description": "Build automated machine images.", "example": "packer build {{path/to/config.json}}"}
,
  {"command": "packtpub", "description": "Download freely offered books from packtpub.com.", "example": "packtpub download {{[-t|--type]}} {{pdf|ebup|mobi}}"}
,
  {"command": "packwiz", "description": "Create, edit and manage Minecraft modpacks.", "example": "packwiz init"}
,
  {"command": "pactl", "description": "Control a running PulseAudio sound server.", "example": "pactl info"}
,
  {"command": "pageres", "description": "Capture screenshots of websites in various resolutions.", "example": "pageres {{https://example.com/}} {{https://example2.com/}} {{1366x768}} {{1600x900}}"}
,
  {"command": "pake", "description": "Turn any webpage into a desktop app with Rust/Tauri.", "example": "pake {{https://www.google.com/}}"}
,
  {"command": "palmtopnm", "description": "Convert a Palm bitmap file to a PNM image.", "example": "palmtopnm {{path/to/file.palm}} > {{path/to/file.pnm}}"}
,
  {"command": "pamarith", "description": "Apply a binary function on two Netpbm images.", "example": "pamarith -{{add|subtract|multiply|divide|difference|minimum|maximum|...}} {{path/to/image1.pam|pbm|pgm|ppm}} {{path/to/image2.pam|pbm|pgm|ppm}}"}
,
  {"command": "pambackground", "description": "Create a mask of the background in a PAM image.", "example": "pambackground {{path/to/image.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pambrighten", "description": "Change a PAM image's saturation and value.", "example": "pambrighten {{[-s|-saturation]}} {{value_percent}} {{path/to/image.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamcomp", "description": "Overlay two PAM images.", "example": "pamcomp {{path/to/overlay.pam}} {{path/to/underlay.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamcrater", "description": "Create a PAM image of cratered terrain.", "example": "pamcrater {{[-h|-height]}} {{height}} {{[-w|-width]}} {{width}} > {{path/to/output.pam}}"}
,
  {"command": "pamcut", "description": "Cut out a rectangular region from a Netpbm image.", "example": "pamcut {{[-cropl|-cropleft]}} {{value}} {{[-cropr|-cropright]}} {{value}} {{[-cropt|-croptop]}} {{value}} {{[-cropb|-cropbottom]}} {{value}} {{path/to/image.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "pamdeinterlace", "description": "Remove every other row in a Netpbm image.", "example": "pamdeinterlace {{path/to/image.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "pamdepth", "description": "Reduce the depth (i.e. color resolution) in an image.", "example": "pamdepth {{maxval}} {{path/to/image.pbm}} > {{path/to/file.pbm}}"}
,
  {"command": "pamdice", "description": "Slice a Netpbm image vertically or horizontally.", "example": "pamdice {{[-o|-outstem]}} {{path/to/filename_stem}} {{[-he|-height]}} {{value}} {{[-w|-width]}} {{value}} {{path/to/input.ppm}}"}
,
  {"command": "pamditherbw", "description": "Apply dithering to a greyscale image, i.e. turn it into a pattern of black and white pixels that look the same as the original greyscale.", "example": "ppmditherbw {{path/to/image.pgm}} > {{path/to/file.pgm}}"}
,
  {"command": "pamedge", "description": "Perform edge-detection on a Netpbm image.", "example": "pamedge {{path/to/input.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamenlarge", "description": "Enlarge a PAM image by duplicating pixels.", "example": "pamenlarge {{[-s|-scale]}} {{n}} {{path/to/image.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamexec", "description": "Execute a shell command on each image in a Netpbm file.", "example": "pamexec {{command}} {{path/to/image.pam}}"}
,
  {"command": "pamfile", "description": "Describe Netpbm (PAM or PNM) files.", "example": "pamfile {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "pamfix", "description": "Fix errors in PAM, PBM, PGM and PPM files.", "example": "pamfix {{[-t|-truncate]}} {{path/to/corrupted.ext}} > {{path/to/output.ext}}"}
,
  {"command": "pamfixtrunc", "description": "This command has been superseded by `pamfix -truncate`.", "example": "tldr pamfix"}
,
  {"command": "pamflip", "description": "Flip or rotate a PAM or PNM image.", "example": "pamflip {{[-r|-rotate]}}{{90|180|270}} {{path/to/input.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamfunc", "description": "Apply a simple arithmetic function to a Netpbm image.", "example": "pamfunc -{{multiplier|divisor|adder|subtractor|min|max}} {{n}} {{path/to/input.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamixer", "description": "A simple command-line mixer for PulseAudio.", "example": "pamixer --list-sinks --list-sources"}
,
  {"command": "pammixinterlace", "description": "Merge each row in an image with its two neighbours.", "example": "pammixinterlace {{path/to/image.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "pamnoraw", "description": "This command is an alias of `pamtopnm -plain`.", "example": "tldr pamtopnm"}
,
  {"command": "pamoil", "description": "Turn a PAM image into an oil painting.", "example": "pamoil {{path/to/input_file.pam}} > {{path/to/output_file.pam}}"}
,
  {"command": "pampick", "description": "Pick images out of a multi-image Netpbm stream.", "example": "pampick {{image_number1 image_number2 ...}} < {{path/to/image.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pampop9", "description": "Simulate a multi-lens camera such as the Pop9.", "example": "pampop9 {{path/to/input.pam}} {{xtiles}} {{ytiles}} {{xdelta}} {{ydelta}} > {{path/to/output.pam}}"}
,
  {"command": "pamrgbatopng", "description": "This command has been superseded by `pamtopng`.", "example": "tldr pamtopng"}
,
  {"command": "pamscale", "description": "Scale a Netpbm image.", "example": "pamscale {{[-wid|-width]}} {{width}} {{[-h|-height]}} {{height}} {{path/to/input.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamshadedrelief", "description": "Generate a shaded relief from an elevation map.", "example": "pamshadedrelief < {{path/to/input.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamslice", "description": "Extract one line of values out of a PAM image.", "example": "pamslice {{[-r|-row]}} {{n}} {{path/to/image.pam}}"}
,
  {"command": "pamsplit", "description": "Split a multi-image Netpbm file into multiple single-image Netpbm files.", "example": "pamsplit {{path/to/image.pam}}"}
,
  {"command": "pamstack", "description": "Stack the planes of multiple PAM images into one PAM image.", "example": "pamstack {{path/to/image1.pam path/to/image2.pam ...}} > {{path/to/output.pam}}"}
,
  {"command": "pamstretch-gen", "description": "Scale up a PAM image by decimal values.", "example": "pamstretch-gen {{n}} {{path/to/image.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamstretch", "description": "Scale up a PAM image by interpolating between pixels.", "example": "pamstretch {{n}} {{path/to/image.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamtofits", "description": "Convert a Netpbm image to the Flexible Image Transport System (FITS) format.", "example": "pamtofits {{path/to/image.pam}} > {{path/to/output.fits}}"}
,
  {"command": "pamtogif", "description": "Convert a Netpbm image into an unanimated GIF image.", "example": "pamtogif {{path/to/image.pam}} > {{path/to/output.gif}}"}
,
  {"command": "pamtopam", "description": "Copy a PAM image.", "example": "pamtopam < {{path/to/image.pam}} > {{path/to/output.pam}}"}
,
  {"command": "pamtopng", "description": "Convert a PAM image to PNG.", "example": "pamtopng {{path/to/image.pam}} > {{path/to/output.png}}"}
,
  {"command": "pamtopnm", "description": "Convert a PAM image to an equivalent PNM image.", "example": "pamtopnm {{path/to/image.pam}} > {{path/to/output.pbm|pgm|ppm}}"}
,
  {"command": "pamtoqoi", "description": "Convert a Netpbm image to a QOI image (Quite OK Image format).", "example": "pamtoqoi {{path/to/image.pnm}} > {{path/to/output.qoi}}"}
,
  {"command": "pamtosrf", "description": "Convert Netpbm images to SRF format.", "example": "pamtosrf {{path/to/file.pam}} > {{path/to/output.srf}}"}
,
  {"command": "pamtotga", "description": "Convert a Netpbm image to a TrueVision Targa file.", "example": "pamtotga {{path/to/file.pam}} > {{path/to/output.tga}}"}
,
  {"command": "pamtotiff", "description": "Convert a PAM image to a TIFF file.", "example": "pamtotiff {{path/to/input_file.pam}} > {{path/to/output_file.tiff}}"}
,
  {"command": "pamtouil", "description": "Convert a PNM or PAM file into a Motif UIL icon file.", "example": "pamtouil {{path/to/input.pnm|pam}} > {{path/to/output.uil}}"}
,
  {"command": "pamtowinicon", "description": "Convert a PAM image to a Windows ICO file.", "example": "pamtowinicon {{path/to/input_file.pam}} > {{path/to/output.ico}}"}
,
  {"command": "pamtoxvmini", "description": "Convert a Netpbm image to an XV thumbnail picture.", "example": "pamtoxvmini {{path/to/input_file.pam}} > {{path/to/output_file}}"}
,
  {"command": "pamundice", "description": "Combine a grid of Netpbm images into one.", "example": "pamundice {{filename_%1d_%1a.ppm}} {{[-a|-across]}} {{grid_width}} {{[-d|-down]}} {{grid_height}} > {{path/to/output.ppm}}"}
,
  {"command": "pamvalidate", "description": "Validate PAM, PGM, PBM and PPM files.", "example": "{{command}} | pamvalidate > {{path/to/output.ext}}"}
,
  {"command": "pandoc", "description": "Convert documents between various formats.", "example": "pandoc {{path/to/input.md}} {{[-o|--output]}} {{path/to/output.pdf}}"}
,
  {"command": "pangolin", "description": "Implements the dynamic nomenclature of SARS-CoV-2 lineages (Pango nomenclature).", "example": "pangolin {{path/to/file.fa}}"}
,
  {"command": "pants", "description": "Fast, scalable, user-friendly, open-source build and developer workflow tool.", "example": "pants list ::"}
,
  {"command": "paperkey", "description": "An OpenPGP key archiver.", "example": "paperkey --secret-key {{path/to/secret_key.gpg}} --output {{path/to/secret_data.txt}}"}
,
  {"command": "par2", "description": "File verification and repair using PAR 2.0 compatible parity archives (.par2 files).", "example": "par2 create -r{{1..100}} -- {{path/to/file}}"}
,
  {"command": "parallel-lint", "description": "Check the syntax of PHP files in parallel.", "example": "parallel-lint {{path/to/directory}}"}
,
  {"command": "parallel", "description": "Run commands on multiple CPU cores.", "example": "parallel gzip ::: {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "parquet-tools", "description": "Show, inspect and manipulate Parquet file.", "example": "parquet-tools cat {{path/to/parquet}}"}
,
  {"command": "particle", "description": "Interact with Particle devices.", "example": "particle setup"}
,
  {"command": "pass", "description": "Store and read passwords or other sensitive data.", "example": "pass init {{gpg_id_1}} {{gpg_id_2}}"}
,
  {"command": "pass-otp", "description": "A pass extension for managing one-time-password (OTP) tokens.", "example": "pass otp insert {{path/to/pass}}"}
,
  {"command": "passwd", "description": "Change a user's password.", "example": "passwd"}
,
  {"command": "pastel", "description": "Generate, analyze, convert and manipulate colors.", "example": "pastel format {{hsl}} {{ff8000}}"}
,
  {"command": "paste", "description": "Merge lines of files.", "example": "paste {{[-s|--serial]}} {{path/to/file}}"}
,
  {"command": "patator", "description": "A multi-purpose brute-forcer, with a modular design and a flexible usage.", "example": "patator ssh_login host={{ip_or_host}} user=FILE0 password=FILE1 0={{path/to/users.txt}} 1={{path/to/passwords.txt}} --rate_limit={{seconds}} --timeout={{seconds}} -x ignore:mesg='Authentication failed.'"}
,
  {"command": "patch", "description": "Patch a file (or files) with a diff file.", "example": "patch < {{patch.diff}}"}
,
  {"command": "patchwork", "description": "Render an image of a `squareified treemap` network graph from a `graphviz` file.", "example": "patchwork -T {{png}} -O {{path/to/input.gv}}"}
,
  {"command": "pathchk", "description": "Check the validity and portability of pathnames.", "example": "pathchk {{path1 path2 ...}}"}
,
  {"command": "pax", "description": "Archiving and copying utility.", "example": "pax -f {{archive.tar}}"}
,
  {"command": "pbmclean", "description": "Clean up a PBM image by erasing isolated black and white pixels.", "example": "pbmclean {{path/to/image.pbm}} > {{path/to/output.pbm}}"}
,
  {"command": "pbmlife", "description": "Apply Conway's Rules of Life to a PBM image.", "example": "pbmlife {{path/to/file.pbm}}"}
,
  {"command": "pbmmake", "description": "Create a blank bitmap.", "example": "pbmmake {{width}} {{height}} > {{path/to/output_file.pbm}}"}
,
  {"command": "pbmmask", "description": "Create a mask bitmap from a regular bitmap.", "example": "pbmmask {{path/to/image.pbm}} > {{path/to/output.pbm}}"}
,
  {"command": "pbmnoise", "description": "Generate white noise.", "example": "pbmnoise {{width}} {{height}} > {{path/to/output.pbm}}"}
,
  {"command": "pbmpage", "description": "Generate a test pattern for printing.", "example": "pbmpage > {{path/to/file.pbm}}"}
,
  {"command": "pbmpscale", "description": "Enlarge a PBM image with edge smoothing.", "example": "pbmpscale {{n}} {{path/to/image.pbm}} > {{path/to/file.pbm}}"}
,
  {"command": "pbmreduce", "description": "Proportionally reduce a PBM image.", "example": "pbmreduce {{n}} {{path/to/image.pbm}} > {{path/to/output.pbm}}"}
,
  {"command": "pbmtext", "description": "Render text as a PBM image.", "example": "pbmtext \"{{Hello World!}}\" > {{path/to/output.pbm}}"}
,
  {"command": "pbmtextps", "description": "Render text as a PBM image using PostScript.", "example": "pbmtextps \"{{Hello World!}}\" > {{path/to/output.pbm}}"}
,
  {"command": "pbmto4425", "description": "Display a PBM image on an AT&T 4425 terminal.", "example": "pbmto4425 {{path/to/image.pbm}}"}
,
  {"command": "pbmtoascii", "description": "Convert a PBM image to ASCII graphics.", "example": "pbmtoascii {{path/to/input_file.pbm}}"}
,
  {"command": "pbmtoatk", "description": "Convert a PBM image to an Andrew Toolkit raster object.", "example": "pbmtoatk {{path/to/image.pbm}} > {{path/to/output.atk}}"}
,
  {"command": "pbmtobbnbg", "description": "Convert a PBM image to a BitGraph graphic.", "example": "pbmtobbnbg < {{path/to/image.pbm}} > {{path/to/output.dpd}}"}
,
  {"command": "pbmtocmuwm", "description": "Convert a PBM image to a CMU window manager bitmap.", "example": "pbmtocmuwm {{path/to/image.pbm}} > {{path/to/output.bmp}}"}
,
  {"command": "pbmtoepsi", "description": "Convert a PBM image to an encapsulated PostScript style preview bitmap.", "example": "pbmtoepsi {{path/to/image.pbm}} > {{path/to/output.bmp}}"}
,
  {"command": "pbmtoepson", "description": "Convert a PBM image to an Epson printer graphic.", "example": "pbmtoepson {{path/to/image.pbm}} > {{path/to/output.epson}}"}
,
  {"command": "pbmtoescp2", "description": "Convert a PBM image to a ESC/P2 printer file.", "example": "pbmtoescp2 {{path/to/image.pbm}} > {{path/to/output.escp2}}"}
,
  {"command": "pbmtogem", "description": "Read a PBM image as input and produce a compressed GEM .img file as output.", "example": "pbmtogem {{path/to/file.pbm}} > {{path/to/file.img}}"}
,
  {"command": "pbmtogo", "description": "Convert a PBM image to a compressed GraphOn graphic.", "example": "pbmtogo {{path/to/image.pbm}} > {{path/to/output.go}}"}
,
  {"command": "pbmtoicon", "description": "This command has been superseded by `pbmtosunicon`.", "example": "tldr pbmtosunicon"}
,
  {"command": "pbmtolj", "description": "Convert a PBM file to an HP LaserJet file.", "example": "pbmtolj {{path/to/input.pbm}} > {{path/to/output.lj}}"}
,
  {"command": "pbmtomacp", "description": "Convert a PBM image to a MacPaint file.", "example": "pbmtomacp {{path/to/image.pbm}} > {{path/to/output.macp}}"}
,
  {"command": "pbmtomda", "description": "Convert a PBM image to a Microdesign MDA file.", "example": "pbmtomda {{path/to/image.pbm}} > {{path/to/output.mda}}"}
,
  {"command": "pbmtomgr", "description": "Convert a PBM image into a MGR bitmap.", "example": "pbmtomgr {{path/to/image.pbm}} > {{path/to/output.mgr}}"}
,
  {"command": "pbmtonokia", "description": "Convert a PBM image to one of Nokia's Smart Messaging Formats .", "example": "pbmtonokia {{[-f|-fmt]}} NEX_NOL -net {{network_operator_code}} {{path/to/image.pbm}} > {{path/to/output.hex}}"}
,
  {"command": "pbmtopgm", "description": "Convert a PBM image to PGM by averaging areas surrounding individual pixels.", "example": "pbmtopgm {{w}} {{h}} {{path/to/image.pbm}} > {{path/to/output.pgm}}"}
,
  {"command": "pbmtopi3", "description": "Convert a PBM image to an Atari Degas PI3 image.", "example": "pbmtopi3 {{path/to/image.pbm}} > {{path/to/atari_image.pi3}}"}
,
  {"command": "pbmtoplot", "description": "Convert a PBM image into a UNIX plot file.", "example": "pbmtoplot {{path/to/image.pbm}} > {{path/to/output.plot}}"}
,
  {"command": "pbmtoppa", "description": "Convert a PBM image to HP Printer Performance Architecture format.", "example": "pbmtoppa {{path/to/image.pbm}} > {{path/to/output.ppa}}"}
,
  {"command": "pbmtoptx", "description": "Convert a PBM image into Printronix printer graphics.", "example": "pbmtoptx {{path/to/image.pbm}} > {{path/to/output.ptx}}"}
,
  {"command": "pbmtosunicon", "description": "Convert a PBM image into a Sun icon.", "example": "pbmtosunicon {{path/to/input.pbm}} > {{path/to/output.ico}}"}
,
  {"command": "pbmtowbmp", "description": "Convert a PBM image to a wireless bitmap file.", "example": "pbmtowbmp {{path/to/input_file.pbm}} > {{path/to/output_file.wbmp}}"}
,
  {"command": "pbmtox10bm", "description": "This command has been superseded by `pbmtoxbm -x10`.", "example": "tldr pbmtoxbm"}
,
  {"command": "pbmtoxbm", "description": "Convert a PBM image to a X11 or X10 bitmap.", "example": "pbmtoxbm {{path/to/input_file.pbm}} > {{path/to/output_file.xbm}}"}
,
  {"command": "pbmtoybm", "description": "Convert a PBM file to a Bennet Yee \"face\" file.", "example": "pbmtoybm {{path/to/input_file.pbm}} > {{path/to/output_file.ybm}}"}
,
  {"command": "pbmtozinc", "description": "Convert a PBM image to a Zinc bitmap as used by the Zinc Interface Library Version 1.0.", "example": "pbmtozinc {{path/to/image.pbm}} > {{path/to/output.zinc}}"}
,
  {"command": "pbmupc", "description": "Generate a PBM image of a Universal Product Code (UPC).", "example": "pbmupc {{product_type}} {{manufacturer_code}} {{product_code}} > {{path/to/output.pbm}}"}
,
  {"command": "pbzip2", "description": "A parallel implementation of the `bzip2` file compressor.", "example": "pbzip2 {{path/to/file}}"}
,
  {"command": "pcapfix", "description": "Repair damaged or corrupted PCAP and PcapNG files.", "example": "pcapfix {{path/to/file.pcapng}}"}
,
  {"command": "pcdindex", "description": "This command has been renamed to `pcdovtoppm`.", "example": "tldr pcdovtoppm"}
,
  {"command": "pcdovtoppm", "description": "Create an index image for a photo CD based on its overview file.", "example": "pcdovtoppm {{path/to/file.pcd}} > {{path/to/output.ppm}}"}
,
  {"command": "pcxtoppm", "description": "Convert a PCX file to a PPM image.", "example": "pcxtoppm {{path/to/file.pcx}} > {{path/to/file.ppm}}"}
,
  {"command": "pdffonts", "description": "Portable Document Format (PDF) file fonts information viewer.", "example": "pdffonts {{path/to/file.pdf}}"}
,
  {"command": "pdfgrep", "description": "Search text in PDF files.", "example": "pdfgrep {{pattern}} {{file.pdf}}"}
,
  {"command": "pdfimages", "description": "Utility for extracting images from PDFs.", "example": "pdfimages -png {{path/to/file.pdf}} {{filename_prefix}}"}
,
  {"command": "pdfinfo", "description": "Portable Document Format (PDF) file information viewer.", "example": "pdfinfo {{path/to/file.pdf}}"}
,
  {"command": "pdfjam", "description": "Shell frontend for the LaTeX pdfpages package for mingling PDFs.", "example": "pdfjam {{path/to/file1.pdf path/to/file2.pdf ...}} {{[-o|--outfile]}} {{path/to/output_file.pdf}}"}
,
  {"command": "pdfjoin", "description": "PDF merging utility based on pdfjam.", "example": "pdfjoin {{path/to/file1.pdf}} {{path/to/file2.pdf}}"}
,
  {"command": "pdflatex", "description": "Compile a PDF document from LaTeX source files.", "example": "pdflatex {{source.tex}}"}
,
  {"command": "pdf-parser", "description": "Identify fundamental elements of a PDF file without rendering it.", "example": "pdf-parser {{[-a|--stats]}} {{path/to/file.pdf}}"}
,
  {"command": "pdfposter", "description": "Convert a large-sheeted PDF into multiple A4 pages for printing.", "example": "pdfposter --poster-size a2 {{input_file.pdf}} {{output_file.pdf}}"}
,
  {"command": "pdfseparate", "description": "Portable Document Format (PDF) file page extractor.", "example": "pdfseparate {{path/to/source_filename.pdf}} {{path/to/destination_filename-%d.pdf}}"}
,
  {"command": "pdftex", "description": "Compile a PDF document from TeX source files.", "example": "pdftex {{source.tex}}"}
,
  {"command": "pdftk", "description": "PDF toolkit.", "example": "pdftk {{input.pdf}} cat {{1-3 5 6-10}} output {{output.pdf}}"}
,
  {"command": "pdftocairo", "description": "Convert PDF files to PNG/JPEG/TIFF/PDF/PS/EPS/SVG using cairo.", "example": "pdftocairo {{path/to/file.pdf}} -jpeg"}
,
  {"command": "pdftotext", "description": "Convert PDF files to plain text format.", "example": "pdftotext {{filename.pdf}} -"}
,
  {"command": "pdfunite", "description": "PDF merging utility.", "example": "pdfunite {{path/to/fileA.pdf}} {{path/to/fileB.pdf}} {{path/to/merged_output.pdf}}"}
,
  {"command": "peco", "description": "Interactive filtering tool.", "example": "find {{path/to/directory}} -type f | peco"}
,
  {"command": "pee", "description": "Tee `stdin` to pipes.", "example": "pee {{command1 command2 ...}}"}
,
  {"command": "peerflix", "description": "Stream video- or audio-based torrents to a media player.", "example": "peerflix \"{{torrent_url|magnet_link}}\""}
,
  {"command": "peerindex", "description": "Inspect MRT TABLE_DUMPV2 Peer Index Table.", "example": "peerindex {{master6.mrt}}"}
,
  {"command": "peludna-prognoza", "description": "Fetch pollen measurement data for Croatian cities from your terminal using Pliva's allergies data API.", "example": "peludna-prognoza"}
,
  {"command": "perlbrew", "description": "Manage Perl installations in the home directory.", "example": "perlbrew init"}
,
  {"command": "perldoc", "description": "Look up Perl documentation in `.pod` format.", "example": "perldoc -{{f|v|a}} {{name}}"}
,
  {"command": "perl", "description": "The Perl 5 language interpreter.", "example": "perl -n -e 'print if m/{{regex1}}/ and m/{{regex2}}/i'"}
,
  {"command": "pest", "description": "A PHP testing framework with a focus on simplicity.", "example": "pest --init"}
,
  {"command": "pfetch", "description": "Display system information.", "example": "pfetch"}
,
  {"command": "pgbench", "description": "Run a benchmark test on PostgreSQL.", "example": "pgbench --initialize --scale={{50}} {{database_name}}"}
,
  {"command": "pgcli", "description": "A modern PostgreSQL CLI with auto-completion and syntax highlighting.", "example": "pgcli postgresql://{{user}}@{{host}}/{{database}}"}
,
  {"command": "pg_ctl", "description": "Utility for controlling a PostgreSQL server and database cluster.", "example": "pg_ctl {{[-D|--pgdata]}} {{data_directory}} init"}
,
  {"command": "pg_dumpall", "description": "Extract a PostgreSQL database cluster into a script file or other archive file.", "example": "pg_dumpall > {{path/to/file.sql}}"}
,
  {"command": "pg_dump", "description": "Extract a PostgreSQL database into a script file or other archive file.", "example": "pg_dump {{db_name}} > {{output_file.sql}}"}
,
  {"command": "pg_isready", "description": "Check the connection status of a PostgreSQL server.", "example": "pg_isready"}
,
  {"command": "pgmbentley", "description": "Bentleyize a PGM image.", "example": "pgmbentley {{path/to/input_file.pgm}} > {{path/to/output_file.pgm}}"}
,
  {"command": "pgmcrater", "description": "This command has been superseded by `pamcrater`, `pamshadedrelief`, and `pamtopnm`.", "example": "tldr pamcrater"}
,
  {"command": "pgmdeshadow", "description": "Deshadow a PGM image.", "example": "pgmdeshadow {{path/to/input_file.pgm}} > {{path/to/output_file.pgm}}"}
,
  {"command": "pgmedge", "description": "This command has been superseded by `pamedge`.", "example": "tldr pamedge"}
,
  {"command": "pgmenhance", "description": "Edge-enhance a PGM image.", "example": "pgmenhance {{path/to/image.pgm}} > {{path/to/output.pgm}}"}
,
  {"command": "pgmhist", "description": "Print a histogram of the values present in a PGM image.", "example": "pgmhist {{path/to/image.pgm}}"}
,
  {"command": "pgmkernel", "description": "Generate a convolution kernel to be used with `pnmconvol`.", "example": "pgmkernel {{width}} {{height}} > {{path/to/output.pgm}}"}
,
  {"command": "pgmmake", "description": "Create PGM image with a uniform gray level.", "example": "pgmmake {{graylevel}} {{width}} {{height}} > {{path/to/output_file.pgm}}"}
,
  {"command": "pgmnoise", "description": "Generate white noise.", "example": "pgmnoise {{width}} {{height}} > {{path/to/output.pgm}}"}
,
  {"command": "pgmnorm", "description": "This command has been superseded by `pnmnorm`.", "example": "tldr pnmnorm"}
,
  {"command": "pgmoil", "description": "This command has been superseded by `pamoil`.", "example": "tldr pamoil"}
,
  {"command": "pgmramp", "description": "Generate a greyscale map.", "example": "pgmtexture -lr > {{path/to/output.pgm}}"}
,
  {"command": "pgmslice", "description": "This command has been superseded by `pamslice`.", "example": "tldr pamslice"}
,
  {"command": "pgmtexture", "description": "Extract textural features from a PGM image.", "example": "pgmtexture {{path/to/image.pgm}} > {{path/to/output.pgm}}"}
,
  {"command": "pgmtofs", "description": "Convert a PGM image to Usenix FaceSaver format.", "example": "pgmtofs {{path/to/input.pgm}} > {{path/to/output.fs}}"}
,
  {"command": "pgmtolispm", "description": "Convert a PGM image to Lisp Machine format.", "example": "pgmtolispm {{path/to/input.pgm}} > {{path/to/output.lispm}}"}
,
  {"command": "pgmtopbm", "description": "This command has been superseded by `pamditherbw`.", "example": "tldr pamditherbw"}
,
  {"command": "pgmtopgm", "description": "Copy a PGM image file.", "example": "pgmtopgm"}
,
  {"command": "pgmtoppm", "description": "Colorize a PGM image.", "example": "pgmtoppm {{[-b|-black]}} {{red}} {{[-w|-white]}} {{blue}} {{path/to/input.pgm}} > {{path/to/output.ppm}}"}
,
  {"command": "pgmtosbig", "description": "Convert a PGM image to the SBIG CCDOPS format.", "example": "pgmtosbig {{path/to/input_file.pgm}} > {{path/to/output.sbig}}"}
,
  {"command": "pgmtost4", "description": "Convert a PGM image to the SBIG ST-4 format.", "example": "pgmtost4 {{path/to/input_file.pgm}} > {{path/to/output.st4}}"}
,
  {"command": "pgrep", "description": "Find or signal processes by name.", "example": "pgrep {{process_name}}"}
,
  {"command": "pg_restore", "description": "Restore a PostgreSQL database from an archive file created by pg_dump.", "example": "pg_restore {{[-d|--dbname]}} {{db_name}} {{archive_file.dump}}"}
,
  {"command": "phan", "description": "A static analysis tool for PHP.", "example": "phan --init"}
,
  {"command": "phing", "description": "A PHP build tool based on Apache Ant.", "example": "phing"}
,
  {"command": "phive", "description": "The Phar Installation and Verification Environment for secure PHP application deployment.", "example": "phive list"}
,
  {"command": "php-artisan", "description": "Laravel's Artisan command-line interface.", "example": "php artisan serve"}
,
  {"command": "phpbu", "description": "A backup utility framework for PHP.", "example": "phpbu"}
,
  {"command": "phpcbf", "description": "Fix violations detected by phpcs.", "example": "phpcbf {{path/to/directory}}"}
,
  {"command": "php-coveralls", "description": "A PHP client for Coveralls.", "example": "php-coveralls"}
,
  {"command": "phpcpd", "description": "A copy and paste detector for PHP code.", "example": "phpcpd {{path/to/file_or_directory}}"}
,
  {"command": "php-cs-fixer", "description": "Automatic coding style fixer for PHP.", "example": "php-cs-fixer fix"}
,
  {"command": "phpcs", "description": "Tokenize PHP, JavaScript and CSS files to detect violations of a defined set of coding standards.", "example": "phpcs {{path/to/directory}}"}
,
  {"command": "phpdox", "description": "A PHP documentation generator.", "example": "phpdox --skel"}
,
  {"command": "phpenv", "description": "A PHP version manager for development purposes.", "example": "phpenv install {{version}}"}
,
  {"command": "phpize", "description": "Prepare a PHP extension for compiling.", "example": "phpize"}
,
  {"command": "phploc", "description": "Quickly measure the size and analyzing the structure of a PHP project.", "example": "phploc {{path/to/directory}}"}
,
  {"command": "php", "description": "PHP command-line interface.", "example": "php {{path/to/file}}"}
,
  {"command": "phpmd", "description": "PHP mess detector: check for common potential problems.", "example": "phpmd"}
,
  {"command": "phpspec", "description": "A Behaviour Driven Development tool for PHP.", "example": "phpspec describe {{class_name}}"}
,
  {"command": "phpstan", "description": "A PHP static analysis tool to discover bugs in code.", "example": "phpstan analyse {{path/to/directory1 path/to/directory2 ...}}"}
,
  {"command": "phpstorm", "description": "A cross-platform IDE for PHP based on the JetBrains IntelliJ platform.", "example": "phpstorm {{path/to/directory}}"}
,
  {"command": "phpunit", "description": "PHPUnit test runner.", "example": "phpunit"}
,
  {"command": "php-yii", "description": "Yii Framework's command-line interface.", "example": "php yii {{serve}}"}
,
  {"command": "pi1toppm", "description": "Convert an Atari Degas PI1 image to a PPM image.", "example": "pi1toppm {{path/to/atari_image.pi1}} > {{path/to/image.ppm}}"}
,
  {"command": "pi3topbm", "description": "Convert an Atari Degas PI3 image to PBM image.", "example": "pi1topbm {{path/to/atari_image.pi3}} > {{path/to/output_image.pbm}}"}
,
  {"command": "piactl", "description": "The tool for Private Internet Access, a commercial VPN provider.", "example": "piactl login {{path/to/login_file}}"}
,
  {"command": "picard", "description": "Next generation MusicBrainz tagging application.", "example": "picard"}
,
  {"command": "picgo", "description": "Upload an image to an image hosting service (default is SM.MS).", "example": "picgo set uploader"}
,
  {"command": "pickle", "description": "A PHP extension installer based on Composer.", "example": "pickle install {{extension_name}}"}
,
  {"command": "pic", "description": "Picture preprocessor for the groff (GNU Troff) document formatting system.", "example": "pic {{path/to/input.pic}} > {{path/to/output.roff}}"}
,
  {"command": "picocom", "description": "Minimal program to emulate serial consoles.", "example": "sudo picocom {{/dev/ttyXYZ}}"}
,
  {"command": "pico", "description": "Text editor styled after the Alpine Composer.", "example": "pico {{path/to/file}}"}
,
  {"command": "picom-trans", "description": "Set the window opacity for the `picom` window compositor.", "example": "picom-trans --current --opacity {{90}}"}
,
  {"command": "picotool", "description": "Manage Raspberry Pi Pico boards.", "example": "picotool info"}
,
  {"command": "picttoppm", "description": "Convert a Macintosh PICT file to a PPM image.", "example": "picttoppm {{path/to/file.pict}} > {{path/to/file.ppm}}"}
,
  {"command": "pigz", "description": "Multithreaded zlib compression utility.", "example": "pigz {{path/to/file}}"}
,
  {"command": "ping6", "description": "Send ICMP ECHO_REQUEST packets to network hosts via IPv6 address.", "example": "ping6 {{host}}"}
,
  {"command": "ping6.py", "description": "Simple ICMPv6 ping using Impacket to check if an IPv6 host is reachable.", "example": "ping6.py {{source_ipv6}} {{destination_ipv6}}"}
,
  {"command": "ping", "description": "Send ICMP ECHO_REQUEST packets to network hosts.", "example": "ping {{host}}"}
,
  {"command": "ping.py", "description": "Simple ICMP ping using Impacket to check if an IPv4 host is reachable.", "example": "ping.py {{source_ipv4}} {{destination_ipv4}}"}
,
  {"command": "pinky", "description": "Print user information using the `finger` protocol.", "example": "pinky"}
,
  {"command": "pinta", "description": "A free, open source program for drawing and image editing.", "example": "pinta"}
,
  {"command": "pint", "description": "An opinionated PHP code style fixer based on PHP-CS-Fixer.", "example": "pint"}
,
  {"command": "pio-access", "description": "Set the access level on published resources (packages) in the registry.", "example": "pio access grant {{guest|maintainer|admin}} {{username}} {{resource_urn}}"}
,
  {"command": "pio-account", "description": "Manage your PlatformIO account.", "example": "pio account register {{[-u|--username]}} {{username}} {{[-e|--email]}} {{email}} {{[-p|--password]}} {{password}} --firstname {{firstname}} --lastname {{lastname}}"}
,
  {"command": "pio-boards", "description": "List pre-configured embedded boards available in PlatformIO.", "example": "pio boards"}
,
  {"command": "pio-check", "description": "Perform a static analysis check on a PlatformIO project.", "example": "pio check"}
,
  {"command": "pio-ci", "description": "Build PlatformIO projects with an arbitrary source code structure.", "example": "pio ci {{path/to/project}}"}
,
  {"command": "piodebuggdb", "description": "This command is an alias of `pio debug --interface=gdb`.", "example": "tldr pio debug"}
,
  {"command": "pio-debug", "description": "Debug PlatformIO projects.", "example": "pio debug"}
,
  {"command": "pio-device", "description": "Manage and monitor PlatformIO devices.", "example": "pio device list"}
,
  {"command": "pio-home", "description": "Launch the PlatformIO Home web server.", "example": "pio home"}
,
  {"command": "pio-init", "description": "This command is an alias of `pio project init`.", "example": "tldr pio project"}
,
  {"command": "pio-lib", "description": "Manage PlatformIO libraries.", "example": "pio lib list"}
,
  {"command": "pio", "description": "Development environment for embedded boards.", "example": "pio {{[-h|--help]}}"}
,
  {"command": "pio-org", "description": "Manage PlatformIO organizations and their owners.", "example": "pio org create {{organization_name}}"}
,
  {"command": "pio-pkg", "description": "Manage packages in the registry.", "example": "pio pkg pack {{[-o|--output]}} {{path/to/package.tar.gz}}"}
,
  {"command": "pio-platform", "description": "Manage PlatformIO development platforms.", "example": "pio platform list"}
,
  {"command": "pio-project", "description": "Manage PlatformIO projects.", "example": "pio project init"}
,
  {"command": "pio-remote", "description": "Helper command for PlatformIO Remote Development.", "example": "pio remote agent list"}
,
  {"command": "pio-run", "description": "Run PlatformIO project targets.", "example": "pio run --list-targets"}
,
  {"command": "pio-settings", "description": "View and modify PlatformIO settings.", "example": "pio settings get"}
,
  {"command": "pio-system", "description": "Miscellaneous system commands for PlatformIO.", "example": "pio system completion install"}
,
  {"command": "pio-team", "description": "Manage PlatformIO teams.", "example": "pio team create --description {{description}} {{organization_name}}:{{team_name}}"}
,
  {"command": "pio-test", "description": "Run local tests on a PlatformIO project.", "example": "pio test"}
,
  {"command": "pio-update", "description": "Update installed PlatformIO Core packages, development platforms and global libraries.", "example": "pio update"}
,
  {"command": "pio-upgrade", "description": "Update PlatformIO to the latest version.", "example": "pio upgrade"}
,
  {"command": "pip3", "description": "Python package manager.", "example": "pip3 install {{package}}"}
,
  {"command": "pipenv", "description": "Simple and unified Python development workflow.", "example": "pipenv"}
,
  {"command": "piper", "description": "A fast, local neural text to speech system.", "example": "echo {{Thing to say}} | piper -m {{path/to/model.onnx}} -f {{outputfile.wav}}"}
,
  {"command": "pipes.sh", "description": "A Bash script which draws randomly pathed pipes over the terminal.", "example": "pipes.sh -t {{0..9}}"}
,
  {"command": "pip-freeze", "description": "List installed packages in requirements format.", "example": "pip freeze"}
,
  {"command": "pip-install", "description": "Install Python packages.", "example": "pip install {{package}}"}
,
  {"command": "pip", "description": "Python package manager.", "example": "pip install {{package}}"}
,
  {"command": "pip-uninstall", "description": "Uninstall Python packages.", "example": "pip uninstall {{package}}"}
,
  {"command": "pipx", "description": "Install and run Python applications in isolated environments.", "example": "pipx run {{pycowsay}} {{moo}}"}
,
  {"command": "pixi-config", "description": "Manage the configuration file.", "example": "pixi config edit"}
,
  {"command": "pixiecore", "description": "Manage the network booting of machines.", "example": "pixiecore {{quick}} xyz --dhcp-no-bind"}
,
  {"command": "pixi-global", "description": "Manage global packages.", "example": "pixi global install {{package1 package2 ...}}"}
,
  {"command": "pixi", "description": "Developer Workflow and Environment Management for projects.", "example": "pixi init {{path/to/project}}"}
,
  {"command": "pixi-project", "description": "Modify the project configuration file.", "example": "pixi project channel {{command}}"}
,
  {"command": "pixi-task", "description": "Manage tasks in the project environment.", "example": "pixi task add {{task_name}} {{task_command}}"}
,
  {"command": "pixterm", "description": "Image printing in the terminal.", "example": "pixterm {{path/to/file}}"}
,
  {"command": "pjtoppm", "description": "Convert a HP PaintJet file to PPM.", "example": "pjtoppm {{path/to/input.pj}} > {{path/to/output.ppm}}"}
,
  {"command": "pkcs11-tool", "description": "Utility for managing and using PKCS #11 security tokens.", "example": "pkcs11-tool --module {{path/to/module.so}} {{[-L|--list-slots]}} {{[-T|--list-token-slots]}}"}
,
  {"command": "pkg-config", "description": "Provide the details of installed libraries for compiling applications.", "example": "pkg-config --libs {{library1 library2 ...}}"}
,
  {"command": "pkgz", "description": "Unified package manager for installing, removing, updating, and searching packages from multiple sources.", "example": "pkgz install {{package_name}}"}
,
  {"command": "pkill", "description": "Signal process by name.", "example": "pkill \"{{process_name}}\""}
,
  {"command": "plantuml", "description": "Create UML diagrams from a plain text language and render them in different formats.", "example": "plantuml {{diagram1.puml}} {{diagram2.puml}}"}
,
  {"command": "platformio", "description": "This command is an alias of `pio`.", "example": "tldr pio"}
,
  {"command": "play", "description": "Audio player of SoX - Sound eXchange.", "example": "play {{path/to/audio_file}}"}
,
  {"command": "plenv", "description": "Switch between multiple versions of Perl.", "example": "plenv version"}
,
  {"command": "plesk", "description": "Plesk hosting control panel.", "example": "plesk login"}
,
  {"command": "plocate", "description": "Find filenames quickly.", "example": "plocate {{pattern}}"}
,
  {"command": "pm2", "description": "Process manager for Node.js.", "example": "pm2 start {{app.js}} --name {{application_name}}"}
,
  {"command": "pngcheck", "description": "Forensics tool for validating the integrity of PNG based (PNG, JNG, MNG) image files.", "example": "pngcheck {{path/to/image.png}}"}
,
  {"command": "pngcrush", "description": "PNG compression utility.", "example": "pngcrush {{in.png}} {{out.png}}"}
,
  {"command": "pngquant", "description": "PNG converter and lossy image compressor.", "example": "pngquant {{path/to/file.png}}"}
,
  {"command": "pngtopam", "description": "Convert a PNG image to a Netpbm image.", "example": "pngtopam {{path/to/image.png}} > {{path/to/output.pam}}"}
,
  {"command": "pngtopnm", "description": "This command has been superseded by `pngtopam`.", "example": "tldr pngtopam"}
,
  {"command": "pnmalias", "description": "Apply antialiasing onto a PNM image.", "example": "pnmalias {{path/to/input.pnm}} > {{path/to/output.ppm}}"}
,
  {"command": "pnmarith", "description": "This command has been superseded by `pamarith`.", "example": "tldr pamarith"}
,
  {"command": "pnmcolormap", "description": "Create quantization color map for a PNM image.", "example": "pnmcolormap {{n_colors}} {{path/to/input.pnm}} > {{path/to/output.ppm}}"}
,
  {"command": "pnmcomp", "description": "This command has been superseded by `pamcomp`.", "example": "tldr pamcomp"}
,
  {"command": "pnmconvol", "description": "Convolute a PNM image.", "example": "pnmconvol -matrix=-1,3,-1 {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmcrop", "description": "Crop PNM images.", "example": "pnmcrop {{[-w|-white]}} {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmcut", "description": "This command has been superseded by `pamcut`.", "example": "tldr pamcut"}
,
  {"command": "pnmdepth", "description": "This command is an alias of `pamdepth`.", "example": "tldr pamdepth"}
,
  {"command": "pnmenlarge", "description": "This command has been superseded by `pamenlarge`.", "example": "tldr pamenlarge"}
,
  {"command": "pnmfile", "description": "This command has been superseded by `pamfile`.", "example": "tldr pamfile"}
,
  {"command": "pnmflip", "description": "This command has been superseded by `pamflip`.", "example": "tldr pamflip"}
,
  {"command": "pnmgamma", "description": "Perform gamma correction on PNM images.", "example": "pnmgamma -{{bt709tolinear|bt709tosrgb}} {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmhisteq", "description": "Histogram-equalize a PNM image.", "example": "pnmhisteq {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmhistmap", "description": "Draw a histogram of a PNM image.", "example": "pnmhistmap {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmindex", "description": "Build a visual index of multiple PNM images.", "example": "pnmindex {{path/to/input1.pnm path/to/input2.pnm ...}} > {{path/to/output.pnm}}"}
,
  {"command": "pnminterp", "description": "This command has been superseded by `pamstretch`.", "example": "tldr pamstretch"}
,
  {"command": "pnminvert", "description": "Invert a PNM image.", "example": "pnminvert {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmmargin", "description": "Add a border to a PNM image.", "example": "pnmmargin {{size}} {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmmercator", "description": "Perform Mercator transformations on Netpbm images.", "example": "pnmmercator {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmmontage", "description": "Create a montage from multiple PNM images.", "example": "pnmmontage {{path/to/image1.pnm path/to/image2.pnm ...}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmnlfilt", "description": "Apply a non-linear filter onto a PNM image.", "example": "pnmnlfilt {{0.0..0.5}} {{radius}} {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmnorm", "description": "Normalize the contrast in a PNM image.", "example": "pnmnorm {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmpad", "description": "Add borders to a PNM image.", "example": "pnmpad {{[-l|-left]}} {{100}} {{[-ri|-right]}} {{150}} {{[-t|-top]}} {{123}} {{[-bo|-bottom]}} {{456}} {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmpaste", "description": "Paste a PNM image into another PNM image.", "example": "pnmpaste {{x}} {{y}} {{path/to/image1.pnm}} {{path/to/image2.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmpsnr", "description": "Compute the difference between two images.", "example": "pnmpsnr {{path/to/file1.pnm}} {{path/to/file2.pnm}}"}
,
  {"command": "pnmquantall", "description": "Run `pnmquant` on multiple files at once such that they share a common colormap.", "example": "pnmquantall {{n_colors}} {{path/to/input1.pnm path/to/input2.pnm ...}}"}
,
  {"command": "pnmquant", "description": "Quantize the colors in a PNM image into a smaller set.", "example": "pnmquant {{n_colors}} {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmremap", "description": "Replace the colors in a PNM image.", "example": "pnmremap {{[-ma|-mapfile]}} {{path/to/palette_file.ppm}} {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmrotate", "description": "Rotate a PNM image.", "example": "pnmrotate {{angle}} {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmscalefixed", "description": "Scale a PNM file quickly with possibly reduced quality.", "example": "pnmscalefixed {{[-w|-width]}} {{width}} {{[-h|-height]}} {{height}} {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmscale", "description": "This command has been replaced by `pamscale`.", "example": "tldr pamscale"}
,
  {"command": "pnmshear", "description": "Shear a PNM image.", "example": "pnmshear {{angle}} {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmsmooth", "description": "Smooth out a PNM image.", "example": "pnmsmooth {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmsplit", "description": "This command has been superseded by `pamsplit`.", "example": "tldr pamsplit"}
,
  {"command": "pnmtile", "description": "Replicate an image to fill a specified area.", "example": "pnmtile {{width}} {{height}} {{path/to/input.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "pnmtoddif", "description": "Convert a PNM image to a DDIF image file.", "example": "pnmtoddif {{path/to/image.pnm}} > {{path/to/image.ddif}}"}
,
  {"command": "pnmtofiasco", "description": "Convert a PNM image to a compressed FIASCO file.", "example": "pnmtofiasco {{path/to/file.pnm}} > {{path/to/file.fiasco}}"}
,
  {"command": "pnmtofits", "description": "This command has been superseded by `pamtofits`.", "example": "tldr pamtofits"}
,
  {"command": "pnmtojpeg", "description": "Convert a PNM image file to the JPEG/JFIF/EXIF image format.", "example": "pnmtojpeg {{path/to/file.pnm}} > {{path/to/file.jpg}}"}
,
  {"command": "pnmtopalm", "description": "Convert a PNM image to a Palm bitmap.", "example": "pnmtopalm {{path/to/file.pnm}} > {{path/to/file.palm}}"}
,
  {"command": "pnmtopclxl", "description": "Convert a PNM file to an HP LaserJet PCL XL printer stream.", "example": "pnmtopclxl {{path/to/input1.pnm path/to/input2.pnm ...}} > {{path/to/output.pclxl}}"}
,
  {"command": "pnmtoplainpnm", "description": "This command is an alias of `pamtopnm -plain`.", "example": "tldr pamtopnm"}
,
  {"command": "pnmtopng", "description": "Convert a PNM image file to PNG image format.", "example": "pnmtopng {{path/to/file.pnm}} > {{path/to/file.png}}"}
,
  {"command": "pnmtopnm", "description": "This command is an alias of `pamtopnm`.", "example": "tldr pamtopnm"}
,
  {"command": "pnmtops", "description": "Convert a PNM image to a PostScript file.", "example": "pnmtops {{path/to/file.pnm}} > {{path/to/file.ps}}"}
,
  {"command": "pnmtorast", "description": "Convert a PNM file to a Sun rasterfile.", "example": "pnmtorast {{path/to/input.pnm}} > {{path/to/output.rast}}"}
,
  {"command": "pnmtorle", "description": "Convert a PNM file to an Utah Raster Tools RLE image file.", "example": "pnmtorle {{path/to/input.pnm}} > {{path/to/output.rle}}"}
,
  {"command": "pnmtosgi", "description": "Convert a PNM file to an SGI image file.", "example": "pnmtosgi {{path/to/input.pnm}} > {{path/to/output.sgi}}"}
,
  {"command": "pnmtosir", "description": "Convert a PNM file to a Solitaire Image Recorder file.", "example": "pnmtosir {{path/to/input.pnm}} > {{path/to/output.sir}}"}
,
  {"command": "pnmtotiffcmyk", "description": "Convert a PNM image to a CMYK encoded TIFF.", "example": "pnmtotiffcmyk {{path/to/input_file.pnm}} > {{path/to/output_file.tiff}}"}
,
  {"command": "pnmtotiff", "description": "This command has been superseded by `pamtotiff`.", "example": "tldr pamtotiff"}
,
  {"command": "pnmtoxwd", "description": "Convert a PNM file into an X11 window dump file.", "example": "pnmtoxwd {{path/to/input_file.pnm}} > {{path/to/output_file.xwd}}"}
,
  {"command": "pnpm-audit", "description": "Scan project dependencies.", "example": "pnpm audit"}
,
  {"command": "pnpm", "description": "Fast, disk space efficient package manager for Node.js.", "example": "pnpm init"}
,
  {"command": "pnpm-outdated", "description": "Check for outdated packages.", "example": "pnpm outdated"}
,
  {"command": "pnpx", "description": "Directly execute binaries from npm packages, using `pnpm` instead of `npm`.", "example": "pnpx {{module_name}}"}
,
  {"command": "pocount", "description": "Translate Toolkit utility to get translation progress from file, supporting several formats.", "example": "pocount {{path/to/file/file.po}}"}
,
  {"command": "podman-build", "description": "Daemonless tool for building container images.", "example": "podman build {{path/to/directory}}"}
,
  {"command": "podman-compose", "description": "Run and manage Compose Specification container definition.", "example": "podman-compose ps"}
,
  {"command": "podman-image", "description": "Manage Docker images.", "example": "podman image ls"}
,
  {"command": "podman-images", "description": "Manage Podman images.", "example": "podman images"}
,
  {"command": "podman-login", "description": "Log in to a container registry.", "example": "podman login {{registry.example.org}}"}
,
  {"command": "podman-machine", "description": "Create and manage virtual machines running Podman.", "example": "podman machine ls"}
,
  {"command": "podman", "description": "Simple management tool for pods, containers and images.", "example": "podman ps --all"}
,
  {"command": "podman-ps", "description": "List Podman containers.", "example": "podman ps"}
,
  {"command": "podman-rmi", "description": "Remove Podman images.", "example": "podman rmi {{image:tag image2:tag ...}}"}
,
  {"command": "podman-run", "description": "Run a command in a new Podman container.", "example": "podman run {{image:tag}} {{command}}"}
,
  {"command": "poetry", "description": "Manage Python packages and dependencies.", "example": "poetry new {{project_name}}"}
,
  {"command": "pokeget", "description": "Display sprites of Pokemon in your terminal.", "example": "pokeget {{pokemon_name}}"}
,
  {"command": "polybar", "description": "A fast and easy-to-use status bar.", "example": "polybar {{bar_name}}"}
,
  {"command": "polybar-msg", "description": "Control `polybar` using inter-process-messaging (IPC).", "example": "polybar-msg cmd quit"}
,
  {"command": "popd", "description": "Remove a directory placed on the directory stack via the pushd shell built-in.", "example": "popd"}
,
  {"command": "popeye", "description": "Report potential issues with Kubernetes deployment manifests.", "example": "popeye"}
,
  {"command": "pop", "description": "Send emails from your terminal.", "example": "pop"}
,
  {"command": "postcss", "description": "Transform styles with JS plugins.", "example": "postcss {{path/to/file}}"}
,
  {"command": "powershell", "description": "This command may be mistaken as the cross-platform version of PowerShell (formerly known as PowerShell Core), which uses `pwsh` instead of `powershell`.", "example": "tldr pwsh"}
,
  {"command": "ppmbrighten", "description": "This command has been superseded by `pambrighten`.", "example": "tldr pambrighten"}
,
  {"command": "ppmchange", "description": "Change all pixels of one color in a PPM image to another color.", "example": "ppmchange {{oldcolor1 newcolor1 oldcolor2 newcolor2 ...}} {{path/to/input.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "ppmcie", "description": "Draw a CIE color chart as a PPM image.", "example": "ppmcie > {{path/to/output.ppm}}"}
,
  {"command": "ppmcolormask", "description": "Produce a mask of areas of a certain color in a PPM image.", "example": "ppmcolormask {{[-c|-color]}} {{red,blue}} {{path/to/input.ppm}} > {{path/to/output.pbm}}"}
,
  {"command": "ppmdim", "description": "Dim a PPM image.", "example": "ppmdim {{0.6}} {{path/to/input.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "ppmdist", "description": "Produce a grayscale version of a PPM image.", "example": "ppmdist {{path/to/input.ppm}} > {{path/to/output.pgm}}"}
,
  {"command": "ppmdither", "description": "Reduce the number of colors in an image by applying dithering.", "example": "ppmdither {{path/to/image.ppm}} > {{path/to/file.ppm}}"}
,
  {"command": "ppmdraw", "description": "Draw lines, text and more on a PPM image by executing a script.", "example": "ppmdraw -script '{{setpos 50 50; text_here \"hello!\"; }}' {{path/to/image.pnm}} > {{path/to/output.pnm}}"}
,
  {"command": "ppmfade", "description": "Generate a transition between two PPM images.", "example": "ppmfade -f {{path/to/image1.ppm}} -l {{path/to/image2.ppm}} -{{mix|spread|shift|relief|oil|...}}"}
,
  {"command": "ppmflash", "description": "Brighten a PPM image file.", "example": "ppmflash {{flashfactor}} {{path/to/file.ppm}} > {{path/to/file.ppm}}"}
,
  {"command": "ppmforge", "description": "Generate fractals resembling clouds, planets and starry skies.", "example": "ppmforge > {{path/to/image.ppm}}"}
,
  {"command": "ppmglobe", "description": "Generate strips of an image suitable to be glued onto a sphere.", "example": "ppmglobe {{number_of_strips}} {{path/to/image.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "ppmhist", "description": "Print a histogram of the colors present in a PPM image.", "example": "ppmhist {{[-nom|-nomap]}} {{path/to/image.ppm}}"}
,
  {"command": "ppmlabel", "description": "Add text to a PPM image.", "example": "ppmlabel -x {{pos_x}} -y {{pos_y}} {{[-t|-text]}} {{text}} {{path/to/input_file.ppm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmmake", "description": "Create a PPM image of a specified color and dimensions.", "example": "ppmmake {{color}} {{width}} {{height}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmmix", "description": "Blend together two PPM images.", "example": "ppmmix {{fadefactor}} {{path/to/input_file1.ppm}} {{path/to/input_file2.ppm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmnorm", "description": "This command has been superseded by `pnmnorm`.", "example": "tldr pnmnorm"}
,
  {"command": "ppmntsc", "description": "Make the RGB colors in a PPM image compatible with NTSC or PAL color systems.", "example": "ppmntsc {{path/to/input_file.ppm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmpat", "description": "Produce a PPM image with a pattern.", "example": "ppmpat -{{gingham2|gingham3|madras|tartan|poles|...}} {{width}} {{height}} > {{path/to/file.ppm}}"}
,
  {"command": "ppmquantall", "description": "This command has been superseded by `pnmquantall`.", "example": "tldr pnmquantall"}
,
  {"command": "ppmquant", "description": "This command has been replaced by `pnmquant` and `pnmremap`.", "example": "tldr pnmquant"}
,
  {"command": "ppmrainbow", "description": "Generate a rainbow.", "example": "ppmrainbow {{color1 color2 ...}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmrelief", "description": "Produce a relief of a PPM image.", "example": "ppmrelief {{path/to/input_file.ppm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmshadow", "description": "Add simulated shadows to a PPM image.", "example": "ppmshadow {{path/to/input_file.ppm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmshift", "description": "Shift the lines in a PPM image by a randomized amount.", "example": "ppmshift {{s}} {{path/to/input_file.ppm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmspread", "description": "Displace the pixels in a PPM image by a randomized amount.", "example": "ppmspread {{a}} {{path/to/input_file.ppm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "ppmtoacad", "description": "Convert a PPM image to an AutoCAD database or slide.", "example": "ppmtoacad {{path/to/file.ppm}} > {{path/to/file.acad}}"}
,
  {"command": "ppmtoapplevol", "description": "Convert a PPM image into an Apple volume label image.", "example": "ppmtoapplevol {{path/to/image.ppm}} > {{path/to/output}}"}
,
  {"command": "ppmtoarbtxt", "description": "Convert a PPM image to an arbitrary text format according to a template.", "example": "ppmtoarbtxt {{path/to/template}} {{path/to/image.ppm}} > {{path/to/output_file.txt}}"}
,
  {"command": "ppmtoascii", "description": "Convert a PPM image to an ASCII image using ANSI terminal color codes.", "example": "ppmtoascii {{path/to/input.ppm}} > {{path/to/output.txt}}"}
,
  {"command": "ppmtobmp", "description": "Convert a PPM image to a BMP file.", "example": "ppmtobmp {{path/to/file.ppm}} > {{path/to/file.bmp}}"}
,
  {"command": "ppmtoeyuv", "description": "Convert a PPM image to an Berkeley YUV file.", "example": "ppmtoeyuv {{path/to/input_file.ppm}} > {{path/to/output_file.eyuv}}"}
,
  {"command": "ppmtogif", "description": "This command has been superseded by `pamtogif`.", "example": "tldr pamtogif"}
,
  {"command": "ppmtoicr", "description": "Convert a PPM image to NCSA ICR format.", "example": "ppmtoicr {{path/to/file.ppm}} > {{path/to/file.icr}}"}
,
  {"command": "ppmtoilbm", "description": "Convert a PPM image to an ILBM file.", "example": "ppmtoilbm {{path/to/file.ppm}} > {{path/to/file.ilbm}}"}
,
  {"command": "ppmtojpeg", "description": "This command has been superseded by `pnmtojpeg`.", "example": "tldr pnmtojpeg"}
,
  {"command": "ppmtoleaf", "description": "Convert a PPM image to the Interleaf image format.", "example": "ppmtoleaf {{path/to/file.ppm}} > {{path/to/file.leaf}}"}
,
  {"command": "ppmtolj", "description": "Convert a PPM file to an HP LaserJet PCL 5 Color file.", "example": "ppmtolj {{path/to/input.ppm}} > {{path/to/output.lj}}"}
,
  {"command": "ppmtomap", "description": "This command has been superseded by `pnmcolormap`.", "example": "tldr pnmcolormap"}
,
  {"command": "ppmtomitsu", "description": "Convert a PPM image to a Mitsubishi S340-10 file.", "example": "ppmtomitsu {{path/to/file.ppm}} > {{path/to/file.mitsu}}"}
,
  {"command": "ppmtompeg", "description": "Encode an MPEG-1 stream.", "example": "ppmtompeg {{path/to/parameter_file}}"}
,
  {"command": "ppmtoneo", "description": "Convert a PPM image to an Atari Neochrome file.", "example": "ppmtoneo {{path/to/file.ppm}} > {{path/to/file.neo}}"}
,
  {"command": "ppmtopcx", "description": "Convert a PPM image to a PCX file.", "example": "ppmtopcx {{path/to/file.ppm}} > {{path/to/file.pcx}}"}
,
  {"command": "ppmtopgm", "description": "Convert a PPM image to a PGM image.", "example": "ppmtopgm {{path/to/file.ppm}} > {{path/to/file.pgm}}"}
,
  {"command": "ppmtopi1", "description": "Convert a PPM image to an Atari Degas PI1 image.", "example": "ppmtopi1 {{path/to/image.ppm}} > {{path/to/output_image.pi1}}"}
,
  {"command": "ppmtopict", "description": "Convert a PPM image to a Macintosh PICT file.", "example": "ppmtopict {{path/to/file.ppm}} > {{path/to/file.pict}}"}
,
  {"command": "ppmtopj", "description": "Convert a PPM file to an HP PaintJet file.", "example": "ppmtopj {{path/to/input.ppm}} > {{path/to/output.pj}}"}
,
  {"command": "ppmtopjxl", "description": "Convert a PPM image into an HP PaintJet XL PCL file.", "example": "ppmtopjxl {{path/to/image.ppm}} > {{path/to/output.pjxl}}"}
,
  {"command": "ppmtoppm", "description": "Copy a PPM image.", "example": "ppmtoppm < {{path/to/image.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "ppmtopuzz", "description": "Convert a PPM image to an X11 puzzle file.", "example": "ppmtopuzz {{path/to/file.ppm}} > {{path/to/file.puzz}}"}
,
  {"command": "ppmtorgb3", "description": "Separate the color components of a PPM file into three separate PGM files.", "example": "ppmtorgb3 {{path/to/file.ppm}}"}
,
  {"command": "ppmtosixel", "description": "Convert a PPM image to DEC sixel format.", "example": "ppmtosixel {{path/to/file.ppm}} > {{path/to/file.sixel}}"}
,
  {"command": "ppmtospu", "description": "Convert a PPM file to an Atari Spectrum 512 image.", "example": "ppmtospu {{path/to/input.ppm}} > {{path/to/output.spu}}"}
,
  {"command": "ppmtoterm", "description": "Convert a PPM image to an ANSI ISO 6429 ASCII image.", "example": "ppmtoterm {{path/to/input.ppm}} > {{path/to/output.txt}}"}
,
  {"command": "ppmtotga", "description": "This command has been superseded by `pamtotga`.", "example": "tldr pamtotga"}
,
  {"command": "ppmtouil", "description": "This command has been superseded by `pamtouil`.", "example": "tldr pamtouil"}
,
  {"command": "ppmtowinicon", "description": "This command has been superseded by `pamtowinicon`.", "example": "tldr pamtowinicon"}
,
  {"command": "ppmtoxpm", "description": "Convert a PPM image to an X11 version 3 pixmap.", "example": "ppmtoxpm {{path/to/input_file.ppm}} > {{path/to/output_file.xpm}}"}
,
  {"command": "ppmtoyuv", "description": "Convert a PPM image to an Abekas YUV file.", "example": "ppmtoyuv {{path/to/input_file.ppm}} > {{path/to/output_file.yuv}}"}
,
  {"command": "ppmtoyuvsplit", "description": "Convert a PPM image to three subsampled Abekas YUV files.", "example": "ppmtoyuvsplit {{basename}} {{path/to/input_file.ppm}}"}
,
  {"command": "ppmtv", "description": "Make a PPM Image look like taken from an American TV.", "example": "ppmtv {{dim_factor}} {{path/to/file.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "ppmwheel", "description": "Generate a PPM image of a color wheel.", "example": "ppmwheel {{diameter}} > {{path/to/output.ppm}}"}
,
  {"command": "pppd", "description": "Establish Point-to-Point connection to another computer.", "example": "pppd"}
,
  {"command": "pprof", "description": "Visualize and analyze profiling data.", "example": "pprof -top {{./fibbo}} {{./fibbo-profile.pb.gz}}"}
,
  {"command": "pre-commit", "description": "Create Git hooks that get run before a commit.", "example": "pre-commit install"}
,
  {"command": "prettier", "description": "An opinionated code formatter for JavaScript, JSON, CSS, YAML, and more.", "example": "prettier {{path/to/file}}"}
,
  {"command": "pretty-bytes", "description": "Convert bytes to a human-readable string.", "example": "pretty-bytes {{1337}}"}
,
  {"command": "printenv", "description": "Print values of all or environment variables.", "example": "printenv"}
,
  {"command": "printf", "description": "Format and print text.", "example": "printf \"{{%s\n}}\" \"{{Hello world}}\""}
,
  {"command": "print", "description": "`print` can refer to multiple commands with the same name.", "example": "tldr print.zsh"}
,
  {"command": "print.zsh", "description": "Z Shell (`zsh`) builtin. Prints arguments, similar to `echo`.", "example": "print \"Hello\" \"World\""}
,
  {"command": "pr", "description": "Paginate or columnate files for printing.", "example": "pr {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "procs", "description": "Display information about the active processes.", "example": "procs"}
,
  {"command": "progpilot", "description": "A PHP static analysis tool for detecting security vulnerabilities.", "example": "progpilot"}
,
  {"command": "progress", "description": "Display/Monitor the progress of running coreutils.", "example": "progress"}
,
  {"command": "projucer", "description": "A project manager for JUCE framework applications.", "example": "Projucer --status {{path/to/project_file}}"}
,
  {"command": "promtool", "description": "Tooling for the Prometheus monitoring system.", "example": "promtool check config {{config_file.yml}}"}
,
  {"command": "propelauth", "description": "Set up PropelAuth authentication as quickly and easily as possible.", "example": "propelauth login"}
,
  {"command": "prosodyctl", "description": "The control tool for the Prosody XMPP server.", "example": "sudo prosodyctl status"}
,
  {"command": "protector", "description": "Protect or unprotect branches on GitHub repositories.", "example": "protector {{branches_regex}} -repos {{organization/repository}}"}
,
  {"command": "protoc", "description": "Parse Google Protobuf `.proto` files and generate output in the specified language.", "example": "protoc --python_out={{path/to/output_directory}} {{input_file.proto}}"}
,
  {"command": "prowler-aws", "description": "Assess AWS security best practices, perform audits, compliance checks, and generate reports.", "example": "prowler aws"}
,
  {"command": "prowler-azure", "description": "Assess Azure security best practices, perform audits, compliance checks, and generate reports.", "example": "prowler azure --az-cli-auth"}
,
  {"command": "prowler-gcp", "description": "Assess Google Cloud Platform (GCP) security best practices, audits, and compliance checks.", "example": "prowler gcp"}
,
  {"command": "prowler-github", "description": "Assess GitHub account, repository, and organization security best practices.", "example": "prowler github"}
,
  {"command": "prowler-kubernetes", "description": "Assess Kubernetes cluster security best practices and configurations.", "example": "prowler kubernetes"}
,
  {"command": "prowler-m365", "description": "Assess Microsoft 365 (M365) security configurations and best practices.", "example": "prowler m365 --env-auth"}
,
  {"command": "prowler", "description": "Performs security best practices assessments, audits and compliance checks across AWS, Azure, Google Cloud, and Kubernetes.", "example": "prowler {{provider}}"}
,
  {"command": "proxify", "description": "A versatile and portable proxy for capturing, manipulating, and replaying HTTP/HTTPS traffic on the go.", "example": "proxify"}
,
  {"command": "prqlc", "description": "PRQL compiler.", "example": "prqlc compile"}
,
  {"command": "psalm", "description": "A static analysis tool for finding errors in PHP applications.", "example": "psalm --init"}
,
  {"command": "psgrep", "description": "Search running processes with `grep`.", "example": "psgrep {{process_name}}"}
,
  {"command": "psidtopgm", "description": "Convert PostScript image data to a PGM image.", "example": "psidtopgm {{width}} {{height}} {{bits_per_sample}} {{path/to/file.ps}} > {{path/to/image.pgm}}"}
,
  {"command": "ps", "description": "Information about running processes.", "example": "ps aux"}
,
  {"command": "ps-nvm", "description": "PowerShell-based utility to manage multiple Node.js versions, inspired by `nvm`.", "example": "tldr get-nodeinstalllocation"}
,
  {"command": "psql", "description": "PostgreSQL client.", "example": "psql {{database}}"}
,
  {"command": "pssh", "description": "Parallel SSH program.", "example": "pssh {{[-i|--inline]}} {{[-H|--host]}} \"{{host1}} {{host2}}\" {{hostname --ip-addresses}}"}
,
  {"command": "pstopnm", "description": "Convert a PostScript file to a PNM image.", "example": "pstopnm {{path/to/file.ps}}"}
,
  {"command": "psysh", "description": "A runtime developer console, interactive debugger and REPL for PHP.", "example": "psysh"}
,
  {"command": "ptargrep", "description": "Find regular expression patterns in tar archive files.", "example": "ptargrep \"{{search_pattern}}\" {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "pt", "description": "Platinum Searcher.", "example": "pt {{foo}}"}
,
  {"command": "ptpython3", "description": "This command is an alias of `ptpython`.", "example": "tldr ptpython"}
,
  {"command": "ptpython", "description": "A better Python REPL.", "example": "ptpython"}
,
  {"command": "pueue-add", "description": "Enqueue a task for execution.", "example": "pueue add {{command}}"}
,
  {"command": "pueue-clean", "description": "Remove all finished tasks from the list and clear logs.", "example": "pueue clean"}
,
  {"command": "pueue-completions", "description": "Generate shell completion files for Bash, Elvish, Fish, PowerShell, and Zsh.", "example": "sudo pueue completions bash {{/usr/share/bash-completion/completions/pueue.bash}}"}
,
  {"command": "pueue-edit", "description": "Edit the command or path of a stashed or queued task.", "example": "pueue edit {{task_id}}"}
,
  {"command": "pueue-enqueue", "description": "Enqueue stashed tasks.", "example": "pueue enqueue {{task_id}} {{task_id}}"}
,
  {"command": "pueue-follow", "description": "Follow the output of a currently running task.", "example": "pueue follow {{task_id}}"}
,
  {"command": "pueue-group", "description": "Display, add or remove groups.", "example": "pueue group"}
,
  {"command": "pueue-help", "description": "Display help for subcommands.", "example": "pueue help"}
,
  {"command": "pueue-kill", "description": "Kill running tasks or whole groups.", "example": "pueue kill"}
,
  {"command": "pueue-log", "description": "Display the log output of 1 or more tasks.", "example": "pueue log"}
,
  {"command": "pueue", "description": "A task management tool for sequential and parallel execution of long-running tasks.", "example": "pueue {{[-h|--help]}}"}
,
  {"command": "pueue-parallel", "description": "Set the amount of allowed parallel tasks.", "example": "pueue parallel {{max_number_of_parallel_tasks}}"}
,
  {"command": "pueue-pause", "description": "Pause running tasks or groups.", "example": "pueue pause"}
,
  {"command": "pueue-remove", "description": "Remove tasks from the list. Running or paused tasks need to be killed first.", "example": "pueue remove {{task_id}}"}
,
  {"command": "pueue-reset", "description": "Kill everything and reset.", "example": "pueue reset"}
,
  {"command": "pueue-restart", "description": "Restart tasks.", "example": "pueue restart {{task_id}}"}
,
  {"command": "pueue-send", "description": "Send input to a task.", "example": "pueue send {{task_id}} \"{{input}}\""}
,
  {"command": "pueue-shutdown", "description": "Remotely shut down the daemon.", "example": "pueue shutdown"}
,
  {"command": "pueue-start", "description": "Resume operation of tasks or groups of tasks.", "example": "pueue start"}
,
  {"command": "pueue-stash", "description": "Stash tasks to prevent them starting automatically.", "example": "pueue stash {{task_id}}"}
,
  {"command": "pueue-status", "description": "Display the current status of all tasks.", "example": "pueue status"}
,
  {"command": "pueue-switch", "description": "Switches the queue position of two enqueued or stashed commands.", "example": "pueue switch {{task_id1}} {{task_id2}}"}
,
  {"command": "pulumi-about", "description": "Print information about the Pulumi environment.", "example": "pulumi about"}
,
  {"command": "pulumi-cancel", "description": "Cancel a stack's currently running update, if any.", "example": "pulumi cancel {{stack_name}}"}
,
  {"command": "pulumi-config", "description": "Manage configuration of a Pulumi stack.", "example": "pulumi config {{[-j|--json]}}"}
,
  {"command": "pulumi-destroy", "description": "Destroy all existing resources in a stack.", "example": "pulumi destroy"}
,
  {"command": "pulumi-down", "description": "This command is an alias of `pulumi destroy`.", "example": "tldr pulumi destroy"}
,
  {"command": "pulumi-env", "description": "Manage Pulumi environments.", "example": "pulumi env ls"}
,
  {"command": "pulumi-gen-completion", "description": "Generate completion scripts for the Pulumi CLI.", "example": "pulumi gen-completion {{bash|zsh|fish}}"}
,
  {"command": "pulumi-install", "description": "Install packages and plugins for the current program or policy pack.", "example": "pulumi install"}
,
  {"command": "pulumi-login", "description": "Log in to the Pulumi cloud.", "example": "pulumi login"}
,
  {"command": "pulumi-logout", "description": "Log out of the Pulumi cloud.", "example": "pulumi logout {{url}}"}
,
  {"command": "pulumi", "description": "Define infrastructure on any cloud using familiar programming languages.", "example": "pulumi new"}
,
  {"command": "pulumi-new", "description": "Create a new Pulumi project.", "example": "pulumi new"}
,
  {"command": "pulumi-org", "description": "Manage Pulumi Organization configuration.", "example": "pulumi org"}
,
  {"command": "pulumi-preview", "description": "Show a preview of updates to a stack's resources.", "example": "pulumi preview"}
,
  {"command": "pulumi-refresh", "description": "Refresh the resources in a stack.", "example": "pulumi refresh"}
,
  {"command": "pulumi-stack", "description": "Manage stacks and view stack state.", "example": "pulumi stack init {{stack_name}}"}
,
  {"command": "pulumi-state", "description": "Edit the current stack's state.", "example": "pulumi state delete"}
,
  {"command": "pulumi-update", "description": "This command is an alias of `pulumi up`.", "example": "tldr pulumi up"}
,
  {"command": "pulumi-up", "description": "Create or update the resources in a stack.", "example": "pulumi up"}
,
  {"command": "pulumi-version", "description": "Display Pulumi's version number.", "example": "pulumi version"}
,
  {"command": "pulumi-whoami", "description": "Print information about the currently logged in user.", "example": "pulumi whoami"}
,
  {"command": "pup", "description": "HTML parsing tool.", "example": "cat {{index.html}} | pup --color"}
,
  {"command": "puppet-agent", "description": "Retrieves the client configuration from a Puppet server and applies it to the local host.", "example": "puppet agent --test --server {{puppetserver_fqdn}} --serverport {{port}} --waitforcert {{poll_time}}"}
,
  {"command": "puppet-apply", "description": "Apply Puppet manifests locally.", "example": "puppet apply {{path/to/manifest}}"}
,
  {"command": "puppet", "description": "Help to manage and automate the configuration of servers.", "example": "puppet {{subcommand}}"}
,
  {"command": "pushd", "description": "Place a directory on a stack so it can be accessed later.", "example": "pushd {{path/to/directory}}"}
,
  {"command": "pv", "description": "Monitor the progress of data through a pipe.", "example": "pv {{path/to/file}}"}
,
  {"command": "pwd", "description": "Print the name of current/working directory.", "example": "pwd"}
,
  {"command": "pwgen", "description": "Generate pronounceable passwords.", "example": "pwgen {{[-y|--symbols]}} {{length}}"}
,
  {"command": "pwqgen", "description": "Generate a random passphrase.", "example": "pwqgen"}
,
  {"command": "pwsh", "description": "Shell and scripting language designed especially for system administration.", "example": "pwsh"}
,
  {"command": "pyats", "description": "A vendor agnostic test automation framework by Cisco Systems, used for network and systems testing.", "example": "pyats {{subcommand}}"}
,
  {"command": "pyats-shell", "description": "Start a pre-loaded pyATS interactive Python Shell to save time in prototyping.", "example": "pyats shell --testbed-file {{path/to/testbed.yaml}}"}
,
  {"command": "pyats-version", "description": "View and upgrade the pyATS installation.", "example": "pyats version check"}
,
  {"command": "pycodestyle", "description": "Check Python code against PEP 8 style conventions.", "example": "pycodestyle {{file.py}}"}
,
  {"command": "pydoc", "description": "Display offline Python documentation.", "example": "pydoc {{subject}}"}
,
  {"command": "pydocstyle", "description": "Statically check Python scripts for compliance with Python docstring conventions.", "example": "pydocstyle {{file.py|path/to/directory}}"}
,
  {"command": "pyenv", "description": "Switch between multiple versions of Python easily.", "example": "pyenv commands"}
,
  {"command": "pyenv-virtualenv", "description": "Create virtual environments based on one's installed Python distributions.", "example": "pyenv virtualenv {{3.6.6}} {{virtualenv_name}}"}
,
  {"command": "pyflakes", "description": "Checks Python source code files for errors.", "example": "pyflakes check {{path/to/file.py}}"}
,
  {"command": "pygmentize", "description": "Python-based syntax highlighter.", "example": "pygmentize {{file.py}}"}
,
  {"command": "pyinfra", "description": "Automates infrastructure at a large scale.", "example": "pyinfra {{target_ip_address}} exec -- {{command_name_and_arguments}}"}
,
  {"command": "pylint", "description": "A Python code linter.", "example": "pylint {{path/to/file.py}}"}
,
  {"command": "pypy", "description": "Fast and compliant alternative implementation of the Python language.", "example": "pypy"}
,
  {"command": "py-spy", "description": "A sampling profiler for Python programs.", "example": "py-spy top {{[-p|--pid]}} {{pid}}"}
,
  {"command": "pystun3", "description": "Classic STUN client written in Python.", "example": "pystun3"}
,
  {"command": "pytest", "description": "Run Python tests.", "example": "pytest {{path/to/test_file1.py path/to/test_file2.py ...}}"}
,
  {"command": "python3", "description": "This command is an alias of `python`.", "example": "tldr python"}
,
  {"command": "python", "description": "Python language interpreter.", "example": "python"}
,
  {"command": "python-m-json.tool", "description": "Validate and pretty-print JSON data.", "example": "python -m json.tool {{path/to/file.json}}"}
,
  {"command": "qalc", "description": "Powerful and easy to use calculator.", "example": "qalc {{[-i|--interactive]}}"}
,
  {"command": "qc", "description": "Manage and execute command snippets stored in QOwnNotes notes.", "example": "qc configure"}
,
  {"command": "qcp", "description": "Copy files using the default text editor to define the filenames.", "example": "qcp {{source_file}}"}
,
  {"command": "qdbus", "description": "Inter-Process Communication (IPC) and Remote Procedure Calling (RPC) mechanism originally developed for Linux.", "example": "qdbus"}
,
  {"command": "qemu-img", "description": "Create and manipulate Quick Emulator Virtual HDD images.", "example": "qemu-img create {{path/to/image_file.img}} {{gigabytes}}G"}
,
  {"command": "qemu-system-i386", "description": "Emulate the `i386` architecture.", "example": "qemu-system-i386 -hda {{image_name.img}} -m {{4096}}"}
,
  {"command": "qemu-system-riscv64", "description": "Emulate `riscv64` architecture.", "example": "qemu-system-riscv64 {{[-M|-machine]}} virt -bios none -kernel {{kernel.elf}} -nographic"}
,
  {"command": "qemu-system-x86_64", "description": "Emulate the `x86_64` architecture.", "example": "qemu-system-x86_64 -hda {{image_name.img}} -m {{4096}}"}
,
  {"command": "q", "description": "Execute SQL-like queries on CSV and TSV files.", "example": "q {{[-d|--delimiter]}} ',' \"SELECT * from {{path/to/file}}\""}
,
  {"command": "qmmp", "description": "An audio player with an interface similar to Winamp or XMMS.", "example": "qmmp"}
,
  {"command": "qmv", "description": "Move files and directories using the default text editor to define the filenames.", "example": "qmv {{source_file}}"}
,
  {"command": "qoitopam", "description": "Convert a QOI image (Quite OK Image format) to Netpbm.", "example": "qoitopam {{path/to/image.qoi}} > {{path/to/output.pnm}}"}
,
  {"command": "qownnotes", "description": "Markdown note-taking application.", "example": "QOwnNotes --portable"}
,
  {"command": "qpdf", "description": "Versatile PDF transformation software.", "example": "qpdf --empty --pages {{path/to/input.pdf}} {{1-3,5,6-10}} -- {{path/to/output.pdf}}"}
,
  {"command": "qrencode", "description": "QR Code generator. Supports PNG and EPS.", "example": "qrencode {{[-o|--output]}} {{path/to/output_file.png}} {{string}}"}
,
  {"command": "qr", "description": "Generate QR codes in the terminal with ANSI VT-100 escape codes.", "example": "qr \"{{data}}\""}
,
  {"command": "qrttoppm", "description": "Convert a QRT ray tracer file to a PPM image.", "example": "qrttoppm {{path/to/file.qrt}} > {{path/to/image.ppm}}"}
,
  {"command": "qtcreator", "description": "Cross-platform IDE for Qt applications.", "example": "qtcreator"}
,
  {"command": "quarkus", "description": "Create Quarkus projects, manage extensions and perform essential build and development tasks.", "example": "quarkus create app {{project_name}}"}
,
  {"command": "quarto", "description": "An open-source scientific and technical publishing system built on Pandoc.", "example": "quarto create-project {{path/to/destination_directory}} --type {{book|default|website}}"}
,
  {"command": "quilt", "description": "Manage a series of patches.", "example": "quilt import {{path/to/filename.patch}}"}
,
  {"command": "quota", "description": "Display users' disk space usage and allocated limits.", "example": "quota {{[-s|--human-readable]}}"}
,
  {"command": "qutebrowser", "description": "A keyboard-driven, vim-like browser based on PyQt5.", "example": "qutebrowser --basedir {{path/to/directory}}"}
,
  {"command": "r2e", "description": "Forwards RSS feeds to an email address.", "example": "r2e new {{email_address}}"}
,
  {"command": "r2", "description": "This command is an alias of `radare2`.", "example": "tldr radare2"}
,
  {"command": "rabin2", "description": "Get information about binary files (ELF, PE, Java CLASS, Mach-O) - symbols, sections, linked libraries, etc.", "example": "rabin2 -I {{path/to/binary}}"}
,
  {"command": "racket", "description": "Racket language interpreter.", "example": "racket"}
,
  {"command": "raco", "description": "Racket tools.", "example": "raco pkg install --auto {{package_source}}"}
,
  {"command": "radare2", "description": "A set of reverse engineering tools.", "example": "radare2 -nw {{path/to/binary}}"}
,
  {"command": "rage", "description": "A simple, secure and modern file encryption tool (and Rust library) with small explicit keys, no configuration options, and UNIX-style composability.", "example": "echo \"{{Your secret message}}\" | rage --encrypt --recipient {{user}} --output {{path/to/message.age}}"}
,
  {"command": "rails-console", "description": "Interact with a Rails application.", "example": "rails console"}
,
  {"command": "rails-db", "description": "Various database-related subcommands for Ruby on Rails.", "example": "rails db:setup"}
,
  {"command": "rails-destroy", "description": "Destroy Rails resources.", "example": "rails destroy"}
,
  {"command": "rails-generate", "description": "Generate new Rails templates in an existing project.", "example": "rails generate"}
,
  {"command": "rails", "description": "A server-side MVC framework written in Ruby.", "example": "rails new \"{{project_name}}\""}
,
  {"command": "rails-new", "description": "Create a new Rails application.", "example": "rails new blog"}
,
  {"command": "rails-routes", "description": "List routes in a Rails application.", "example": "rails routes"}
,
  {"command": "rails-server", "description": "Serve the Rails app in the current directory using the Puma web server, which comes bundled with Rails.", "example": "rails server"}
,
  {"command": "railway", "description": "Connect code to a Railway project.", "example": "railway login"}
,
  {"command": "rainbowstream", "description": "Terminal-based Twitter client supporting realtime tweetstream, trends, sending, search, favorites and user management.", "example": "rainbowstream"}
,
  {"command": "rake", "description": "A Make-like program for Ruby.", "example": "rake"}
,
  {"command": "ranger", "description": "Console file manager with VI key bindings.", "example": "ranger"}
,
  {"command": "rapper", "description": "The Raptor RDF parsing utility.", "example": "rapper {{[-i|--input]}} rdfxml {{[-o|--output]}} turtle {{path/to/file}}"}
,
  {"command": "rarcrack", "description": "Password cracker for RAR, Zip and 7z archives.", "example": "rarcrack {{path/to/file.zip}}"}
,
  {"command": "rar", "description": "The RAR archiver. Supports multi-volume archives that can be optionally self-extracting.", "example": "rar a {{path/to/archive_name.rar}} {{path/to/file1 path/to/file2 path/to/file3 ...}}"}
,
  {"command": "rasttopnm", "description": "Convert a Sun rasterfile to a PNM file.", "example": "rasttopnm {{path/to/input.rast}} > {{path/to/output.pnm}}"}
,
  {"command": "rawtopgm", "description": "Convert a raw greyscale image to a PGM image.", "example": "rawtopgm {{width}} {{height}} {{path/to/image.raw}} > {{path/to/output.pgm}}"}
,
  {"command": "rawtoppm", "description": "Convert a raw RGB stream to a PPM image.", "example": "rawtoppm {{width}} {{height}} {{path/to/image.raw}} > {{path/to/output.ppm}}"}
,
  {"command": "rbac-lookup", "description": "Find roles and cluster roles attached to any user, service account or group name in your Kubernetes cluster.", "example": "rbac-lookup"}
,
  {"command": "rbash", "description": "Restricted Bash shell, equivalent to `bash --restricted`.", "example": "rbash"}
,
  {"command": "rbenv", "description": "Easily install Ruby versions and manage application environments.", "example": "rbenv install {{version}}"}
,
  {"command": "rbt", "description": "RBTools, a set of tools for working with Review Board and RBCommons.", "example": "rbt post {{change_number}}"}
,
  {"command": "rcat", "description": "This command is an alias of `rc`.", "example": "tldr rc"}
,
  {"command": "rclone", "description": "Copy, synchronize or move files and directories to and from many cloud services.", "example": "rclone config"}
,
  {"command": "rc", "description": "A modern simplistic port listener & reverse shell.", "example": "rc -lp {{port}}"}
,
  {"command": "rdfind", "description": "Find files with duplicate content and get rid of them.", "example": "rdfind -dryrun true {{path/to/directory}}"}
,
  {"command": "react-native", "description": "A framework for building native apps with React.", "example": "react-native init {{project_name}}"}
,
  {"command": "react-native-start", "description": "Start the React Native server.", "example": "react-native start"}
,
  {"command": "readarray", "description": "Read lines from `stdin` into an array.", "example": "readarray {{array_name}}"}
,
  {"command": "readlink", "description": "Follow symlinks and get symlink information.", "example": "readlink {{path/to/file}}"}
,
  {"command": "read", "description": "Shell builtin for retrieving data from `stdin`.", "example": "read {{variable}}"}
,
  {"command": "readonly", "description": "Set read-only shell variables.", "example": "readonly {{variable_name}}={{value}}"}
,
  {"command": "realpath", "description": "Display the resolved absolute path for a file or directory.", "example": "realpath {{path/to/file_or_directory}}"}
,
  {"command": "recon-ng", "description": "Automated reconnaissance and information gathering tool.", "example": "recon-ng"}
,
  {"command": "recsel", "description": "Print records from a recfile: a human-editable, plain text database.", "example": "recsel {{[-p|--print]}} name,version {{data.rec}}"}
,
  {"command": "rector", "description": "An automated tool for updating and refactoring PHP 5.3+ code.", "example": "rector process {{path/to/directory}}"}
,
  {"command": "redis-benchmark", "description": "Benchmark a Redis server.", "example": "redis-benchmark"}
,
  {"command": "redis-cli", "description": "Opens a connection to a Redis server.", "example": "redis-cli"}
,
  {"command": "redis-server", "description": "Persistent key-value database.", "example": "redis-server"}
,
  {"command": "redshift", "description": "Adjust the color temperature of your screen according to your surroundings.", "example": "redshift -t {{5700}}:{{3600}}"}
,
  {"command": "reflac", "description": "Recompress FLAC files in-place while preserving metadata.", "example": "reflac {{path/to/directory}}"}
,
  {"command": "reflex", "description": "Watch a directory and rerun a command when certain files change.", "example": "reflex make"}
,
  {"command": "rekor-cli", "description": "Immutable tamper resistant ledger of metadata generated within a software projects supply chain.", "example": "rekor-cli upload --artifact {{path/to/file.ext}} --signature {{path/to/file.ext.sig}} --pki-format={{x509}} --public-key={{path/to/key.pub}}"}
,
  {"command": "remove-nodeversion", "description": "Uninstall Node.js runtime versions for `ps-nvm`.", "example": "Remove-NodeVersion {{node_version}}"}
,
  {"command": "renice", "description": "Alter the scheduling priority/niceness of running processes.", "example": "renice -n {{3}} -p {{pid}}"}
,
  {"command": "repren", "description": "Multi-pattern string replacement and file renaming tool.", "example": "repren --dry-run --rename --literal --from '{{find_string}}' --to '{{replacement_string}}' {{*.png}}"}
,
  {"command": "resolvconf", "description": "Manage nameserver information.", "example": "resolvconf -a {{IFACE.PROG}}"}
,
  {"command": "restic", "description": "A fast, secure and secure backup program.", "example": "restic init --repo {{path/to/repository}}"}
,
  {"command": "resume", "description": "Easily setup a new resume.", "example": "resume init"}
,
  {"command": "retry", "description": "Repeat command until it succeeds or a criterion is met.", "example": "retry {{command}}"}
,
  {"command": "return", "description": "Exit a function or a script if run with `source`.", "example": "{{func_name}}() { {{echo \"This is reached\"}}; return; {{echo \"This is not\"}}; }"}
,
  {"command": "reuse", "description": "Tool for compliance with the REUSE recommendations.", "example": "reuse lint"}
,
  {"command": "rfetch", "description": "A configurable fetch program to output system information.", "example": "rfetch"}
,
  {"command": "rga", "description": "Ripgrep wrapper with rich file type searching capabilities.", "example": "rga {{regular_expression}}"}
,
  {"command": "rgb3toppm", "description": "Combine three PGM images into one PPM image.", "example": "rgb3toppm {{path/to/red_file.ppm}} {{path/to/green_file.ppm}} {{path/to/blue_file.ppm}} > {{path/to/output.ppm}}"}
,
  {"command": "rg", "description": "Ripgrep, a recursive line-oriented search tool.", "example": "rg {{pattern}}"}
,
  {"command": "rgpt", "description": "An automated code review tool that uses GPT you can use straight from your terminal.", "example": "rgpt --i \"$(git diff {{path/to/file}})\""}
,
  {"command": "rgrep", "description": "Recursively find patterns in files using regular expressions.", "example": "rgrep \"{{search_pattern}}\""}
,
  {"command": "rhash", "description": "Calculate or check common message digests.", "example": "rhash {{path/to/file}}"}
,
  {"command": "rich", "description": "A toolbox for fancy output in the terminal.", "example": "rich {{path/to/file.py}}"}
,
  {"command": "ripgrep", "description": "`ripgrep` is the common name for the command `rg`.", "example": "tldr rg"}
,
  {"command": "rip", "description": "Remove files or directories by sending them to the graveyard, allowing for them to be recovered.", "example": "rip {{path/to/file_or_directory}} {{path/to/another/file_or_directory}}"}
,
  {"command": "rkdeveloptool", "description": "Flash, dump, and manage boot firmware for Rockchip-based computer devices.", "example": "rkdeveloptool ld"}
,
  {"command": "rlatopam", "description": "Convert Alias/Wavefront RLA and RPF image files to Netpbm format.", "example": "rlatopam {{path/to/file}} > {{path/to/output.pam}}"}
,
  {"command": "rletopnm", "description": "Convert a Utah Raster Tools RLE image file to a PNM file.", "example": "rletopnm {{path/to/input.rle}} > {{path/to/output.pnm}}"}
,
  {"command": "rlwrap", "description": "Add line editing, persistent history and prompt completion to a REPL command.", "example": "rlwrap {{command}}"}
,
  {"command": "r", "description": "R language interpreter.", "example": "R"}
,
  {"command": "rmdir", "description": "Remove directories without files.", "example": "rmdir {{path/to/directory1 path/to/directory2 ...}}"}
,
  {"command": "rmlint", "description": "Find space waste and other broken things on your filesystem.", "example": "rmlint {{path/to/directory1 path/to/directory2 ...}}"}
,
  {"command": "rm", "description": "Remove files or directories.", "example": "rm {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "rnano", "description": "This command is an alias of `nano --restricted`.", "example": "tldr nano"}
,
  {"command": "roave-backward-compatibility-check", "description": "Verify backward compatibility breaks between two versions of a PHP library.", "example": "roave-backward-compatibility-check"}
,
  {"command": "robo", "description": "PHP task runner.", "example": "robo list"}
,
  {"command": "roll", "description": "Rolls a user-defined dice sequence.", "example": "roll {{3d}}"}
,
  {"command": "ropgadget", "description": "Find ROP gadgets in binary files.", "example": "ROPgadget --binary {{path/to/binary}}"}
,
  {"command": "ropper", "description": "Find ROP gadgets in binary files.", "example": "ropper --file {{path/to/binary}}"}
,
  {"command": "route", "description": "Show and manipulate the route table.", "example": "route -n"}
,
  {"command": "rpcdump.py", "description": "Dump remote RPC endpoints information via the Endpoint Mapper.", "example": "rpcdump.py {{domain}}/{{username}}:{{password}}@{{target}}"}
,
  {"command": "rpcmap.py", "description": "Lookup listening MSRPC interfaces using a string binding (e.g., `ncacn_ip_tcp:host[port]`).", "example": "rpcmap.py {{stringbinding}}"}
,
  {"command": "rpi-imager", "description": "Flash images onto storage devices.", "example": "rpi-imager --cli {{path/to/image.zip}} {{/dev/sdX}}"}
,
  {"command": "rr", "description": "Debugging tool designed to record and replay program execution.", "example": "rr record {{path/to/binary --arg1 --arg2}}"}
,
  {"command": "rsactftool.py", "description": "RSA attack tool for CTF challenges - recover private keys from weak public keys and/or decrypt data.", "example": "RsaCtfTool.py --publickey {{path/to/key.pub}} --private"}
,
  {"command": "rscript", "description": "Run a script with the R programming language.", "example": "Rscript {{path/to/file.R}}"}
,
  {"command": "rspec", "description": "Behavior-driven development testing framework written in Ruby to test Ruby code.", "example": "rspec --init"}
,
  {"command": "rss2email", "description": "Deliver news from RSS feeds to an email program.", "example": "r2e list"}
,
  {"command": "rsstail", "description": "`tail` for RSS feeds.", "example": "rsstail -u {{url}}"}
,
  {"command": "rsync", "description": "Transfer files either to or from a remote host (but not between two remote hosts), by default using SSH.", "example": "rsync {{path/to/source}} {{path/to/destination}}"}
,
  {"command": "rtl_sdr", "description": "Raw data recorder for RTL-SDR receivers.", "example": "rtl_sdr -f {{100000000}} {{path/to/file}}"}
,
  {"command": "rtmpdump", "description": "Dump media content streamed over the RTMP protocol.", "example": "rtmpdump {{[-r|--rtmp]}} {{rtmp://example.com/path/to/video}} {{[-o|--flv]}} {{file.ext}}"}
,
  {"command": "rtv", "description": "Reddit Terminal Viewer.", "example": "/front"}
,
  {"command": "rubocop", "description": "Lint Ruby files.", "example": "rubocop"}
,
  {"command": "ruby", "description": "Ruby programming language interpreter.", "example": "ruby {{script.rb}}"}
,
  {"command": "ruff-check", "description": "An extremely fast Python linter. `check` is the default command - it can be omitted everywhere.", "example": "ruff check {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"}
,
  {"command": "ruff-format", "description": "An extremely fast Python code formatter.", "example": "ruff format {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"}
,
  {"command": "ruff", "description": "An extremely fast Python linter and code formatter, written in Rust.", "example": "tldr ruff check"}
,
  {"command": "runit", "description": "3-stage init system.", "example": "runit"}
,
  {"command": "runsvchdir", "description": "Change the directory `runsvdir` uses by default.", "example": "sudo runsvchdir {{path/to/directory}}"}
,
  {"command": "runsvdir", "description": "Run an entire directory of services.", "example": "runsvdir {{path/to/services}}"}
,
  {"command": "runsv", "description": "Start and manage a runit service.", "example": "runsv {{path/to/service}}"}
,
  {"command": "rustc", "description": "The Rust compiler.", "example": "rustc {{path/to/main.rs}}"}
,
  {"command": "rustdoc", "description": "Generate documentation for a Rust crate.", "example": "rustdoc {{src/lib.rs}}"}
,
  {"command": "rustfmt", "description": "Format Rust source code.", "example": "rustfmt {{path/to/source.rs}}"}
,
  {"command": "rustic", "description": "Create fast, encrypted, deduplicated backups powered by Rust.", "example": "rustic init --repository {{/srv/rustic-repo}}"}
,
  {"command": "rustscan", "description": "Modern Port Scanner written in Rust.", "example": "rustscan {{[-a|--addresses]}} {{ip_or_hostname}}"}
,
  {"command": "rustup-check", "description": "Check for updates to Rust toolchains and `rustup`.", "example": "rustup check"}
,
  {"command": "rustup-completions", "description": "Generate shell completions for `rustup` and `cargo`.", "example": "rustup completions {{bash|elvish|fish|powershell|zsh}} {{rustup|cargo}}"}
,
  {"command": "rustup-component", "description": "Modify a toolchain's installed components.", "example": "rustup component add --toolchain {{toolchain}} {{component}}"}
,
  {"command": "rustup-default", "description": "Set the default Rust toolchain.", "example": "rustup default {{toolchain}}"}
,
  {"command": "rustup-doc", "description": "Open the offline Rust documentation for the current toolchain.", "example": "rustup doc"}
,
  {"command": "rustup-help", "description": "Display help on `rustup` and its subcommands.", "example": "rustup help"}
,
  {"command": "rustup-init.sh", "description": "Script to install `rustup` and the Rust toolchain.", "example": "curl https://sh.rustup.rs -sSf | sh -s"}
,
  {"command": "rustup-install", "description": "This command is an alias of `rustup toolchain install`.", "example": "tldr rustup toolchain"}
,
  {"command": "rustup-man", "description": "View the man page for a command managed by `rustup`.", "example": "rustup man {{command}}"}
,
  {"command": "rustup", "description": "Install, manage, and update Rust toolchains.", "example": "rustup install nightly"}
,
  {"command": "rustup-override", "description": "Modify directory toolchain overrides.", "example": "rustup override list"}
,
  {"command": "rustup-run", "description": "Run a command with an environment configured for a Rust toolchain.", "example": "rustup run {{toolchain}} {{command}}"}
,
  {"command": "rustup-self", "description": "Modify the `rustup` installation.", "example": "rustup self update"}
,
  {"command": "rustup-set", "description": "Alter `rustup` settings.", "example": "rustup set default-host {{host_triple}}"}
,
  {"command": "rustup-show", "description": "Show installed toolchains, targets and the version of `rustc`.", "example": "rustup show"}
,
  {"command": "rustup-target", "description": "Modify a toolchain's supported targets.", "example": "rustup target add --toolchain {{toolchain}} {{target}}"}
,
  {"command": "rustup-toolchain", "description": "Manage Rust toolchains.", "example": "rustup toolchain install {{toolchain}}"}
,
  {"command": "rustup-uninstall", "description": "This command is an alias of `rustup toolchain uninstall`.", "example": "tldr rustup toolchain"}
,
  {"command": "rustup-update", "description": "Update Rust toolchains and `rustup` itself (if not installed using a package manager).", "example": "rustup update"}
,
  {"command": "rustup-which", "description": "Display which binary will be run for a command managed by `rustup`.", "example": "rustup which {{command}}"}
,
  {"command": "rvm", "description": "Easily installing, managing, and working with multiple ruby environments.", "example": "rvm install {{version1 version2 ...}}"}
,
  {"command": "s3cmd", "description": "Command line tool and client for uploading, retrieving and managing data in S3 compatible object storage.", "example": "s3cmd --configure"}
,
  {"command": "safe", "description": "Interact with HashiCorp Vault.", "example": "safe target {{vault_addr}} {{target_name}}"}
,
  {"command": "sails", "description": "A realtime enterprise level MVC framework built on top of Node.js.", "example": "sails lift"}
,
  {"command": "salt-call", "description": "Invoke salt locally on a salt minion.", "example": "salt-call state.highstate"}
,
  {"command": "salt-key", "description": "Manage salt minion keys on the salt master.", "example": "salt-key {{[-L|--list-all]}}"}
,
  {"command": "salt", "description": "Execute commands and assert state on remote salt minions.", "example": "salt '*' test.ping"}
,
  {"command": "salt-run", "description": "Frontend for executing salt-runners on minions.", "example": "salt-run manage.status"}
,
  {"command": "sam2p", "description": "Raster (bitmap) image converter with smart PDF and PostScript (EPS) output.", "example": "sam2p *.pdf {{path/to/output.pdf}}"}
,
  {"command": "samtools", "description": "Tools for handling high-throughput sequencing (genomics) data.", "example": "samtools view -S {{[-b|--bam]}} {{input.sam}} > {{output.bam}}"}
,
  {"command": "sass", "description": "Convert SCSS or Sass files to CSS.", "example": "sass {{inputfile.scss|inputfile.sass}}"}
,
  {"command": "satis", "description": "The utility for the Satis static Composer repository.", "example": "satis init {{satis.json}}"}
,
  {"command": "sbcl", "description": "High performance Common Lisp compiler.", "example": "sbcl"}
,
  {"command": "sbigtopgm", "description": "Convert an SBIG CCDOPS file to PGM.", "example": "sbigtopgm {{path/to/input_file.sbig}} > {{path/to/output.pgm}}"}
,
  {"command": "sbt", "description": "Build tool for Scala and Java projects.", "example": "sbt"}
,
  {"command": "sbuild", "description": "Build a Debian binary package in a clean `chroot` environment.", "example": "sbuild"}
,
  {"command": "scala-cli", "description": "Interact with the Scala programming language.", "example": "scala-cli --scala {{3.1.0}} --jvm {{temurin:17}}"}
,
  {"command": "scalafmt", "description": "Code formatter for Scala.", "example": "scalafmt"}
,
  {"command": "scala", "description": "Scala application launcher and interactive interpreter.", "example": "scala"}
,
  {"command": "scamper", "description": "Actively probes the Internet in order to analyze topology and performance.", "example": "scamper -i {{192.0.2.1}}"}
,
  {"command": "sc_analysis_dump", "description": "Dump of traceroute data in an easily parsed format.", "example": "sc_analysis_dump {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "scan-build", "description": "Run a static analyzer over a codebase as part of performing a regular build.", "example": "scan-build {{make}}"}
,
  {"command": "sccmap", "description": "Extract strongly connected components of directed graphs.", "example": "sccmap -S {{path/to/input1.gv path/to/input2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "scc", "description": "Count lines of code. Written in Go.", "example": "scc"}
,
  {"command": "scd", "description": "File manager focused on shell integration.", "example": "scd -ar {{path/to/directory}}"}
,
  {"command": "scheme", "description": "MIT Scheme language interpreter and REPL (interactive shell).", "example": "scheme"}
,
  {"command": "sc-im", "description": "A curses based, vim-like spreadsheet calculator.", "example": "scim {{path/to/file.csv}}"}
,
  {"command": "scp", "description": "Secure copy.", "example": "scp {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}"}
,
  {"command": "scrapy", "description": "Web-crawling framework.", "example": "scrapy startproject {{project_name}}"}
,
  {"command": "scrcpy", "description": "Display and control your Android device on a desktop.", "example": "scrcpy"}
,
  {"command": "screenfetch", "description": "Display system information.", "example": "screenfetch"}
,
  {"command": "screen", "description": "Hold a session open on a remote server. Manage multiple windows with a single SSH connection.", "example": "screen"}
,
  {"command": "sc_tracediff", "description": "Display traceroute paths where the path has changed.", "example": "sc_tracediff {{path/to/file1.warts}} {{path/to/file2.warts}}"}
,
  {"command": "sc_ttlexp", "description": "Dump source addresses from ICMP TTL expired messages in `warts` files.", "example": "sc_ttlexp {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sc_warts2csv", "description": "Dump traceroutes collected by `scamper` in CSV format.", "example": "sc_warts2csv {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sc_warts2json", "description": "JSON dump of information contained in a `warts` file.", "example": "sc_warts2json {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sc_warts2pcap", "description": "Write packets included in `warts` object to a PCAP file.", "example": "sc_warts2pcap -o {{path/to/output.pcap}} {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sc_warts2text", "description": "Simple dump of information contained in a `warts` file.", "example": "sc_warts2text {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sc_wartscat", "description": "Concatenate `warts` files.", "example": "sc_wartscat -o {{path/to/output.warts}} {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sc_wartsdump", "description": "Verbose dump of information contained in a `warts` file.", "example": "sc_wartsdump {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sc_wartsfilter", "description": "Select specific records from a `warts` file.", "example": "sc_wartsfilter -i {{path/to/input.warts}} -o {{path/to/output.warts}} -a {{192.0.2.5}} -a {{192.0.2.6}}"}
,
  {"command": "sc_wartsfix", "description": "Truncate damaged `warts` files.", "example": "sc_wartsfix {{path/to/file1.warts path/to/file2.warts ...}}"}
,
  {"command": "sdcv", "description": "StarDict, a dictionary client.", "example": "sdcv"}
,
  {"command": "sdiff", "description": "Compare the differences between and optionally merge 2 files.", "example": "sdiff {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "sdkmanager", "description": "Install packages for the Android SDK.", "example": "sdkmanager --list"}
,
  {"command": "sdk", "description": "Manage parallel versions of multiple Software Development Kits.", "example": "sdk install {{sdk_name}} {{sdk_version}}"}
,
  {"command": "sd", "description": "Intuitive find and replace.", "example": "{{echo 'lorem ipsum 23   '}} | sd +$' ''"}
,
  {"command": "searchsploit", "description": "Search Exploit Database for exploits, shellcodes and/or papers.", "example": "searchsploit {{search_terms}}"}
,
  {"command": "secrethub", "description": "Keep secrets out of configuration files.", "example": "secrethub read {{path/to/secret}}"}
,
  {"command": "secretsdump.py", "description": "Dump NTLM hashes, plaintext passwords, and domain credentials from remote Windows systems.", "example": "secretsdump.py {{domain}}/{{username}}:{{password}}@{{target}}"}
,
  {"command": "security-checker", "description": "Check if a PHP application uses dependencies with known security vulnerabilities.", "example": "security-checker security:check"}
,
  {"command": "sed", "description": "Edit text in a scriptable manner.", "example": "{{command}} | sed 's/apple/mango/g'"}
,
  {"command": "select", "description": "Bash builtin construct for creating menus.", "example": "select {{word}} in {{apple orange pear banana}}; do echo ${{word}}; done"}
,
  {"command": "semver", "description": "Semantic version string parser.", "example": "semver {{1.2}}"}
,
  {"command": "sendmail", "description": "Send email.", "example": "sendmail {{username}} < {{message.txt}}"}
,
  {"command": "seq", "description": "Output a sequence of numbers to `stdout`.", "example": "seq 10"}
,
  {"command": "sequelize", "description": "Promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server.", "example": "sequelize model:generate --name {{table_name}} --attributes {{field1:integer,field2:string,field3:boolean}}"}
,
  {"command": "serialver", "description": "Returns the serialVersionUID of classes.", "example": "serialver {{classnames}}"}
,
  {"command": "serve", "description": "Static file serving and directory listing.", "example": "serve"}
,
  {"command": "serverless", "description": "Toolkit for deploying and operating serverless architectures on AWS, Google Cloud, Azure and IBM OpenWhisk.", "example": "serverless create"}
,
  {"command": "set", "description": "Toggle shell options or set the values of positional parameters.", "example": "set"}
,
  {"command": "set-nodeinstalllocation", "description": "Set the default Node.js installation directory for `ps-nvm`.", "example": "Set-NodeInstallLocation {{path/to/directory}}"}
,
  {"command": "set-nodeversion", "description": "Set the default Node.js version for `ps-nvm`.", "example": "Set-NodeVersion {{node_version}}"}
,
  {"command": "sfdk-apply", "description": "Applies patches from RPM SPEC file.", "example": "sfdk apply"}
,
  {"command": "sfdk-build-init", "description": "Initializes build directory.", "example": "sfdk build-init"}
,
  {"command": "sfdk-build-requires", "description": "Updates build time dependencies.", "example": "sfdk build-requires --refresh {{subcommand}}"}
,
  {"command": "sfdk-build-shell", "description": "Executes custom steps in build engine.", "example": "sfdk build-shell"}
,
  {"command": "sfdk-check", "description": "Performs quality checks.", "example": "sfdk check --list-suites"}
,
  {"command": "sfdk-cmake", "description": "Executes cmake build step.", "example": "sfdk cmake"}
,
  {"command": "sfdk-compiledb", "description": "Generate compilation database.", "example": "sfdk compiledb"}
,
  {"command": "sfdk-config", "description": "Configures sfdk.", "example": "sfdk config --show"}
,
  {"command": "sfdk-deploy", "description": "Deploys build results to a device.", "example": "sfdk deploy --{{method}}"}
,
  {"command": "sfdk-device", "description": "Maintains and controls registered devices.", "example": "sfdk device list"}
,
  {"command": "sfdk-emulator-device-model-list", "description": "This command has been moved to `sfdk emulator device-model-show`.", "example": "tldr sfdk emulator device-model-show"}
,
  {"command": "sfdk-emulator-device-model-show", "description": "Show emulated device model's properties.", "example": "sfdk emulator device-model-show {{model}}"}
,
  {"command": "sfdk-emulator-exec", "description": "Execute a command on an emulator.", "example": "sfdk emulator exec {{emulator}} {{command}}"}
,
  {"command": "sfdk-emulator-install", "description": "Installs emulators.", "example": "sfdk emulator install {{name}}"}
,
  {"command": "sfdk-emulator-list", "description": "This command has been moved to `sfdk emulator install`.", "example": "tldr sfdk emulator install"}
,
  {"command": "sfdk-emulator", "description": "Maintains and controls emulators.", "example": "sfdk emulator list"}
,
  {"command": "sfdk-emulator-remove", "description": "This command has been moved to `sfdk emulator install`.", "example": "tldr sfdk emulator install"}
,
  {"command": "sfdk-emulator-set", "description": "Sets emulator properties.", "example": "sfdk emulator set {{name}} {{property}}={{value}}"}
,
  {"command": "sfdk-emulator-show", "description": "This command has been moved to `sfdk emulator set`.", "example": "tldr sfdk emulator set"}
,
  {"command": "sfdk-emulator-start", "description": "Starts an emulator.", "example": "sfdk emulator start {{name}}"}
,
  {"command": "sfdk-emulator-status", "description": "This command has been moved to `sfdk emulator start`.", "example": "tldr sfdk emulator start"}
,
  {"command": "sfdk-emulator-stop", "description": "This command has been moved to `sfdk emulator start`.", "example": "tldr sfdk emulator start"}
,
  {"command": "sfdk-engine", "description": "Maintains and controls the build engine.", "example": "sfdk engine start"}
,
  {"command": "sfdk-init", "description": "Initializes a new project.", "example": "sfdk init {{[-t|--type]}} {{type}}"}
,
  {"command": "sfdk-maintain", "description": "Launches the interactive SDK Maintenance tool.", "example": "sfdk maintain"}
,
  {"command": "sfdk-make-install", "description": "Executes make-install build step.", "example": "sfdk make-install"}
,
  {"command": "sfdk-make", "description": "Executes make build step.", "example": "sfdk make"}
,
  {"command": "sfdk", "description": "The command line frontend of the Sailfish SDK.", "example": "sfdk {{subcommand}}"}
,
  {"command": "sfdk-package", "description": "Executes package creation build step.", "example": "sfdk package"}
,
  {"command": "sfdk-prepare", "description": "Executes preparation build step.", "example": "sfdk prepare"}
,
  {"command": "sfdk-qmake", "description": "Executes qmake build step.", "example": "sfdk qmake"}
,
  {"command": "sfdk-qmltypes", "description": "Generate qmltypes files.", "example": "sfdk qmltypes"}
,
  {"command": "sfdk-scrape", "description": "Converts source code modifications to patches.", "example": "sfdk scrape"}
,
  {"command": "sfdk-undeploy", "description": "Undeploys build results from a device.", "example": "sfdk undeploy --{{method}}"}
,
  {"command": "sfdp", "description": "Render an image of a `scaled force-directed` network graph from a `graphviz` file.", "example": "sfdp -T {{png}} -O {{path/to/input.gv}}"}
,
  {"command": "sf", "description": "A powerful command-line interface that simplifies development and build automation when working with your Salesforce org.", "example": "sf force:auth:web:login --setalias {{organization}} --instanceurl {{organization_url}}"}
,
  {"command": "sftp", "description": "Secure File Transfer Program.", "example": "sftp {{remote_user}}@{{remote_host}}"}
,
  {"command": "sgitopnm", "description": "Convert an SGI file to a PNM file.", "example": "sgitopnm {{path/to/input.sgi}} > {{path/to/output.pnm}}"}
,
  {"command": "sg", "description": "Ast-grep is a tool for code structural search, lint, and rewriting.", "example": "sg scan --interactive"}
,
  {"command": "sgpt", "description": "Productivity tool powered by OpenAI's GPT models.", "example": "sgpt \"{{mass of the sun}}\""}
,
  {"command": "sg_raw", "description": "Send arbitrary SCSI command to a connected device.", "example": "sg_raw /dev/sr0 EA 00 00 00 00 01"}
,
  {"command": "sha1sum", "description": "Calculate SHA1 cryptographic checksums.", "example": "sha1sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "sha224sum", "description": "Calculate SHA224 cryptographic checksums.", "example": "sha224sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "sha256sum", "description": "Calculate SHA256 cryptographic checksums.", "example": "sha256sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "sha384sum", "description": "Calculate SHA384 cryptographic checksums.", "example": "sha384sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "sha512sum", "description": "Calculate SHA512 cryptographic checksums.", "example": "sha512sum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "shards", "description": "Dependency management tool for the Crystal language.", "example": "shards init"}
,
  {"command": "shar", "description": "Create a shell archive.", "example": "shar {{path/to/file1 path/to/file2 ...}} > {{path/to/archive.sh}}"}
,
  {"command": "shasum", "description": "Calculate SHA cryptographic checksums.", "example": "shasum {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "shc", "description": "Generic shell script compiler.", "example": "shc -f {{script}}"}
,
  {"command": "shellcheck", "description": "Statically check shell scripts for errors, usage of deprecated/insecure features, and bad practices.", "example": "shellcheck {{path/to/script.sh}}"}
,
  {"command": "shfmt", "description": "Shell parser, formatter and interpreter.", "example": "shfmt {{path/to/file}}"}
,
  {"command": "shift", "description": "Move positional parameters.", "example": "shift"}
,
  {"command": "shiori", "description": "Simple bookmark manager built with Go.", "example": "shiori import {{path/to/bookmarks.html}}"}
,
  {"command": "sh", "description": "Bourne shell, the standard command language interpreter.", "example": "sh"}
,
  {"command": "shopt", "description": "Manage Bash shell options: variables (stored in `$BASHOPTS`) that control behavior specific to the Bash shell.", "example": "shopt"}
,
  {"command": "shotcut", "description": "A program for video editing.", "example": "shotcut"}
,
  {"command": "showfigfonts", "description": "Display available figlet fonts.", "example": "showfigfonts"}
,
  {"command": "shred", "description": "Overwrite files to securely delete data.", "example": "shred {{path/to/file}}"}
,
  {"command": "shuf", "description": "Generate random permutations.", "example": "shuf {{path/to/file}}"}
,
  {"command": "siege", "description": "HTTP loadtesting and benchmarking tool.", "example": "siege {{https://example.com}}"}
,
  {"command": "silicon", "description": "Create an image of source code.", "example": "silicon {{path/to/source_file}} --output {{path/to/output_image}}"}
,
  {"command": "simplehttpserver", "description": "A simple HTTP/S server that supports file upload, basic authentication, and YAML rules for custom responses.", "example": "simplehttpserver -verbose"}
,
  {"command": "sindresorhus", "description": "Sindre Sorhus's personal CLI.", "example": "sindresorhus"}
,
  {"command": "singularity", "description": "Manage Singularity containers and images.", "example": "singularity pull --name {{image.sif}} {{library://godlovedc/funny/lolcow:latest}}"}
,
  {"command": "sirtopnm", "description": "Convert a Solitaire Image Recorder file to a PNM file.", "example": "sirtopnm {{path/to/input.sir}} > {{path/to/output.pnm}}"}
,
  {"command": "skaffold", "description": "Facilitate continuous development for Kubernetes applications.", "example": "skaffold build {{[-f|--filename]}} {{skaffold.yaml}}"}
,
  {"command": "skate", "description": "Simple and powerful key-value store.", "example": "skate set \"{{key}}\" \"{{value}}\""}
,
  {"command": "skicka", "description": "Manage your Google Drive.", "example": "skicka upload {{path/to/local}} {{path/to/remote}}"}
,
  {"command": "sk", "description": "Fuzzy finder written in Rust.", "example": "find {{path/to/directory}} -type f | sk"}
,
  {"command": "skopeo", "description": "Container image management toolbox.", "example": "skopeo inspect docker://{{registry_hostname}}/{{image:tag}}"}
,
  {"command": "slackcat", "description": "Utility for passing files and command output to Slack.", "example": "slackcat {{[-c|--channel]}} {{channel_name}} {{path/to/file}}"}
,
  {"command": "sldtoppm", "description": "Convert an AutoCAD slide file to a PPM image.", "example": "sldtoppm {{path/to/input.sld}} > {{path/to/output.ppm}}"}
,
  {"command": "sleep", "description": "Delay for a specified amount of time.", "example": "sleep {{seconds}}"}
,
  {"command": "slimrb", "description": "Convert Slim files to HTML.", "example": "slimrb {{input.slim}} {{output.html}}"}
,
  {"command": "sl", "description": "Steam locomotive running through your terminal.", "example": "sl"}
,
  {"command": "smalltalkci", "description": "Framework for testing Smalltalk projects with GitHub Actions, Travis CI, AppVeyor, GitLab CI, and others.", "example": "smalltalkci {{path/to/.smalltalk.ston}}"}
,
  {"command": "smartctl", "description": "Monitor disk health including SMART data.", "example": "sudo smartctl {{[-H|--health]}} {{/dev/sdX}}"}
,
  {"command": "smbclient.py", "description": "A Python-based SMB client for interacting with SMB servers.", "example": "smbclient.py {{domain}}/{{username}}:{{password}}@{{target}}"}
,
  {"command": "smbmap", "description": "Enumerate samba share drives across an entire domain.", "example": "smbmap --host-file {{path/to/file}}"}
,
  {"command": "smbserver.py", "description": "A Python-based SMB server for hosting shares (requires root for port 445).", "example": "smbserver.py {{sharename}} {{path/to/share}}"}
,
  {"command": "s", "description": "Web search from the terminal.", "example": "s {{query}}"}
,
  {"command": "snakefmt", "description": "Format Snakemake files.", "example": "snakefmt {{path/to/snakefile}}"}
,
  {"command": "sngrep", "description": "Display SIP calls message flows from terminal.", "example": "sngrep -I {{path/to/file.pcap}}"}
,
  {"command": "sniffer.py", "description": "Capture and display network packets for specified protocols using raw sockets.", "example": "sniffer.py"}
,
  {"command": "sniff.py", "description": "Capture and display network packets using the `pcapy` library.", "example": "sudo sniff.py"}
,
  {"command": "sn", "description": "Mono StrongName utility for signing and verifying IL assemblies.", "example": "sn -k {{path/to/key.snk}}"}
,
  {"command": "snmpbulkget", "description": "Query the next value in the MIB tree and all of its adjacent values.", "example": "snmpbulkget -v {{version}} -c {{community}} {{ip}} {{oid}}"}
,
  {"command": "snmpdf", "description": "Fetch disk space usage information.", "example": "snmpdf -v {{version}} -c {{community}} {{ip}}"}
,
  {"command": "snmpget", "description": "Query using the SNMP protocol.", "example": "snmpget -v {{version}} -c {{community}} {{ip}} {{oid}}"}
,
  {"command": "snmpgetnext", "description": "Query the next value in the MIB tree.", "example": "snmpgetnext -v {{version}} -c {{community}} {{ip}} {{oid}}"}
,
  {"command": "snmpnetstat", "description": "Fetch networking status using SNMP.", "example": "snmpnetstat -v {{version}} -c {{community}} {{ip}}"}
,
  {"command": "snmpset", "description": "Set a value using the SNMP protocol.", "example": "snmpset -v {{version}} -c {{community}} {{ip}} {{oid}} {{value_type}} {{value}}"}
,
  {"command": "snmpstatus", "description": "Fetch fixed MIB status values.", "example": "snmpstatus -v {{version}} -c {{community}} {{ip}}"}
,
  {"command": "snmptable", "description": "Fetch data in tabular format.", "example": "snmptable -v {{version}} -c {{community}} {{ip}} {{oid}}"}
,
  {"command": "snmptest", "description": "Start an interactive SNMP prompt.", "example": "snmptest -v {{version}} -c {{community}} {{ip}}"}
,
  {"command": "snmpwalk", "description": "SNMP query tool.", "example": "snmpwalk -v 1 -c {{community}} {{ip}}"}
,
  {"command": "snort", "description": "Open-source network intrusion detection system.", "example": "sudo snort -v -i {{interface}}"}
,
  {"command": "snowsql", "description": "SnowSQL client for Snowflake's Data Cloud.", "example": "snowsql --accountname {{account}} --username {{username}} --dbname {{database}} --schemaname {{schema}}"}
,
  {"command": "snyk", "description": "Find vulnerabilities in your code and remediate risks.", "example": "snyk auth"}
,
  {"command": "socat", "description": "Multipurpose relay (SOcket CAT).", "example": "sudo socat - TCP-LISTEN:8080,fork"}
,
  {"command": "solcjs", "description": "A set of JavaScript bindings for the Solidity compiler.", "example": "solcjs --bin {{path/to/file.sol}}"}
,
  {"command": "solo", "description": "Interact with Solo hardware security keys.", "example": "solo ls"}
,
  {"command": "sonar-scanner", "description": "A generic scanner for SonarQube projects that do not use build tools such as Maven, Gradle, or Ant.", "example": "sonar-scanner"}
,
  {"command": "sops", "description": "SOPS (Secrets OPerationS): a simple and flexible tool for managing secrets.", "example": "sops -e {{path/to/file.json}} > {{path/to/file.enc.json}}"}
,
  {"command": "sort", "description": "Sort lines of text files.", "example": "sort {{path/to/file}}"}
,
  {"command": "soupault", "description": "A static website generator based on HTML element tree rewriting.", "example": "soupault --init"}
,
  {"command": "source", "description": "Execute commands from a file in the current shell.", "example": "source {{path/to/file}}"}
,
  {"command": "soxi", "description": "SoXI - Sound eXchange Information, display sound file metadata.", "example": "soxi {{path/to/file.wav}}"}
,
  {"command": "sox", "description": "Sound eXchange: play, record and convert audio files.", "example": "sox {{[-m|--combine mix]}} {{path/to/input_audio1}} {{path/to/input_audio2}} {{path/to/output_audio}}"}
,
  {"command": "spark", "description": "The Laravel Spark tool.", "example": "spark register {{token}}"}
,
  {"command": "spctoppm", "description": "Convert an Atari compressed Spectrum image to a PPM image.", "example": "spctoppm {{path/to/input.spc}} > {{path/to/output.ppm}}"}
,
  {"command": "spectacle", "description": "KDE's screenshot utility.", "example": "spectacle"}
,
  {"command": "speedcrunch", "description": "A high-precision scientific calculator.", "example": "speedcrunch"}
,
  {"command": "speedtest-cli", "description": "Test internet bandwidth using <https://speedtest.net>.", "example": "speedtest-cli"}
,
  {"command": "speed-test", "description": "Test your internet connection speed and ping using <https://speedtest.net>.", "example": "speed-test"}
,
  {"command": "speedtest", "description": "Official command-line interface for testing internet bandwidth using <https://speedtest.net>.", "example": "speedtest"}
,
  {"command": "speedtest-rs", "description": "An unofficial Rust-based tool for testing network speeds using speedtest.net, limited to HTTP Legacy Fallback.", "example": "speedtest-rs"}
,
  {"command": "spf", "description": "The superfile – Modern terminal file manager.", "example": "spf {{path/to/directory}}"}
,
  {"command": "spfquery", "description": "Query Sender Policy Framework records to validate e-mail senders.", "example": "spfquery -ip {{8.8.8.8}} -sender {{sender@example.com}}"}
,
  {"command": "sphinx-build", "description": "Sphinx documentation generator.", "example": "sphinx-build {{[-b|--builder]}} {{html|epub|text|latex|man|...}} {{path/to/source_dir}} {{path/to/build_dir}}"}
,
  {"command": "spicetify", "description": "Customize the Spotify client UI and functionality.", "example": "spicetify"}
,
  {"command": "spike", "description": "A fully featured static website generator written in JavaScript.", "example": "spike new {{project_name}}"}
,
  {"command": "split", "description": "Split a file into pieces.", "example": "split {{[-l|--lines]}} 10 {{path/to/file}}"}
,
  {"command": "sponge", "description": "Soak up the input before writing the output file.", "example": "cat {{path/to/file}} | sponge -a {{path/to/file}}"}
,
  {"command": "spotdl", "description": "Download Spotify playlists and songs along with metadata.", "example": "spotdl {{open.spotify.com/playlist/playlistId1 open.spotify.com/track/trackId2 ...}}"}
,
  {"command": "spottopgm", "description": "Convert a SPOT satellite image to PGM format.", "example": "spottopgm {{path/to/file.spot}} > {{path/to/output.pgm}}"}
,
  {"command": "sputoppm", "description": "Convert an Atari uncompressed Spectrum image to a PPM image.", "example": "sputoppm {{path/to/input.spu}} > {{path/to/output.ppm}}"}
,
  {"command": "sqlite3", "description": "Interface to SQLite 3, which is a self-contained file-based embedded SQL engine.", "example": "sqlite3"}
,
  {"command": "sqlite-utils", "description": "Manipulate SQLite databases in a number of different ways.", "example": "sqlite-utils create-database {{path/to/database.db}}"}
,
  {"command": "sqlmap", "description": "Detect and exploit SQL injection flaws.", "example": "python sqlmap.py {{[-u|--url]}} \"{{http://www.example.com/vuln.php?id=1}}\""}
,
  {"command": "sqlx", "description": "Utility for SQLx, the Rust SQL toolkit.", "example": "sqlx database create"}
,
  {"command": "sqsc", "description": "An AWS Simple Queue Service client.", "example": "sqsc lq {{queue_prefix}}"}
,
  {"command": "srftopam", "description": "Convert an SRF file to Netpbm format.", "example": "srftopam {{path/to/file.srf}} > {{path/to/output.pam}}"}
,
  {"command": "srm", "description": "Securely remove files or directories.", "example": "srm {{[-s|--simple]}} {{path/to/file}}"}
,
  {"command": "ssh-add", "description": "Manage loaded SSH keys in the `ssh-agent`.", "example": "ssh-add"}
,
  {"command": "ssh-agent", "description": "Spawn an SSH Agent process.", "example": "eval $(ssh-agent)"}
,
  {"command": "ssh-copy-id", "description": "Install your public key in a remote machine's authorized_keys.", "example": "ssh-copy-id {{username}}@{{remote_host}}"}
,
  {"command": "sshd", "description": "Secure Shell Daemon - allows remote machines to securely log in to the current machine.", "example": "sshd"}
,
  {"command": "sshfs", "description": "Filesystem client based on SSH.", "example": "sshfs {{username}}@{{remote_host}}:{{remote_directory}} {{mountpoint}}"}
,
  {"command": "ssh-keygen", "description": "Generate SSH keys used for authentication, password-less logins, and other things.", "example": "ssh-keygen"}
,
  {"command": "ssh-keyscan", "description": "Get the public SSH keys of remote hosts.", "example": "ssh-keyscan {{hostname}}"}
,
  {"command": "ssh", "description": "Secure Shell is a protocol used to securely log onto remote systems.", "example": "ssh {{username}}@{{remote_host}}"}
,
  {"command": "sshpass", "description": "An SSH password provider.", "example": "sshpass -d {{0}} ssh {{user}}@{{hostname}}"}
,
  {"command": "sshuttle", "description": "Transparent proxy server that tunnels traffic over an SSH connection.", "example": "sshuttle {{[-r|--remote]}} {{username}}@{{sshserver}} {{0.0.0.0/0}}"}
,
  {"command": "ss-local", "description": "Run a Shadowsocks client as a SOCKS5 proxy.", "example": "ss-local -s {{host}} -p {{server_port}} -l {{local port}} -k {{password}} -m {{encrypt_method}}"}
,
  {"command": "sslscan", "description": "Check SSL/TLS protocols and ciphers supported by a server.", "example": "sslscan {{example.com}}"}
,
  {"command": "st4topgm", "description": "Convert an SBIG ST-4 file to PGM.", "example": "st4topgm {{path/to/input_file.st4}} > {{path/to/output.pgm}}"}
,
  {"command": "stack", "description": "Manage Haskell projects.", "example": "stack new {{package}} {{template}}"}
,
  {"command": "standard", "description": "The JavaScript Standard Style tool for linting and fixing JavaScript code.", "example": "standard"}
,
  {"command": "standard-version", "description": "Automate versioning and changelog generation, with SemVer and Conventional Commits.", "example": "standard-version"}
,
  {"command": "starship-init", "description": "Print shell integration code for starship.", "example": "starship init {{bash|elvish|fish|ion|powershell|tcsh|zsh}}"}
,
  {"command": "starship", "description": "The minimal, blazing-fast, and infinitely customizable prompt for any shell.", "example": "starship init {{bash|elvish|fish|ion|powershell|tcsh|zsh|nu|xonsh|cmd}}"}
,
  {"command": "stat", "description": "Display file and filesystem information.", "example": "stat {{path/to/file}}"}
,
  {"command": "stdbuf", "description": "Run a command with modified buffering operations for its standard streams.", "example": "stdbuf {{[-i|--input]}} 512K {{command}}"}
,
  {"command": "steamcmd", "description": "A command-line version of the Steam client.", "example": "steamcmd +login {{anonymous}} +app_update {{appid}} +quit"}
,
  {"command": "steam", "description": "Video game platform by Valve.", "example": "steam"}
,
  {"command": "step", "description": "An easy-to-use CLI tool for building, operating, and automating Public Key Infrastructure (PKI) systems and workflows.", "example": "step certificate inspect {{path/to/certificate.crt}}"}
,
  {"command": "stern", "description": "Tail multiple pods and containers from Kubernetes.", "example": "stern ."}
,
  {"command": "st-flash", "description": "Flash binary files to STM32 ARM Cortex microcontrollers.", "example": "st-flash read {{firmware}}.bin {{0x8000000}} {{4096}}"}
,
  {"command": "st-info", "description": "Get information about connected STLink and STM32 devices.", "example": "st-info --flash"}
,
  {"command": "stl2gts", "description": "Convert STL files into the GTS (GNU triangulated surface library) file format.", "example": "stl2gts < {{path/to/file.stl}} > {{path/to/file.gts}}"}
,
  {"command": "stolonctl", "description": "CLI for Stolon, a cloud native PostgreSQL manager for PostgreSQL high availability.", "example": "stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} status"}
,
  {"command": "stormlock", "description": "Centralized locking system.", "example": "stormlock acquire {{resource}}"}
,
  {"command": "stow", "description": "Symlink manager.", "example": "stow {{[-t|--target]}} {{path/to/target_directory}} {{file1 directory1 file2 directory2}}"}
,
  {"command": "streamlink", "description": "Extracts streams from various services and pipes them into a video player of choice.", "example": "streamlink {{example.com/stream}}"}
,
  {"command": "streamlit", "description": "Framework for creating interactive, data-driven web apps in Python.", "example": "streamlit hello"}
,
  {"command": "stressapptest", "description": "Userspace memory and IO test.", "example": "stressapptest -M {{memory}}"}
,
  {"command": "stress-ng", "description": "Load and stress a Linux system in various ways (CPU, memory, I/O, etc.).", "example": "stress-ng {{[-c|--cpu]}} 4 {{[-t|--timeout]}} 60s"}
,
  {"command": "strings", "description": "Find printable strings in an object file or binary.", "example": "strings {{path/to/file}}"}
,
  {"command": "stripe", "description": "Interact with a Stripe account.", "example": "stripe logs tail"}
,
  {"command": "strip-nondeterminism", "description": "Remove non-deterministic information (e.g. timestamps) from files.", "example": "strip-nondeterminism {{path/to/file}}"}
,
  {"command": "stty", "description": "Set options for a terminal device interface.", "example": "stty size"}
,
  {"command": "stun", "description": "Classic STUN client.", "example": "stun {{stun.1und1.de}}"}
,
  {"command": "st-util", "description": "Run GDB (GNU Debugger) server to interact with STM32 ARM Cortex microcontoller.", "example": "st-util {{[-p|--listen_port]}} {{4500}}"}
,
  {"command": "stylua", "description": "An opinionated Lua code formatter.", "example": "stylua {{path/to/file_or_directory}}"}
,
  {"command": "subfinder", "description": "Discover valid subdomains for websites.", "example": "subfinder {{[-d|-domain]}} {{example.com}}"}
,
  {"command": "subliminal", "description": "Python-based subtitle downloader.", "example": "subliminal download {{[-l|--language]}} {{en}} {{video.ext}}"}
,
  {"command": "sublist3r", "description": "Fast subdomains enumeration tool for penetration testers.", "example": "sublist3r --domain {{domain_name}}"}
,
  {"command": "subl", "description": "Sublime Text editor.", "example": "subl ."}
,
  {"command": "sudo", "description": "Executes a single command as the superuser or another user.", "example": "sudo {{less /var/log/syslog}}"}
,
  {"command": "sui-client-faucet", "description": "Interact with the Sui faucet.", "example": "sui client faucet"}
,
  {"command": "sui-client", "description": "Publish smart contracts, get object information, execute transactions, and more.", "example": "sui client new-address ed25519 {{address-alias}}"}
,
  {"command": "sui-client-ptb", "description": "Create, sign and execute programmable transaction blocks.", "example": "sui client ptb --move-call p::m::f \"<{{type}}>\" args"}
,
  {"command": "sui", "description": "Interact with the Sui network.", "example": "sui {{subcommand}}"}
,
  {"command": "sui-move", "description": "Work with Move source code.", "example": "sui move new {{project_name}}"}
,
  {"command": "sum", "description": "Compute checksums and the number of blocks for a file.", "example": "sum {{path/to/file}}"}
,
  {"command": "sunicontopnm", "description": "Convert a Sun icon into a Netpbm image.", "example": "sunicontopnm {{path/to/input.ico}} > {{path/to/output.pbm}}"}
,
  {"command": "supervisorctl", "description": "Supervisor, a client/server system that allows its users to control a number of processes on UNIX-like operating systems.", "example": "supervisorctl status {{process_name}}"}
,
  {"command": "supervisord", "description": "Supervisor is a client/server system for controlling some processes on UNIX-like operating systems.", "example": "supervisord {{[-c|--configuration]}} {{path/to/file}}"}
,
  {"command": "sup", "description": "Manage a RSS feed in the current directory.", "example": "sup {{path/to/file.html}}"}
,
  {"command": "surfraw", "description": "Query a variety of web search engines.", "example": "surfraw -elvi"}
,
  {"command": "surge", "description": "Simple web publishing.", "example": "surge {{path/to/my_project}}"}
,
  {"command": "suspend", "description": "Suspend the execution of the current shell.", "example": "{{bash}} <Enter> suspend"}
,
  {"command": "svgcleaner", "description": "SVG optimizing utility.", "example": "svgcleaner {{input.svg}} {{output.svg}}"}
,
  {"command": "svgo", "description": "SVG Optimizer: optimizing Scalable Vector Graphics files. Based in Node.js.", "example": "svgo {{test.svg}}"}
,
  {"command": "svgr", "description": "Transform SVGs into React components.", "example": "svgr -- {{path/to/file.svg}}"}
,
  {"command": "svgtopam", "description": "Convert an SVG file to Netpbm format.", "example": "svgtopam {{path/to/file.svg}} > {{path/to/output.pam}}"}
,
  {"command": "sv", "description": "Control a running runsv service.", "example": "sudo sv up {{path/to/service}}"}
,
  {"command": "svn-changelist", "description": "Associate a changelist with a set of files.", "example": "svn changelist {{changelist_name}} {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "svn", "description": "Subversion client tool.", "example": "svn co {{url/to/repository}}"}
,
  {"command": "swagger-codegen", "description": "Generate code and documentation for your REST api from a OpenAPI/swagger definition.", "example": "swagger-codegen generate {{[-i|--input-spec]}} {{swagger_file}} {{[-l|--lang]}} {{language}}"}
,
  {"command": "swaybg", "description": "Wallpaper tool for Wayland compositors.", "example": "swaybg {{[-i|--image]}} {{path/to/image}}"}
,
  {"command": "swayidle", "description": "Idle management daemon for Wayland.", "example": "swayidle"}
,
  {"command": "swaylock", "description": "Screen locking utility for Wayland compositors.", "example": "swaylock"}
,
  {"command": "sway", "description": "A tiling Wayland compositor.", "example": "sway"}
,
  {"command": "swc", "description": "JavaScript and TypeScript compiler written in Rust.", "example": "swc {{path/to/file}}"}
,
  {"command": "swift", "description": "Create, run and build Swift projects.", "example": "swift repl"}
,
  {"command": "swig", "description": "Generate bindings between C/C++ code and various high level languages such as JavaScript, Python, C#, and more.", "example": "swig -c++ -python -o {{path/to/output_wrapper.cpp}} {{path/to/swig_file.i}}"}
,
  {"command": "swipl", "description": "SWI-Prolog - A comprehensive free Prolog environment.", "example": "swipl"}
,
  {"command": "symfony", "description": "The console component for the Symfony framework.", "example": "symfony new {{name}}"}
,
  {"command": "sync", "description": "Flushes all pending write operations to the appropriate disks.", "example": "sync"}
,
  {"command": "syncthing", "description": "Continuous bidirectional decentralised folder synchronisation tool.", "example": "syncthing"}
,
  {"command": "sysbench", "description": "Benchmark a System's CPU, IO and memory.", "example": "sysbench cpu run"}
,
  {"command": "tabula", "description": "Extract tables from PDF files.", "example": "tabula -o {{file.csv}} {{file.pdf}}"}
,
  {"command": "tac", "description": "Display and concatenate files with lines in reversed order.", "example": "tac {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "tail", "description": "Display the last part of a file.", "example": "tail {{[-n|--lines]}} {{count}} {{path/to/file}}"}
,
  {"command": "tailscale-file", "description": "Send files across connected devices on a Tailscale network.", "example": "tailscale file cp {{path/to/file}} {{hostname|ip}}:"}
,
  {"command": "tailscale", "description": "A private WireGuard network service.", "example": "sudo tailscale set --operator $USER"}
,
  {"command": "tailscale-set", "description": "Change the specified preferences.", "example": "tldr tailscale up"}
,
  {"command": "tailscale-ssh", "description": "SSH to a Tailscale machine (Linux Only).", "example": "tailscale up --ssh={{true|false}}"}
,
  {"command": "tailscale-up", "description": "Connect the client to the Tailscale network.", "example": "tailscale up"}
,
  {"command": "takeout", "description": "A Docker-based development-only dependency manager.", "example": "takeout enable"}
,
  {"command": "tar", "description": "Archiving utility.", "example": "tar cf {{path/to/target.tar}} {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "tarsnap-keygen", "description": "Generate a key file for use with Tarsnap, an online backup service.", "example": "sudo tarsnap-keygen --keyfile {{path/to/file.key}} --user {{user_email}} --machine {{machine_name}}"}
,
  {"command": "tarsnap", "description": "Manipulate remote Tarsnap encrypted backups.", "example": "tarsnap -c --keyfile {{path/to/key_file}} --cachedir {{path/to/cache_directory}} -f {{archive_name}} {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"}
,
  {"command": "task", "description": "To-do list manager.", "example": "task add {{description}} due:{{tomorrow}}"}
,
  {"command": "tbl", "description": "Table preprocessor for the groff (GNU Troff) document formatting system.", "example": "tbl {{path/to/input_file}} > {{path/to/output.roff}}"}
,
  {"command": "tb", "description": "Manage tasks and notes across multiple boards.", "example": "tb --task {{task_description}} @{{board_name}}"}
,
  {"command": "tcc", "description": "A tiny C compiler that can run C source files as scripts and otherwise has command-line options similar to `gcc`.", "example": "tcc -o {{executable_name}} {{path/to/file1.c}} {{path/to/file2.c}}"}
,
  {"command": "tcpdump", "description": "Dump traffic on a network.", "example": "tcpdump {{[-D|--list-interfaces]}}"}
,
  {"command": "tcpreplay", "description": "Replay network traffic stored in a `pcap` file.", "example": "tcpreplay --listnics"}
,
  {"command": "tcsh", "description": "C shell with file name completion and command-line editing.", "example": "tcsh"}
,
  {"command": "tea", "description": "Interact with Gitea servers.", "example": "tea login add --name \"{{name}}\" --url \"{{url}}\" --token \"{{token}}\""}
,
  {"command": "tectonic", "description": "A modern, self-contained TeX/LaTeX engine.", "example": "tectonic -X compile {{path/to/file.tex}}"}
,
  {"command": "tee", "description": "Read from `stdin` and write to `stdout` and files (or commands).", "example": "echo \"example\" | tee {{path/to/file}}"}
,
  {"command": "telegram-desktop", "description": "Instant messenger with open source clients, chats and stickers.", "example": "telegram-desktop"}
,
  {"command": "telnet", "description": "Connect to a specified port of a host using the telnet protocol.", "example": "telnet {{host}}"}
,
  {"command": "termdown", "description": "Countdown timer and stopwatch.", "example": "termdown"}
,
  {"command": "terminalizer", "description": "Record the terminal, generate animated GIFs and a web player, and optionally upload to <https://terminalizer.com>.", "example": "terminalizer init"}
,
  {"command": "terraform-fmt", "description": "Format configuration according to Terraform language style conventions.", "example": "terraform fmt"}
,
  {"command": "terraform", "description": "Create and deploy infrastructure as code to cloud providers.", "example": "terraform init"}
,
  {"command": "terraform-output", "description": "Export structured data about your Terraform resources.", "example": "terraform output"}
,
  {"command": "terraform-plan", "description": "Generate and show Terraform execution plans.", "example": "terraform plan"}
,
  {"command": "terragrunt", "description": "Keep your Terraform CLI arguments DRY.", "example": "terragrunt plan"}
,
  {"command": "tesseract", "description": "OCR (Optical Character Recognition) engine.", "example": "tesseract {{image.png}} {{output}}"}
,
  {"command": "test", "description": "Check file types and compare values.", "example": "test \"{{$MY_VAR}}\" = \"{{/bin/zsh}}\""}
,
  {"command": "testssl", "description": "Check SSL/TLS protocols and ciphers supported by a server.", "example": "testssl {{example.com}}"}
,
  {"command": "texcount", "description": "Count words in TeX documents omitting macros.", "example": "texcount {{path/to/file.tex}}"}
,
  {"command": "texdoc", "description": "Search for appropriate documentation for (La)TeX commands or packages.", "example": "texdoc {{search}}"}
,
  {"command": "tex-fmt", "description": "Format LaTeX source code.", "example": "tex-fmt {{path/to/file.tex}}"}
,
  {"command": "texliveonfly", "description": "Downloads missing TeX Live packages while compiling `.tex` files.", "example": "texliveonfly {{source.tex}}"}
,
  {"command": "tex", "description": "Compile a DVI document from TeX source files.", "example": "tex {{source.tex}}"}
,
  {"command": "textql", "description": "Execute SQL against structured text like CSV or TSV files.", "example": "textql -sql \"{{SELECT * FROM filename}}\" {{path/to/filename.csv}}"}
,
  {"command": "tgatoppm", "description": "Convert a TrueVision Targa file to a Netpbm image.", "example": "tgatoppm {{path/to/file.tga}} > {{path/to/output.ppm}}"}
,
  {"command": "tgpt", "description": "Talk to an AI chatbot without the need for API keys.", "example": "tgpt \"{{prompt}}\""}
,
  {"command": "theharvester", "description": "A tool designed to be used in the early stages of a penetration test.", "example": "theHarvester --domain {{domain_name}} --source google"}
,
  {"command": "then", "description": "This shell keyword is used in combination with `if` and `elif` to separate branches and branch conditions.", "example": "tldr if"}
,
  {"command": "thinkjettopbm", "description": "Convert a HP ThinkJet printer commands file to a PBM file.", "example": "thinkjettopbm {{path/to/input}} > {{path/to/output.pbm}}"}
,
  {"command": "thunderbird", "description": "Email client and RSS reader.", "example": "thunderbird"}
,
  {"command": "tidy", "description": "Clean up and pretty print HTML, XHTML and XML files.", "example": "tidy {{path/to/file.html}}"}
,
  {"command": "tifftopnm", "description": "Convert a TIFF image to a PNM image.", "example": "tifftopnm {{path/to/input_file.tiff}} > {{path/to/output_file.pnm}}"}
,
  {"command": "tig", "description": "A configurable `ncurses`-based TUI for Git.", "example": "tig"}
,
  {"command": "time", "description": "Measure how long a command took to run.", "example": "time {{command}}"}
,
  {"command": "timeout", "description": "Run a command with a time limit.", "example": "timeout 3s sleep 10"}
,
  {"command": "times", "description": "Print the cumulative CPU usage time of the current shell.", "example": "times"}
,
  {"command": "timetrap", "description": "Simple time tracker written in Ruby.", "example": "timetrap sheet {{timesheet}}"}
,
  {"command": "timew", "description": "A time tracking tool used to measure the duration of activities.", "example": "timew start"}
,
  {"command": "timidity", "description": "Play and convert MIDI files.", "example": "timidity {{path/to/file.mid}}"}
,
  {"command": "tldr-lint", "description": "Lint and format `tldr` pages.", "example": "tldr-lint {{pages_directory}}"}
,
  {"command": "tldrl", "description": "This command is an alias of `tldr-lint`.", "example": "tldr tldr-lint"}
,
  {"command": "tldr", "description": "Display simple help pages for command-line tools from the tldr-pages project.", "example": "tldr {{command}}"}
,
  {"command": "tlmgr-arch", "description": "This command is an alias of `tlmgr platform`.", "example": "tldr tlmgr platform"}
,
  {"command": "tlmgr-backup", "description": "Manage backups of TeX Live packages.", "example": "tlmgr backup {{package1 package2 ...}}"}
,
  {"command": "tlmgr-candidates", "description": "Get available candidate repositories from which a TeX Live package can be installed.", "example": "tlmgr candidates {{package}}"}
,
  {"command": "tlmgr-check", "description": "Check the consistency of a TeX Live installation.", "example": "tlmgr check all"}
,
  {"command": "tlmgr-conf", "description": "Manage the TeX Live configuration.", "example": "tlmgr conf"}
,
  {"command": "tlmgr-dump-tlpdb", "description": "Dump the TeX Live package database.", "example": "tlmgr dump-tlpdb --local"}
,
  {"command": "tlmgr-generate", "description": "Remake configuration files from information stored locally.", "example": "tlmgr generate --dest {{output_file}}"}
,
  {"command": "tlmgr-gui", "description": "Start a graphical user interface for `tlmgr`.", "example": "sudo tlmgr gui"}
,
  {"command": "tlmgr-info", "description": "Show information about TeX Live packages.", "example": "tlmgr info"}
,
  {"command": "tlmgr-install", "description": "Install TeX Live packages.", "example": "sudo tlmgr install {{package}}"}
,
  {"command": "tlmgr-key", "description": "Manage GPG keys used to verify TeX Live databases.", "example": "tlmgr key list"}
,
  {"command": "tlmgr", "description": "Manage packages and configuration options of an existing TeX Live installation.", "example": "tlmgr install {{package}}"}
,
  {"command": "tlmgr-option", "description": "TeX Live settings manager.", "example": "tlmgr option showall"}
,
  {"command": "tlmgr-paper", "description": "Manage paper size options of an TeX Live installation.", "example": "tlmgr paper"}
,
  {"command": "tlmgr-path", "description": "Add or remove symlinks for TeX Live executables, man pages and info pages.", "example": "sudo tlmgr path add"}
,
  {"command": "tlmgr-pinning", "description": "The pinning action manages the pinning file.", "example": "tlmgr pinning show"}
,
  {"command": "tlmgr-platform", "description": "Manage TeX Live platforms.", "example": "tlmgr platform list"}
,
  {"command": "tlmgr-recreate-tlpdb", "description": "Recreate the TeX Live package database.", "example": "sudo tlmgr recreate-tlpdb"}
,
  {"command": "tlmgr-remove", "description": "Uninstall TeX Live packages.", "example": "sudo tlmgr remove {{package}}"}
,
  {"command": "tlmgr-repository", "description": "Manage repositories of a TeX Live installation.", "example": "tlmgr repository list"}
,
  {"command": "tlmgr-restore", "description": "Restore package backups created with `tlmgr backup`.", "example": "tlmgr restore"}
,
  {"command": "tlmgr-search", "description": "Search for TeX Live packages using (Perl) regular expressions.", "example": "tlmgr search \"{{regular_expression}}\""}
,
  {"command": "tlmgr-shell", "description": "Start an interactive shell of the native TeX Live manager.", "example": "tlmgr shell"}
,
  {"command": "tlmgr-update", "description": "Update TeX Live packages.", "example": "sudo tlmgr update --all"}
,
  {"command": "tmpmail", "description": "A temporary email right from your terminal written in POSIX sh.", "example": "tmpmail {{[-g|--generate]}}"}
,
  {"command": "tmsu", "description": "Simple tool for tagging files.", "example": "tmsu tag {{path/to/file.mp3}} {{music}} {{big-jazz}} {{mp3}}"}
,
  {"command": "tmuxinator", "description": "Create and manage tmux sessions easily.", "example": "tmuxinator new {{project}}"}
,
  {"command": "tmux", "description": "Terminal multiplexer.", "example": "tmux"}
,
  {"command": "todoist", "description": "Access <https://todoist.com> from the command-line.", "example": "todoist add \"{{task_name}}\""}
,
  {"command": "todoman", "description": "A simple, standards-based, cli todo manager.", "example": "tldr todo"}
,
  {"command": "todo", "description": "A simple, standards-based, cli todo manager.", "example": "todo list --startable"}
,
  {"command": "todo.sh", "description": "Simple and extensible shell script for managing your `todo.txt` file.", "example": "todo.sh ls"}
,
  {"command": "tofu-fmt", "description": "Format configuration according to OpenTofu language style conventions.", "example": "tofu fmt"}
,
  {"command": "tofu", "description": "Create and deploy infrastructure as code to cloud providers. Open-source fork of Terraform.", "example": "tofu init"}
,
  {"command": "tofu-output", "description": "Export structured data about your OpenTofu resources.", "example": "tofu output"}
,
  {"command": "tofu-plan", "description": "Generate and show OpenTofu execution plans.", "example": "tofu plan"}
,
  {"command": "toipe", "description": "Yet another typing test, but crab flavoured.", "example": "toipe"}
,
  {"command": "tokei", "description": "Display statistics about code.", "example": "tokei {{path/to/directory}}"}
,
  {"command": "topgrade", "description": "Update all applications on the system.", "example": "topgrade"}
,
  {"command": "topydo", "description": "A to-do list application that uses the todo.txt format.", "example": "topydo add \"{{todo_message}} +{{project_name}} @{{context_name}}\""}
,
  {"command": "touch", "description": "Create files and set access/modification times.", "example": "touch {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "tox", "description": "Automate Python testing across multiple Python versions.", "example": "tox"}
,
  {"command": "tpp", "description": "Command-Line based presentation tool.", "example": "tpp {{path/to/file}}"}
,
  {"command": "tput", "description": "View and modify terminal settings and capabilities.", "example": "tput cup {{row}} {{column}}"}
,
  {"command": "tqdm", "description": "Show progress over time of a command.", "example": "{{seq 10000000}} | tqdm | {{command}}"}
,
  {"command": "traceroute", "description": "Print the route packets trace to network host.", "example": "traceroute {{example.com}}"}
,
  {"command": "traefik", "description": "An HTTP reverse proxy and load balancer.", "example": "traefik"}
,
  {"command": "transcode", "description": "Transcode video and audio codecs, and convert between media formats.", "example": "transcode -J stabilize -i {{input_file}}"}
,
  {"command": "transcrypt", "description": "Transparently encrypt files within a Git repository.", "example": "transcrypt"}
,
  {"command": "transfersh", "description": "An unofficial client for transfer.sh.", "example": "transfersh {{path/to/file}}"}
,
  {"command": "trans", "description": "Translate Shell, a command-line translator.", "example": "trans \"{{word_or_sentence_to_translate}}\""}
,
  {"command": "transmission-cli", "description": "A lightweight, command-line BitTorrent client.", "example": "transmission-cli {{url|magnet|path/to/file}}"}
,
  {"command": "transmission-create", "description": "Create BitTorrent `.torrent` files.", "example": "transmission-create {{[-o|--outfile]}} {{path/to/example.torrent}} {{[-t|--tracker]}} {{tracker_announce_url}} {{[-s|--piecesize]}} {{2048}} {{path/to/file_or_directory}}"}
,
  {"command": "transmission-daemon", "description": "Daemon controlled with `transmission-remote` or its web interface.", "example": "transmission-daemon"}
,
  {"command": "transmission-edit", "description": "Modify announce URLs from torrent files.", "example": "transmission-edit {{[-a|--add]}} {{http://example.com}} {{path/to/file.torrent}}"}
,
  {"command": "transmission", "description": "A simple torrent client.", "example": "tldr transmission-daemon"}
,
  {"command": "transmission-remote", "description": "Remote control utility for `transmission-daemon` and `transmission`.", "example": "transmission-remote {{hostname}} {{[-a|--all]}} {{torrent|url}} {{[-w|--download-dir]}} {{/path/to/download_directory}}"}
,
  {"command": "transmission-show", "description": "Get information about a torrent file.", "example": "transmission-show {{path/to/file.torrent}}"}
,
  {"command": "trap", "description": "Execute a command upon an event.", "example": "trap"}
,
  {"command": "trash-cli", "description": "This command is an alias of `trash`.", "example": "tldr trash"}
,
  {"command": "travis", "description": "Interface with Travis CI.", "example": "travis version"}
,
  {"command": "trawl", "description": "Print out network interface information to the console, much like ifconfig/ipconfig/ip/ifdata.", "example": "trawl -n"}
,
  {"command": "trdsql", "description": "Execute SQL on CSV, LTSV, JSON, YAML, and TBLN files.", "example": "trdsql -ocsv -oh \"SELECT * FROM {{path/to/file/*.json}}\" | sed 's/([^,]*)/\"&\"/g' > {{path/to/file.csv}}"}
,
  {"command": "tred", "description": "Compute the transitive reduction of directed graphs.", "example": "tred {{path/to/input1.gv path/to/input2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "tree", "description": "Show the contents of the current directory as a tree.", "example": "tree -L {{num}}"}
,
  {"command": "tre", "description": "Show the contents of the current directory as a tree.", "example": "tre --directories"}
,
  {"command": "trip", "description": "A network diagnostic tool.", "example": "sudo trip {{example.com}}"}
,
  {"command": "trivy", "description": "Scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues.", "example": "trivy image {{image:tag}}"}
,
  {"command": "tr", "description": "Translate characters: run replacements based on single characters and character sets.", "example": "tr {{find_character}} {{replace_character}} < {{path/to/file}}"}
,
  {"command": "troff", "description": "Typesetting processor for the groff (GNU Troff) document formatting system.", "example": "troff {{path/to/input.roff}} | grops > {{path/to/output.ps}}"}
,
  {"command": "true", "description": "Returns a successful exit status code of 0.", "example": "true"}
,
  {"command": "trufflehog", "description": "Find and verify credentials in files, Git repositories, S3 buckets, and Docker images.", "example": "trufflehog git {{https://github.com/trufflesecurity/test_keys}} --only-verified"}
,
  {"command": "truffle", "description": "Develop smart contracts for running services on the Ethereum blockchain.", "example": "truffle unbox {{box_name}}"}
,
  {"command": "truncate", "description": "Shrink or extend the size of a file to the specified size.", "example": "truncate {{[-s|--size]}} 10G {{path/to/file}}"}
,
  {"command": "tsc", "description": "TypeScript compiler.", "example": "tsc {{foobar.ts}}"}
,
  {"command": "tslint", "description": "A pluggable linting utility for TypeScript.", "example": "tslint --init"}
,
  {"command": "ts", "description": "Add timestamps to every line from `stdin`.", "example": "{{command}} | ts"}
,
  {"command": "ts-node", "description": "Run TypeScript code directly, without any compiling.", "example": "ts-node {{path/to/file.ts}}"}
,
  {"command": "tsort", "description": "Perform a topological sort.", "example": "tsort {{path/to/file}}"}
,
  {"command": "tspin", "description": "A log file highlighter based on the `less` pager and basically behaves like any pager.", "example": "tspin {{path/to/application.log}}"}
,
  {"command": "tsv-filter", "description": "Filter lines of a TSV file by running tests against individual fields.", "example": "tsv-filter -H --eq {{field_name}}:{{number}} {{path/to/tsv_file}}"}
,
  {"command": "tt", "description": "A terminal based typing test.", "example": "tt -quotes {{en}}"}
,
  {"command": "tts", "description": "Synthesize speech.", "example": "tts --text \"{{text}}\""}
,
  {"command": "tty", "description": "Returns terminal name.", "example": "tty"}
,
  {"command": "tuckr", "description": "Dotfile manager written in Rust.", "example": "tuckr status"}
,
  {"command": "tuc", "description": "Cut text (or bytes) where a delimiter matches, then keep the desired parts.", "example": "echo \"foo bar baz\" | tuc {{[-d|--delimiter]}} '{{ }}' {{[-f|--fields]}} {{3,2,1}}"}
,
  {"command": "tuir", "description": "A text user-interface (TUI) to view and interact with Reddit from your terminal.", "example": "tuir"}
,
  {"command": "turbo", "description": "High-performance build system for JavaScript and TypeScript codebases.", "example": "turbo login"}
,
  {"command": "twine", "description": "Utility for publishing Python packages on PyPI.", "example": "twine upload dist/*"}
,
  {"command": "twm", "description": "A window manager for the X Window system.", "example": "twm"}
,
  {"command": "twopi", "description": "Render an image of a `radial` network graph from a `graphviz` file.", "example": "twopi -T {{png}} -O {{path/to/input.gv}}"}
,
  {"command": "twurl", "description": "Curl-like command but tailored specifically for the Twitter API.", "example": "twurl authorize {{[-c|--consumer-key]}} {{twitter_api_key}} {{[-s|--consumer-secret]}} {{twitter_api_secret}}"}
,
  {"command": "tye", "description": "Develop, test, and deploy microservices and distributed applications easily.", "example": "tye init"}
,
  {"command": "typeinc", "description": "An `ncurses` based terminal typing speed test program, written in Python.", "example": "typeinc"}
,
  {"command": "type", "description": "Display the type of command the shell will execute.", "example": "type {{command}}"}
,
  {"command": "typeorm", "description": "A JavaScript ORM that can run on Node.js, browser, Cordova, Ionic, React Native, NativeScript, and Electron platforms.", "example": "typeorm init"}
,
  {"command": "typeset", "description": "This command is an alias of `declare`.", "example": "tldr declare"}
,
  {"command": "typst", "description": "Compile a Typst file to PDF.", "example": "typst init \"{{template}}\" {{path/to/directory}}"}
,
  {"command": "tzconfig", "description": "Manage and set your local timezone.", "example": "tzconfig"}
,
  {"command": "u3d", "description": "A set of tools to interact with Unity.", "example": "u3d"}
,
  {"command": "ufraw-batch", "description": "Convert RAW files from cameras into standard image files.", "example": "ufraw-batch --out-type=jpg {{input_file(s)}}"}
,
  {"command": "ugrep", "description": "Ultra fast search tool with query TUI.", "example": "ugrep {{[-Q|--query]}}"}
,
  {"command": "ulimit", "description": "Get and set resource limits for user processes.", "example": "ulimit -a"}
,
  {"command": "umask", "description": "Manage the read/write/execute permissions that are masked out (i.e. restricted) for newly created files by the user.", "example": "umask"}
,
  {"command": "umount", "description": "Unlink a filesystem from its mount point, making it no longer accessible.", "example": "umount {{path/to/device_file}}"}
,
  {"command": "unalias", "description": "Remove aliases.", "example": "unalias {{alias_name}}"}
,
  {"command": "uname", "description": "Print details about the current machine and the operating system running on it.", "example": "uname"}
,
  {"command": "unar", "description": "Extract contents from archive files.", "example": "unar {{path/to/archive}}"}
,
  {"command": "unclutter", "description": "Hides the mouse cursor.", "example": "unclutter -idle {{3}}"}
,
  {"command": "uncrustify", "description": "C, C++, C#, D, Java and Pawn source code formatter.", "example": "uncrustify -f {{path/to/file.cpp}} -o {{path/to/output.cpp}}"}
,
  {"command": "unexpand", "description": "Convert spaces to tabs.", "example": "unexpand {{path/to/file}}"}
,
  {"command": "unflatten", "description": "Adjust directed graphs to improve the layout aspect ratio.", "example": "unflatten {{path/to/input1.gv path/to/input2.gv ...}} > {{path/to/output.gv}}"}
,
  {"command": "unimatrix", "description": "Simulate the Matrix look with Unicode characters.", "example": "unimatrix --no-bold --speed {{96}} --character-list {{o}}"}
,
  {"command": "uniq", "description": "Output the unique lines from a input or file.", "example": "sort {{path/to/file}} | uniq"}
,
  {"command": "unison", "description": "Bidirectional file synchronisation tool.", "example": "unison {{path/to/directory_1}} {{path/to/directory_2}}"}
,
  {"command": "units", "description": "Convert between two units of measure.", "example": "units"}
,
  {"command": "unlink", "description": "Remove a link to a file from the filesystem.", "example": "unlink {{path/to/file}}"}
,
  {"command": "unlzma", "description": "This command is an alias of `xz --format=lzma --decompress`.", "example": "tldr xz"}
,
  {"command": "unp", "description": "Extract any archive.", "example": "unp {{path/to/archive.zip}}"}
,
  {"command": "unrar", "description": "Extract RAR archives.", "example": "unrar x {{compressed.rar}}"}
,
  {"command": "unset", "description": "Remove shell variables or functions.", "example": "unset {{foo}}"}
,
  {"command": "until", "description": "Simple shell loop that repeats until it receives zero as return value.", "example": "until {{command}}; do :; done"}
,
  {"command": "unxz", "description": "This command is an alias of `xz --decompress`.", "example": "tldr xz"}
,
  {"command": "unzip", "description": "Extract files/directories from Zip archives.", "example": "unzip {{path/to/archive1.zip path/to/archive2.zip ...}}"}
,
  {"command": "unzstd", "description": "This command is an alias of `zstd --decompress`.", "example": "tldr zstd"}
,
  {"command": "updog", "description": "A replacement for Python's SimpleHTTPServer.", "example": "updog"}
,
  {"command": "uptime", "description": "Tell how long the system has been running and other information.", "example": "uptime"}
,
  {"command": "upt", "description": "Unified interface for managing packages across various operating systems, like Windows, many Linux distributions, macOS, FreeBSD and even Haiku.", "example": "upt update"}
,
  {"command": "upx", "description": "Compress or decompress executables.", "example": "upx {{path/to/file}}"}
,
  {"command": "users", "description": "Display a list of logged in users.", "example": "users"}
,
  {"command": "usleep", "description": "Delay execution for a specific interval in microseconds.", "example": "usleep {{microseconds}}"}
,
  {"command": "usql", "description": "Universal CLI interface for SQL databases.", "example": "usql {{sqlserver|mysql|postgres|sqlite3|...}}://{{username}}:{{password}}@{{host}}:{{port}}/{{database_name}}"}
,
  {"command": "uudecode", "description": "Decode files encoded by `uuencode`.", "example": "uudecode {{path/to/encoded_file}}"}
,
  {"command": "uuencode", "description": "Encode binary files into ASCII for transport via mediums that only support simple ASCII encoding.", "example": "uuencode {{path/to/input_file}} {{output_file_name_after_decoding}}"}
,
  {"command": "uv-add", "description": "Add package dependencies to the `pyproject.toml` file.", "example": "uv add {{package}}"}
,
  {"command": "uv-build", "description": "Build Python packages into source distributions and wheels.", "example": "uv build"}
,
  {"command": "uv-cache", "description": "Manage `uv`'s global cache directory.", "example": "uv cache dir"}
,
  {"command": "uv-export", "description": "Export the project's lockfile to an alternate format.", "example": "uv export --format requirements-txt {{[-o|--output-file]}} {{requirements.txt}}"}
,
  {"command": "uv-help", "description": "Display detailed documentation for `uv` commands.", "example": "uv help"}
,
  {"command": "uvicorn", "description": "Python ASGI HTTP Server, for asynchronous projects.", "example": "uvicorn {{import.path:app_object}}"}
,
  {"command": "uv-init", "description": "Create a new Python project.", "example": "uv init"}
,
  {"command": "uv-lock", "description": "Update the project's lockfile.", "example": "uv lock"}
,
  {"command": "uv", "description": "A fast Python package and project manager.", "example": "uv init"}
,
  {"command": "uv-pip", "description": "Provides pip-like commands for installing, uninstalling, and managing packages.", "example": "uv pip install {{package}}"}
,
  {"command": "uv-publish", "description": "Upload distributions to an index.", "example": "uv publish"}
,
  {"command": "uv-python", "description": "Manage Python versions and installations.", "example": "uv python list"}
,
  {"command": "uv-remove", "description": "Remove dependencies from the project's `pyproject.toml` file.", "example": "uv remove {{package}}"}
,
  {"command": "uv-run", "description": "Run a command or script in the project environment.", "example": "uv run {{script.py}}"}
,
  {"command": "uv-self", "description": "Manage the `uv` executable itself.", "example": "uv self update"}
,
  {"command": "uv-sync", "description": "Update the project's environment to match the lockfile.", "example": "uv sync"}
,
  {"command": "uv-tool", "description": "Install and run commands provided by Python packages.", "example": "uv tool run {{command}}"}
,
  {"command": "uv-tree", "description": "Display project dependencies in a tree format.", "example": "uv tree"}
,
  {"command": "uv-venv", "description": "Create an isolated Python environment for installing packages.", "example": "uv venv"}
,
  {"command": "uv-version", "description": "Read or update a project's version.", "example": "uv version"}
,
  {"command": "vagrant-box", "description": "Manage Vagrant boxes (virtual machine images).", "example": "vagrant box list"}
,
  {"command": "vagrant-halt", "description": "Shuts down the running machine Vagrant is managing.", "example": "vagrant halt"}
,
  {"command": "vagrant", "description": "Manage lightweight, reproducible, and portable development environments.", "example": "vagrant init"}
,
  {"command": "vagrant-plugin", "description": "Manage Vagrant plugins.", "example": "vagrant plugin list"}
,
  {"command": "vagrant-validate", "description": "Check the validity of a Vagrantfile.", "example": "vagrant validate"}
,
  {"command": "valac", "description": "Vala code compiler.", "example": "valac {{path/to/file.vala}} --pkg {{gtk+-3.0}}"}
,
  {"command": "vala", "description": "Vala code runner.", "example": "vala {{path/to/file.vala}} --pkg {{gtk+-3.0}}"}
,
  {"command": "vale", "description": "Extensible style checker that supports multiple markup formats, such as Markdown and AsciiDoc.", "example": "vale {{path/to/file}}"}
,
  {"command": "valgrind", "description": "Wrapper for a set of expert tools for profiling, optimizing and debugging programs.", "example": "valgrind {{program}}"}
,
  {"command": "var-dump-server", "description": "Symfony dump server.", "example": "var-dump-server"}
,
  {"command": "varnishlog", "description": "Display Varnish logs.", "example": "varnishlog"}
,
  {"command": "vault", "description": "Interact with HashiCorp Vault.", "example": "vault init"}
,
  {"command": "vboxmanage-clonevm", "description": "Create a clone of an existing virtual machine (VM).", "example": "VBoxManage clonevm {{vm_name}}"}
,
  {"command": "vboxmanage-cloud", "description": "VirtualBox command-line interface for managing cloud instances and images.", "example": "VBoxManage cloud --provider={{provider_name}} --profile={{profile_name}} list instances --state={{running|terminated|paused}} --compartment-id={{compartment_id}}"}
,
  {"command": "vboxmanage-controlvm", "description": "Change the state and the settings of a currently running virtual machine.", "example": "VBoxManage controlvm {{uuid|vm_name}} pause"}
,
  {"command": "vboxmanage-createvm", "description": "Create a new virtual machine.", "example": "VBoxManage createvm --name {{vm_name}}"}
,
  {"command": "vboxmanage-export", "description": "Export virtual machines to a virtual appliance (ISO) or a cloud service.", "example": "VBoxManage export --output {{path/to/filename.ova}}"}
,
  {"command": "vboxmanage-extpack", "description": "Manage extension packs for Oracle VirtualBox.", "example": "VBoxManage extpack install {{path/to/file.vbox-extpack}}"}
,
  {"command": "vboxmanage-import", "description": "Import a previously exported virtual machine (VM).", "example": "VBoxManage import {{path/to/file.ovf}}"}
,
  {"command": "vboxmanage-list", "description": "List information about the Oracle VM VirtualBox software and associated service.", "example": "VBoxManage list vms"}
,
  {"command": "vboxmanage", "description": "Command-line interface to VirtualBox.", "example": "VBoxManage {{subcommand}}"}
,
  {"command": "vboxmanage-movevm", "description": "Move a virtual machine (VM) to a new location on the host system.", "example": "VBoxManage movevm {{vm_name}}"}
,
  {"command": "vboxmanage-registervm", "description": "Register a virtual machine (VM).", "example": "VBoxManage registervm {{path/to/filename.vbox}}"}
,
  {"command": "vboxmanage-showvminfo", "description": "Show information about registered virtual machine.", "example": "VBoxManage showvminfo {{vm_name|uuid}}"}
,
  {"command": "vboxmanage-startvm", "description": "Start a virtual machine.", "example": "VBoxManage startvm {{vm_name|uuid}}"}
,
  {"command": "vboxmanage-unregistervm", "description": "Unregister a virtual machine (VM).", "example": "VBoxManage unregistervm {{uuid|vm_name}}"}
,
  {"command": "vcluster", "description": "Create and manage lightweight virtual Kubernetes clusters in namespaces.", "example": "vcluster create {{vcluster_name}} {{[-n|--namespace]}} {{namespace}}"}
,
  {"command": "vcpkg", "description": "Package manager for C/C++ libraries.", "example": "vcpkg install curl"}
,
  {"command": "vcsh", "description": "Version Control System for the home directory using Git repositories.", "example": "vcsh init {{repository_name}}"}
,
  {"command": "vdir", "description": "Verbosely list directory contents.", "example": "vdir"}
,
  {"command": "vectorize-pixelart", "description": "Convert PNG pixel art graphics to SVG/EPS vector images.", "example": "vectorize-pixelart {{path/to/input.png}} {{path/to/output.svg|.eps}}"}
,
  {"command": "vegeta", "description": "A utility and a library for HTTP load testing.", "example": "echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}}"}
,
  {"command": "vela", "description": "Tools for the Vela pipeline.", "example": "vela add deployment --org {{organization}} --repo {{repository_name}} --target {{environment}} --ref {{branch|commit|refs/tags/git_tag}} --description \"{{deploy_description}}\""}
,
  {"command": "velero", "description": "Backup and migrate Kubernetes applications and their persistent volumes.", "example": "velero backup create {{backup_name}}"}
,
  {"command": "venv", "description": "Create lightweight virtual environments in python.", "example": "python -m venv {{path/to/virtual_environment}}"}
,
  {"command": "vercel", "description": "Deploy and manage your Vercel deployments.", "example": "vercel"}
,
  {"command": "verilator", "description": "Convert Verilog and SystemVerilog hardware description language (HDL) design into a C++ or SystemC model to be executed after compiling.", "example": "verilator --binary --build-jobs 0 -Wall {{path/to/source.v}}"}
,
  {"command": "vertical-bar", "description": "Pipe data between programs.", "example": "{{command}} | {{command}}"}
,
  {"command": "vf", "description": "VirtualFish is a fish shell tool for managing Python virtual environments.", "example": "vf new {{virtualenv_name}}"}
,
  {"command": "vgmstream_cli", "description": "Play a wide variety of audio formats used in video games and convert them into `wav`.", "example": "vgmstream_cli {{path/to/input.adc}} -o {{path/to/output.wav}}"}
,
  {"command": "vgrep", "description": "A user friendly pager for grep.", "example": "vgrep {{search_pattern}}"}
,
  {"command": "vhs", "description": "Generate terminal gifs from a tape file.", "example": "vhs new {{path/to/file.tape}}"}
,
  {"command": "vidir", "description": "Edit directories in a text editor.", "example": "vidir {{path/to/directory1 path/to/directory2 ...}}"}
,
  {"command": "view", "description": "A read-only version of `vim`.", "example": "view {{path/to/file}}"}
,
  {"command": "vifm", "description": "VI File Manager is a TUI file manager.", "example": "vifm ."}
,
  {"command": "vi", "description": "This command is an alias of `vim`.", "example": "tldr vim"}
,
  {"command": "vimdiff", "description": "Open up two or more files in vim and show the differences between them.", "example": "vimdiff {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "vim", "description": "Vim (Vi IMproved), a command-line text editor, provides several modes for different kinds of text manipulation.", "example": "vim {{path/to/file}}"}
,
  {"command": "vimtutor", "description": "Vim tutor, teaching the basic vim commands.", "example": "vimtutor {{language}}"}
,
  {"command": "vinmap", "description": "A multithreaded Nmap scanner that splits IP ranges into chunks, performs parallel scans, and merges XML or JSON results.", "example": "vinmap {{[-ip|--ip_range]}} {{192.168.1.0/24}}"}
,
  {"command": "vipe", "description": "Run a text editor in the middle of a UNIX pipeline.", "example": "{{command1}} | vipe | {{command2}}"}
,
  {"command": "virsh-connect", "description": "Connect to a virtual machine hypervisor.", "example": "virsh connect"}
,
  {"command": "virsh-domblklist", "description": "List information about block devices associated with a virtual machine.", "example": "virsh domblklist --domain {{vm_name}}"}
,
  {"command": "virsh-help", "description": "Display information about `virsh` commands or command groups.", "example": "virsh help"}
,
  {"command": "virsh-list", "description": "List the ID, name, and state of virtual machines.", "example": "virsh list"}
,
  {"command": "virsh", "description": "Manage `virsh` guest domains. (Note: `guest_id` can be the ID, name or UUID of the guest).", "example": "virsh connect {{qemu:///system}}"}
,
  {"command": "virsh-pool-autostart", "description": "Enable or disable autostart for a virtual machine storage pool.", "example": "virsh pool-autostart --pool {{name|uuid}}"}
,
  {"command": "virsh-pool-build", "description": "Build the underlying storage system for a virtual machine storage pool as defined in it's configuration file in `/etc/libvirt/storage`.", "example": "virsh pool-build --pool {{name|uuid}}"}
,
  {"command": "virsh-pool-define-as", "description": "Create a configuration file in `/etc/libvirt/storage` for a persistent virtual machine storage pool from the provided arguments.", "example": "virsh pool-define-as --name {{pool_name}} --type {{dir}} --target {{/var/vms}}"}
,
  {"command": "virsh-pool-delete", "description": "Delete the underlying storage system of an inactive virtual machine storage pool.", "example": "virsh pool-delete --pool {{name|uuid}}"}
,
  {"command": "virsh-pool-destroy", "description": "Stop an active virtual machine storage pool.", "example": "virsh pool-destroy --pool {{name|uuid}}"}
,
  {"command": "virsh-pool-info", "description": "List information about a virtual machine storage pool.", "example": "virsh pool-info --pool {{name|uuid}}"}
,
  {"command": "virsh-pool-list", "description": "List information about virtual machine storage pools.", "example": "virsh pool-list"}
,
  {"command": "virsh-pool-start", "description": "Start a previously configured but inactive virtual machine storage pool.", "example": "virsh pool-start --pool {{name|uuid}} --build"}
,
  {"command": "virsh-pool-undefine", "description": "Delete the configuration file in `/etc/libvirt/storage` for a stopped virtual machine storage pool.", "example": "virsh pool-undefine --pool {{name|uuid}}"}
,
  {"command": "virsh-undefine", "description": "Delete a virtual machine.", "example": "virsh undefine --domain {{vm_name}}"}
,
  {"command": "virt-clone", "description": "Clone a libvirt virtual machine.", "example": "virt-clone {{[-o|--original]}} {{vm_name}} --auto-clone"}
,
  {"command": "virt-install", "description": "Create virtual machines with libvirt and begin OS installation.", "example": "virt-install {{[-n|--name]}} {{vm_name}} --memory {{1024}} --disk path={{path/to/image.qcow2}},size={{12}} {{[-c|--cdrom]}} {{path/to/debian.iso}}"}
,
  {"command": "virt-qemu-run", "description": "Experimental tool to run a QEMU Guest VM independent of `libvirtd`.", "example": "virt-qemu-run {{path/to/guest.xml}}"}
,
  {"command": "virt-sparsify", "description": "Make virtual machine drive images thin-provisioned.", "example": "virt-sparsify --compress {{path/to/image.qcow2}} {{path/to/image_new.qcow2}}"}
,
  {"command": "virt-sysprep", "description": "Reset, unconfigure, or customize a virtual machine image.", "example": "virt-sysprep --list-operations"}
,
  {"command": "virtualenv", "description": "Create virtual isolated Python environments.", "example": "virtualenv {{path/to/venv}}"}
,
  {"command": "virtualenvwrapper", "description": "Group of simple wrapper commands for Python's `virtualenv` tool.", "example": "mkvirtualenv {{virtualenv_name}}"}
,
  {"command": "visudo", "description": "Safely edit the sudoers file.", "example": "sudo visudo"}
,
  {"command": "vite", "description": "Create a Vite project.", "example": "npm create vite@latest my-react-app --template react-ts"}
,
  {"command": "vitest", "description": "Fast, modern testing framework built for Vite, offering seamless integration, TypeScript support, and a Jest-compatible API for unit, integration, and snapshot testing.", "example": "vitest run"}
,
  {"command": "viu", "description": "View images on the terminal.", "example": "viu {{path/to/file}}"}
,
  {"command": "vivaldi", "description": "This command is an alias of `chromium`.", "example": "tldr chromium"}
,
  {"command": "vladimyr", "description": "Dario Vladović's personal CLI.", "example": "vladimyr"}
,
  {"command": "vlc", "description": "Cross-platform multimedia player.", "example": "vlc {{path/to/file}}"}
,
  {"command": "v", "description": "A tool for managing V source code.", "example": "v {{path/to/file.v}}"}
,
  {"command": "vmtouch", "description": "Manage the filesystem cache.", "example": "vmtouch {{path/to/file}}"}
,
  {"command": "volta", "description": "A JavaScript Tool Manager that installs Node.js runtimes, npm and Yarn package managers, or any binaries from npm.", "example": "volta list"}
,
  {"command": "vsce", "description": "Extension manager for Visual Studio Code.", "example": "vsce list {{publisher}}"}
,
  {"command": "vt", "description": "Interface for VirusTotal.", "example": "vt scan file {{path/to/file}}"}
,
  {"command": "vue-build", "description": "A subcommand provided by `@vue/cli` and `@vue/cli-service-global` that enables quick prototyping.", "example": "vue build {{filename}}"}
,
  {"command": "vue-init", "description": "Legacy project initialization subcommand of the Vue.js framework.", "example": "vue init {{webpack|webpack-simple|browserify|browserify-simple|simple}} {{project_name}}"}
,
  {"command": "vue", "description": "Multi-purpose CLI for Vue.js.", "example": "vue create {{project_name}}"}
,
  {"command": "vue-serve", "description": "A subcommand provided by `@vue/cli` and `@vue/cli-service-global` that enables quick prototyping.", "example": "vue serve {{filename}}"}
,
  {"command": "vulkaninfo", "description": "Print system Vulkan information.", "example": "vulkaninfo"}
,
  {"command": "w3m", "description": "A text-based web browser.", "example": "w3m {{https://example.com}}"}
,
  {"command": "wafw00f", "description": "Identify and fingerprint Web Application Firewall (WAF) products protecting a website.", "example": "wafw00f {{https://www.example.com}}"}
,
  {"command": "waifu2x-ncnn-vulkan", "description": "Image upscaler for manga/anime-style images using NCNN neural network framework.", "example": "waifu2x-ncnn-vulkan -i {{path/to/input_file}} -o {{path/to/output_file}}"}
,
  {"command": "wait", "description": "Wait for a process to complete before proceeding.", "example": "wait {{pid}}"}
,
  {"command": "waitress-serve", "description": "Pure Python WSGI HTTP Server.", "example": "waitress-serve {{import.path:wsgi_func}}"}
,
  {"command": "wakeonlan", "description": "Send packets to wake-on-LAN (WOL) enabled PCs.", "example": "wakeonlan {{01:02:03:04:05:06}}"}
,
  {"command": "wal", "description": "Create color schemes based on the dominant colors of a wallpaper.", "example": "wal --preview {{image.png}}"}
,
  {"command": "wapm", "description": "The WebAssembly package manager.", "example": "wapm init"}
,
  {"command": "warp-cli", "description": "Connect, disconnect and switch modes of a connection to Cloudflare's WARP service.", "example": "warp-cli registration new"}
,
  {"command": "warp-diag", "description": "Diagnostic and feedback tool for Cloudflare's WARP service.", "example": "warp-diag"}
,
  {"command": "wasm2c", "description": "Convert a file from the WebAssembly binary format to a C source file and header.", "example": "wasm2c {{file.wasm}}"}
,
  {"command": "wasm2wat", "description": "Convert a file from the WebAssembly binary format to the text format.", "example": "wasm2wat {{file.wasm}}"}
,
  {"command": "wasm-objdump", "description": "Display information from WebAssembly binaries.", "example": "wasm-objdump {{[-h|--headers]}} {{file.wasm}}"}
,
  {"command": "wasm-opt", "description": "Optimize WebAssembly binary files.", "example": "wasm-opt -O {{input.wasm}} {{[-o|--output]}} {{output.wasm}}"}
,
  {"command": "wat2wasm", "description": "Convert a file from the WebAssembly text format to the binary format.", "example": "wat2wasm {{file.wat}}"}
,
  {"command": "watchexec", "description": "Run arbitrary commands when files change.", "example": "watchexec {{ls -la}}"}
,
  {"command": "watchman", "description": "A service that watches files, and triggers actions when changes occur.", "example": "watchman watch-project {{path/to/directory}}"}
,
  {"command": "watch", "description": "Execute a program periodically and monitor the output in full-screen mode.", "example": "watch {{command}}"}
,
  {"command": "watson", "description": "A wonderful CLI to track your time.", "example": "watson start {{project}}"}
,
  {"command": "waybar", "description": "Highly customizable Wayland bar for Sway and Wlroots based compositors.", "example": "waybar"}
,
  {"command": "waymore", "description": "Fetch URLs of a domain from Wayback Machine, Common Crawl, Alien Vault OTX, URLScan, and VirusTotal.", "example": "waymore {{[-i|--input]}} {{example.com}}"}
,
  {"command": "wbmptopbm", "description": "Convert a wireless bitmap file to a PBM image.", "example": "wbmptopbm {{path/to/input_file.wbpm}} > {{path/to/output_file.pbm}}"}
,
  {"command": "wc", "description": "Count lines, words, and bytes.", "example": "wc {{[-l|--lines]}} {{path/to/file}}"}
,
  {"command": "wcurl", "description": "A simple wrapper around `curl` to easily download files.", "example": "wcurl {{https://example.com/foo}}"}
,
  {"command": "wdiff", "description": "Display word differences between text files.", "example": "wdiff {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "weasyprint", "description": "Render HTML to PDF or PNG.", "example": "weasyprint {{path/to/input.html}} {{path/to/output.pdf}}"}
,
  {"command": "web-ext", "description": "Manage web extension development.", "example": "web-ext run"}
,
  {"command": "webpack", "description": "Bundle a web project's js files and other assets into a single output file.", "example": "webpack {{app.js}} {{bundle.js}}"}
,
  {"command": "webpmux", "description": "Create WebP animations.", "example": "webpmux -frame {{path/to/frame1.webp}} +{{500}} -frame {{path/to/frame2.webp}} +{{500}} -loop {{0}} -o {{path/to/output.webp}}"}
,
  {"command": "webstorm", "description": "The JetBrains JavaScript IDE.", "example": "webstorm"}
,
  {"command": "webtorrent", "description": "The interface for WebTorrent.", "example": "webtorrent download \"{{torrent_id}}\""}
,
  {"command": "weechat", "description": "Internet relay chat client with various features.", "example": "weechat"}
,
  {"command": "wezterm", "description": "Wez's Terminal Emulator - a powerful cross-platform terminal emulator and multiplexer.", "example": "wezterm"}
,
  {"command": "wfuzz", "description": "A web application bruteforcer.", "example": "wfuzz -w {{path/to/file}} -p {{127.0.0.1:8080:HTTP}} {{http://example.com/FUZZ}}"}
,
  {"command": "wget2", "description": "An improved version of `wget` for downloading files from the web.", "example": "wget2 {{https://example.com/foo}}"}
,
  {"command": "wget", "description": "Download files from the Web.", "example": "wget {{https://example.com/foo}}"}
,
  {"command": "whatwaf", "description": "Detect and bypass web application firewalls and protection systems.", "example": "whatwaf {{[-u|--url]}} {{https://example.com}} --verbose"}
,
  {"command": "whatweb", "description": "Next-generation web scanner.", "example": "whatweb {{website1 website2 ...}}"}
,
  {"command": "where", "description": "Reports all known instances of a command.", "example": "where {{command}}"}
,
  {"command": "which", "description": "Locate a program in the user's path.", "example": "which {{executable}}"}
,
  {"command": "while", "description": "Simple shell loop that repeats while the return value remains zero.", "example": "while read line; do echo \"$line\"; done"}
,
  {"command": "whisper", "description": "Convert audio files to `txt`, `vtt`, `srt`, `tsv` and `json`.", "example": "whisper {{path/to/audio.mp3}}"}
,
  {"command": "whoami", "description": "Print the username associated with the current effective user ID.", "example": "whoami"}
,
  {"command": "whois", "description": "Client for the WHOIS (RFC 3912) protocol.", "example": "whois {{example.com}}"}
,
  {"command": "who", "description": "Display who is logged in and related data (processes, boot time).", "example": "who"}
,
  {"command": "wiggle", "description": "A patch application tool resolving conflicts in patches that `patch` cannot handle.", "example": "wiggle {{path/to/my_patch.patch}}"}
,
  {"command": "wikiman", "description": "Offline search engine for documentation.", "example": "wikiman {{search_term}}"}
,
  {"command": "wikit", "description": "Easily get Wikipedia summaries.", "example": "wikit {{topic}}"}
,
  {"command": "winicontopam", "description": "Convert a Windows ICO file to a PAM file.", "example": "winicontopam {{path/to/input_file.ico}} > {{path/to/output.pam}}"}
,
  {"command": "winicontoppm", "description": "This command has been superseded by `winicontopam`.", "example": "tldr winicontopam"}
,
  {"command": "wipeclean", "description": "Clear the terminal screen using an animated wiper.", "example": "wipeclean"}
,
  {"command": "wkhtmltopdf", "description": "Convert HTML documents or web pages into PDF files.", "example": "wkhtmltopdf {{input.html}} {{output.pdf}}"}
,
  {"command": "wlsunset", "description": "Adjust the color temperature in Wayland compositors depending on the sunset/sunrise times.", "example": "wlsunset -l {{latitude}} -L {{longitude}}"}
,
  {"command": "w", "description": "Display who is logged in and their processes.", "example": "w"}
,
  {"command": "wondershaper", "description": "Allows the user to limit the bandwidth of network adapters.", "example": "wondershaper -s -a {{adapter_name}}"}
,
  {"command": "wordgrinder", "description": "Word processor.", "example": "wordgrinder"}
,
  {"command": "wormhole", "description": "Get things from one computer to another, safely.", "example": "wormhole send {{path/to/file}}"}
,
  {"command": "wpaclean", "description": "Clean capture files to get only the 4-way handshake and a beacon.", "example": "wpaclean {{path/to/result.cap}} {{path/to/capture.cap}}"}
,
  {"command": "wpa_supplicant", "description": "Manage protected wireless networks.", "example": "wpa_supplicant -i {{interface}} -c {{path/to/wpa_supplicant_conf.conf}}"}
,
  {"command": "wp", "description": "The official interface to manage WordPress instances.", "example": "wp --info"}
,
  {"command": "wpm", "description": "Typeracer-like console app for measuring your WPM.", "example": "wpm"}
,
  {"command": "wpscan", "description": "WordPress vulnerability scanner.", "example": "wpscan --update"}
,
  {"command": "wrangler", "description": "Cloudflare Workers tool.", "example": "wrangler init {{project_name}}"}
,
  {"command": "write", "description": "Write a message on the terminal of a specified logged in user (`<Ctrl c>` to stop writing messages).", "example": "write {{username}} {{terminal_id}}"}
,
  {"command": "wrk", "description": "HTTP benchmarking tool.", "example": "wrk {{[-t|--threads]}} {{12}} {{[-c|--connections]}} {{400}} {{[-d|--duration]}} {{30s}} \"{{http://127.0.0.1:8080/index.html}}\""}
,
  {"command": "wuzz", "description": "Interactively inspect HTTP requests and responses.", "example": "wuzz"}
,
  {"command": "x11docker", "description": "Securely run GUI applications and desktop UIs in Docker containers.", "example": "x11docker {{[-p|--pulseaudio]}} --share {{$HOME/Videos}} {{jess/vlc}}"}
,
  {"command": "x8", "description": "A hidden parameters discovery suite for identifying vulnerable or interesting web parameters.", "example": "x8 {{[-u|--url]}} {{https://example.com/}} {{[-w|--wordlist]}} {{path/to/wordlist.txt}}"}
,
  {"command": "xargs", "description": "Execute a command with piped arguments coming from another command, a file, etc.", "example": "{{arguments_source}} | xargs {{command}}"}
,
  {"command": "xar", "description": "Manage .xar archives.", "example": "xar -cf {{archive.xar}} {{path/to/directory}}"}
,
  {"command": "xbmtopbm", "description": "Convert an X11 or X10 bitmap to a PBM image.", "example": "xbmtopbm {{path/to/input_file.xbm}} > {{path/to/output_file.pbm}}"}
,
  {"command": "xcaddy", "description": "The custom build tool for the Caddy Web Server.", "example": "xcaddy build"}
,
  {"command": "xcv", "description": "Cut, copy, and paste in the command-line.", "example": "xcv x {{input_file}}"}
,
  {"command": "xdelta", "description": "Delta encoding utility.", "example": "xdelta -d -s {{path/to/input_file}} {{path/to/delta_file.xdelta}} {{path/to/output_file}}"}
,
  {"command": "xe", "description": "Execute a command once for each line piped from another command or file.", "example": "{{arguments_source}} | xe {{command}}"}
,
  {"command": "xephyr", "description": "A nested X server that runs as an X application.", "example": "Xephyr -br -ac -noreset -screen {{800x600}} {{:2}}"}
,
  {"command": "xetex", "description": "Compile a PDF document from XeTeX source files.", "example": "xetex {{source.tex}}"}
,
  {"command": "xev", "description": "Print contents of X events.", "example": "xev"}
,
  {"command": "xgettext", "description": "Extract gettext strings from code files.", "example": "xgettext {{path/to/input_file}}"}
,
  {"command": "xh", "description": "Friendly and fast tool for sending HTTP requests.", "example": "xh {{https://postman-echo.com/get}}"}
,
  {"command": "xidel", "description": "Download and extract data from HTML/XML pages as well as JSON APIs.", "example": "xidel {{https://www.google.com/search?q=test}} {{[-e|--extract]}} \"//a/extract(@href, 'url[?]q=([^&]+)&', 1)[. != '']\""}
,
  {"command": "ximtoppm", "description": "Convert a XIM file to a PPM image.", "example": "ximtoppm {{path/to/input_file.xim}} > {{path/to/output_file.ppm}}"}
,
  {"command": "xkcdpass", "description": "A flexible and scriptable password generator which generates strong passphrases.", "example": "xkcdpass"}
,
  {"command": "xkill", "description": "Kill a window interactively in a graphical session.", "example": "xkill"}
,
  {"command": "xlsclients", "description": "List client applications running on an X11 display.", "example": "xlsclients"}
,
  {"command": "xmake", "description": "A cross-platform C & C++ build utility based on Lua.", "example": "xmake create {{[-l|--language]}} {{[c|clean]}} {{[-P|--project]}} {{project_name}}"}
,
  {"command": "xml-c14n", "description": "This command is an alias of `xml canonic`.", "example": "tldr xml canonic"}
,
  {"command": "xml-canonic", "description": "Make XML documents canonical.", "example": "xml {{[c14n|canonic]}} {{path/to/input.xml|URI}} > {{path/to/output.xml}}"}
,
  {"command": "xml-depyx", "description": "Convert a PYX (ESIS - ISO 8879) document to XML format.", "example": "xml {{[p2x|depyx]}} {{path/to/input.pyx|URI}} > {{path/to/output.xml}}"}
,
  {"command": "xml-edit", "description": "Edit an XML document.", "example": "xml {{[ed|edit]}} {{[-d|--delete]}} \"{{XPATH1}}\" {{path/to/input.xml|URI}}"}
,
  {"command": "xml-elements", "description": "Extract elements and display the structure of an XML document.", "example": "xml {{[el|elements]}} {{path/to/input.xml|URI}} > {{path/to/elements.xpath}}"}
,
  {"command": "xml-escape", "description": "Escape special XML characters, e.g. `<a1>` → `&lt;a1&gt;`.", "example": "xml {{[esc|escape]}} \"{{<a1>}}\""}
,
  {"command": "xml-format", "description": "Format an XML document.", "example": "xml {{[fo|format]}} {{[-t|--indent-tab]}} {{path/to/input.xml|URI}} > {{path/to/output.xml}}"}
,
  {"command": "xmllint", "description": "XML parser and linter that supports XPath, a syntax for navigating XML trees.", "example": "xmllint --xpath \"//{{foo}}\" {{source_file.xml}}"}
,
  {"command": "xml-list", "description": "List a directory's contents (like `ls`) in XML format.", "example": "xml {{[ls|list]}} > {{path/to/dir_list.xml}}"}
,
  {"command": "xml", "description": "XMLStarlet Toolkit: query, edit, check, convert and transform XML documents.", "example": "xml --help"}
,
  {"command": "xml-p2x", "description": "This command is an alias of `xml depyx`.", "example": "tldr xml depyx"}
,
  {"command": "xml-pyx", "description": "Convert an XML document to PYX (ESIS - ISO 8879) format.", "example": "xml pyx {{path/to/input.xml|URI}} > {{path/to/output.pyx}}"}
,
  {"command": "xml-select", "description": "Select from XML documents using XPATHs.", "example": "xml {{[sel|select]}} {{[-t|--template]}} {{[-m|--match]}} \"{{XPATH1}}\" {{[-v|--value-of]}} \"{{XPATH2}}\" {{path/to/input.xml|URI}}"}
,
  {"command": "xmlstarlet", "description": "A XML/XSLT toolkit.", "example": "xmlstarlet format {{path/to/file.xml}}"}
,
  {"command": "xmlto", "description": "Apply an XSL stylesheet to an XML document.", "example": "xmlto pdf {{document.xml}}"}
,
  {"command": "xml-transform", "description": "Transform XML documents using XSLT.", "example": "xml {{[tr|transform]}} {{path/to/stylesheet.xsl}} -p \"{{Count='count(/xml/table/rec)'}}\" -s {{Text=\"Count=\"}} {{path/to/input.xml|URI}}"}
,
  {"command": "xml-unescape", "description": "Unescape special XML characters, e.g. `&lt;a1&gt;` → `<a1>`.", "example": "xml {{[unesc|unescape]}} \"{{&lt;a1&gt;}}\""}
,
  {"command": "xml-validate", "description": "Validate XML documents.", "example": "xml {{[val|validate]}} {{path/to/input1.xml|URI1 path/to/input2.xml|URI2 ...}}"}
,
  {"command": "xml-xmln", "description": "This command is an alias of `xml pyx`.", "example": "tldr xml pyx"}
,
  {"command": "xo", "description": "A pluggable, zero-configuration linting utility for JavaScript.", "example": "xo"}
,
  {"command": "xonsh", "description": "Python-powered, cross-platform, Unix-gazing shell.", "example": "xonsh"}
,
  {"command": "xpdf", "description": "Portable Document Format (PDF) file viewer.", "example": "xpdf {{path/to/file.pdf}}"}
,
  {"command": "xplr", "description": "Terminal-based file system explorer.", "example": "xplr {{path/to/directory}}"}
,
  {"command": "xpmtoppm", "description": "Convert an X11 pixmap to a PPM image.", "example": "xpmtoppm {{path/to/input_file.xpm}} > {{path/to/output_file.ppm}}"}
,
  {"command": "xprop", "description": "Display window and font properties in an X server.", "example": "xprop -root WM_NAME"}
,
  {"command": "xsp", "description": "Mono ASP.NET Web Server.", "example": "xsp"}
,
  {"command": "xsv", "description": "A CSV toolkit written in Rust.", "example": "xsv headers {{path/to/file.csv}}"}
,
  {"command": "xteddy", "description": "A cuddly teddy bear for your X Windows desktop.", "example": "xteddy"}
,
  {"command": "xvminitoppm", "description": "Convert an XV thumbnail picture to PPM.", "example": "xvminitoppm {{path/to/input_file}} > {{path/to/output_file.ppm}}"}
,
  {"command": "xwdtopnm", "description": "Convert an X11 or X10 window dump file to PNM.", "example": "xwdtopnm {{path/to/input_file.xwd}} > {{path/to/output_file.pnm}}"}
,
  {"command": "xwininfo", "description": "Display information about windows.", "example": "xwininfo"}
,
  {"command": "xxd", "description": "Create a hexadecimal representation (hexdump) from a binary file, or vice-versa.", "example": "xxd {{input_file}}"}
,
  {"command": "xxh", "description": "Bring your shell with all of your customizations through SSH sessions.", "example": "xxh \"{{host}}\""}
,
  {"command": "x_x", "description": "View Excel and CSV files.", "example": "x_x {{file.xlsx|file.csv}}"}
,
  {"command": "xzcat", "description": "This command is an alias of `xz --decompress --stdout`.", "example": "tldr xz"}
,
  {"command": "xzcmp", "description": "Invokes `cmp` on files compressed with `xz`, `lzma`, `gzip`, `bzip2`, `lzop`, or `zstd`.", "example": "xzcmp {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "xzdiff", "description": "Invokes `diff` on files compressed with `xz`, `lzma`, `gzip`, `bzip2`, `lzop`, or `zstd`.", "example": "xzdiff {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "xzegrep", "description": "This command is an alias of `xzgrep --extended-regexp`.", "example": "tldr xzgrep"}
,
  {"command": "xzfgrep", "description": "This command is an alias of `xzgrep --fixed-strings`.", "example": "tldr xzgrep"}
,
  {"command": "xzgrep", "description": "Search files possibly compressed with `xz`, `lzma`, `gzip`, `bzip2`, `lzop`, or `zstd` using regular expressions.", "example": "xzgrep \"{{search_pattern}}\" {{path/to/file}}"}
,
  {"command": "xzless", "description": "Display text from `xz` and `lzma` compressed files.", "example": "xzless {{path/to/file}}"}
,
  {"command": "xz", "description": "Compress or decompress XZ and LZMA files.", "example": "xz {{path/to/file}}"}
,
  {"command": "xzmore", "description": "Display text from `xz` or `lzma` compressed files.", "example": "xzmore {{path/to/file}}"}
,
  {"command": "yacas", "description": "Yet Another Computer Algebra System.", "example": "yacas"}
,
  {"command": "yacc", "description": "Generate an LALR parser (in C) with a formal grammar specification file.", "example": "yacc -d {{path/to/grammar_file.y}}"}
,
  {"command": "yadm-alt", "description": "Create symbolic links and process templates for any managed files.", "example": "yadm alt"}
,
  {"command": "yadm-bootstrap", "description": "Execute Yadm's bootstrap file.", "example": "yadm bootstrap"}
,
  {"command": "yadm-clone", "description": "Works just like `git clone`. In addition you can pass extra flags to configure your repository.", "example": "yadm clone {{remote_repository_location}}"}
,
  {"command": "yadm-config", "description": "Pass options to `yadm`'s config file. Change the `.config` of the repository managed by `yadm`.", "example": "yadm config {{key.inner-key}} {{value}}"}
,
  {"command": "yadm-decrypt", "description": "Decrypt files that were encrypted by `yadm`.", "example": "yadm decrypt"}
,
  {"command": "yadm-encrypt", "description": "Encrypt files listed in the designated encrypt file.", "example": "yadm encrypt"}
,
  {"command": "yadm-enter", "description": "Run a sub-shell with all Git variables set. This sub-shell can be used to easily interact with the local `yadm` repository using Git commands.", "example": "yadm enter"}
,
  {"command": "yadm-gitconfig", "description": "Pass options to `git config`. Change the `.gitconfig` of the repository managed by `yadm`.", "example": "yadm gitconfig {{key.inner-key}} {{value}}"}
,
  {"command": "yadm-git-crypt", "description": "Git Crypt enables transparent encryption and decryption of files in a git repository.", "example": "yadm git-crypt init"}
,
  {"command": "yadm-init", "description": "Initialize a new, empty repository for tracking dotfiles.", "example": "yadm init"}
,
  {"command": "yadm-introspect", "description": "Look at data that is managed by `yadm`.", "example": "yadm introspect commands"}
,
  {"command": "yadm-list", "description": "Print a list of files managed by `yadm`.", "example": "yadm list"}
,
  {"command": "yadm", "description": "A dotfiles manager that works by using `git`.", "example": "yadm --yadm-dir"}
,
  {"command": "yadm-perms", "description": "Update permissions.", "example": "yadm perms"}
,
  {"command": "yadm-transcrypt", "description": "If `transcrypt` is installed, this command allows you to pass options directly to `transcrypt`.", "example": "yadm transcrypt --cipher={{cipher}}"}
,
  {"command": "yadm-upgrade", "description": "Upgrade `yadm` to the latest version.", "example": "yadm upgrade"}
,
  {"command": "ya", "description": "Manage Yazi packages and plugins.", "example": "ya pack {{[-a|--all]}} {{package}}"}
,
  {"command": "yank", "description": "Read input from `stdin` and display a selection interface that allows a field to be selected and copied to the clipboard.", "example": "{{sudo dmesg}} | yank"}
,
  {"command": "yapf", "description": "Python style guide checker.", "example": "yapf {{[-d|--diff]}} {{path/to/file}}"}
,
  {"command": "yard", "description": "Documentation tool for Ruby.", "example": "yard"}
,
  {"command": "yarn", "description": "JavaScript and Node.js package manager alternative.", "example": "yarn global add {{module_name}}"}
,
  {"command": "yarn-why", "description": "Identifies why a Yarn package has been installed.", "example": "yarn-why {{package}}"}
,
  {"command": "yazi", "description": "Blazing fast terminal file manager written in Rust.", "example": "yazi"}
,
  {"command": "ybacklight", "description": "Manage screen backlight brightness. See also `xbacklight`.", "example": "ybacklight Sc/Sm"}
,
  {"command": "ybmtopbm", "description": "Convert a Bennet Yee \"face\" file to PBM.", "example": "ybmtopbm {{path/to/input_file.ybm}} > {{path/to/output_file.pbm}}"}
,
  {"command": "yes", "description": "Output something repeatedly.", "example": "yes {{message}}"}
,
  {"command": "yesod", "description": "Helper tool for Yesod, a Haskell-based web framework.", "example": "stack new {{my-project}} {{yesod-sqlite}}"}
,
  {"command": "ykinfo", "description": "Get basic information from a YubiKey.", "example": "ykinfo -a"}
,
  {"command": "ykman-config", "description": "Enable or disable YubiKey applications.", "example": "ykman config {{usb|nfc}} {{[-e|--enable]}} {{otp|u2f|fido2|oath|piv|openpgp|hsmauth}}"}
,
  {"command": "ykman-fido", "description": "Manage YubiKey FIDO applications.", "example": "ykman fido info"}
,
  {"command": "ykman", "description": "YubiKey Manager - configure YubiKeys.", "example": "ykman info"}
,
  {"command": "ykman-oath", "description": "Manage the OATH YubiKey application.", "example": "ykman oath info"}
,
  {"command": "ykman-openpgp", "description": "Manage the OpenPGP YubiKey application.", "example": "ykman openpgp info"}
,
  {"command": "yolo", "description": "Train, validate or infer models on various tasks and versions.", "example": "yolo task=init"}
,
  {"command": "you-get", "description": "Download media contents (videos, audios, images) from the Web.", "example": "you-get --info {{https://example.com/video?id=value}}"}
,
  {"command": "youtube-dl", "description": "Download videos from YouTube and other websites.", "example": "youtube-dl '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'"}
,
  {"command": "youtube-viewer", "description": "Search and play videos from YouTube.", "example": "youtube-viewer {{search_term}}"}
,
  {"command": "yq", "description": "A lightweight and portable YAML processor.", "example": "yq eval {{path/to/file.yaml}}"}
,
  {"command": "yt-dlp", "description": "A youtube-dl fork with additional features and fixes.", "example": "yt-dlp \"{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}\""}
,
  {"command": "yuvsplittoppm", "description": "Convert three subsampled Abekas YUV files to one PPM image.", "example": "yuvsplittoppm {{basename}} {{width}} {{height}} > {{path/to/output_file.ppm}}"}
,
  {"command": "yuvtoppm", "description": "Convert Abekas YUV bytes to PPM.", "example": "yuvtoppm {{width}} {{height}} {{path/to/input_file.yuv}} > {{path/to/output_file.ppm}}"}
,
  {"command": "yuy2topam", "description": "Convert YUY2 bytes to PAM.", "example": "yuy2topam {{[-w|-width]}} {{value}} {{[-h|-height]}} {{value}} {{path/to/file.yuy2}} > {{path/to/file.pam}}"}
,
  {"command": "zapier-analytics", "description": "Show the status of the analytics that are collected. It is also used to change what is collected.", "example": "zapier analytics"}
,
  {"command": "zapier-build", "description": "Build a pushable `zip` of a Zapier integration.", "example": "zapier build"}
,
  {"command": "zapier-convert", "description": "Convert a Visual Builder integration to a CLI integration.", "example": "zapier convert {{integration_id}} {{path/to/directory}}"}
,
  {"command": "zapier-init", "description": "Initialize a new Zapier integration.", "example": "zapier init {{path/to/directory}}"}
,
  {"command": "zapier", "description": "Create, automate, and manage zapier integrations.", "example": "zapier login"}
,
  {"command": "zapier-push", "description": "Build and upload a Zapier integration.", "example": "zapier push"}
,
  {"command": "zapier-scaffold", "description": "Add a starting trigger, create, search, or resource to an integration.", "example": "zapier scaffold {{trigger|search|create|resource}} {{noun}}"}
,
  {"command": "zbarimg", "description": "Scan and decode bar codes from image file(s).", "example": "zbarimg {{image_file}}"}
,
  {"command": "zcat", "description": "Print data from `gzip` compressed files to `stdout`.", "example": "zcat {{path/to/file.txt.gz}}"}
,
  {"command": "zcmp", "description": "Compare compressed files.", "example": "zcmp {{path/to/file1.gz}} {{path/to/file2.gz}}"}
,
  {"command": "zdb", "description": "ZFS debugger.", "example": "zdb"}
,
  {"command": "zdiff", "description": "Invoke `diff` on `gzip` archives.", "example": "zdiff {{path/to/file1.gz}} {{path/to/file2.gz}}"}
,
  {"command": "zeek", "description": "Passive network traffic analyzer.", "example": "sudo zeek --iface {{interface}}"}
,
  {"command": "zegrep", "description": "Find extended regular expression patterns in compressed files using `egrep`.", "example": "zegrep \"{{search_pattern}}\" {{path/to/file}}"}
,
  {"command": "zeisstopnm", "description": "Convert a Zeiss confocal file to Netbpm format.", "example": "zeisstopnm {{path/to/file}}"}
,
  {"command": "zek", "description": "Generate a Go struct from XML.", "example": "cat {{path/to/input.xml}} | zek"}
,
  {"command": "zellij", "description": "Terminal multiplexer with batteries included.", "example": "zellij {{[-s|--session]}} {{name}}"}
,
  {"command": "zfgrep", "description": "Matches fixed strings in possibly compressed files.", "example": "zfgrep {{search_string}} {{path/to/file}}"}
,
  {"command": "zfs", "description": "Manage ZFS filesystems.", "example": "zfs list"}
,
  {"command": "zgrep", "description": "Grep text patterns from files within compressed file (equivalent to `grep -Z`).", "example": "zgrep {{pattern}} {{path/to/compressed/file}}"}
,
  {"command": "zig", "description": "The Zig compiler and toolchain.", "example": "zig build"}
,
  {"command": "zint", "description": "Generate barcodes and QR codes.", "example": "zint --data \"{{UTF-8 data}}\" --output {{path/to/file}}"}
,
  {"command": "zip2john", "description": "Extract password hashes from Zip archives for use with John the Ripper password cracker.", "example": "zip2john {{path/to/file.zip}}"}
,
  {"command": "zipalign", "description": "Zip archive alignment tool.", "example": "zipalign {{4}} {{path/to/input.zip}} {{path/to/output.zip}}"}
,
  {"command": "zipcloak", "description": "Encrypt the contents within a Zip archive.", "example": "zipcloak {{path/to/archive.zip}}"}
,
  {"command": "zipgrep", "description": "Find patterns in files in a Zip archive using extended regular expression (supports `?`, `+`, `{}`, `()` and `|`).", "example": "zipgrep \"{{search_pattern}}\" {{path/to/file.zip}}"}
,
  {"command": "zipinfo", "description": "List detailed information about the contents of a Zip file.", "example": "zipinfo {{path/to/archive.zip}}"}
,
  {"command": "zip", "description": "Package and compress (archive) files into a Zip archive.", "example": "zip {{[-r|--recurse-paths]}} {{path/to/compressed.zip}} {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"}
,
  {"command": "zipnote", "description": "View, add, or edit a Zip archive's comments.", "example": "zipnote {{path/to/file.zip}}"}
,
  {"command": "zless", "description": "View `gzip` and `xz` compressed files.", "example": "zless {{file.txt.gz}}"}
,
  {"command": "zlib-flate", "description": "Raw zlib compression and decompression program.", "example": "zlib-flate -compress < {{path/to/input_file}} > {{path/to/compressed.zlib}}"}
,
  {"command": "zmap", "description": "Fast, open-source network scanner for Internet-wide surveys.", "example": "zmap {{SUBNETS}} {{[-p|--target-ports]}} {{port}}"}
,
  {"command": "z", "description": "Tracks the most used (by frequency) directories and enables quickly navigating to them using string patterns or regular expressions.", "example": "z {{foo}}"}
,
  {"command": "zm", "description": "A tool for managing articles of newspapers and blogs.", "example": "zm new"}
,
  {"command": "zmore", "description": "View `gzip` compressed files with `more`.", "example": "zmore {{path/to/file.txt.gz}}"}
,
  {"command": "zmv", "description": "Move or rename files matching a specified extended glob pattern.", "example": "zmv '{{(*).log}}' '{{$1.txt}}'"}
,
  {"command": "znew", "description": "Recompress files from `.Z` to gzip format.", "example": "znew {{path/to/file1.Z}}"}
,
  {"command": "zola", "description": "A static site generator in a single binary with everything built-in.", "example": "zola init {{my_site}}"}
,
  {"command": "zopflipng", "description": "PNG compression utility.", "example": "zopflipng {{input.png}} {{output.png}}"}
,
  {"command": "zotero", "description": "Manage your bibliographies.", "example": "zotero"}
,
  {"command": "zoxide", "description": "Keep track of the most frequently used directories.", "example": "zoxide query {{foo}}"}
,
  {"command": "zpaq", "description": "Incremental journaling backup utility and archiver.", "example": "zpaq {{[a|add]}} {{path/to/archive.zpaq}} {{path/to/file_or_directory}}"}
,
  {"command": "zpool", "description": "Manage ZFS pools.", "example": "zpool status"}
,
  {"command": "zrun", "description": "Transparently uncompress argument files to a command.", "example": "zrun {{cat}} {{path/to/file1.gz path/to/file2.bz2 ...}}"}
,
  {"command": "zsh", "description": "Z SHell, a Bash-compatible command-line interpreter.", "example": "zsh"}
,
  {"command": "zstdcat", "description": "This command is an alias of `zstd --decompress --stdout`.", "example": "tldr zstd"}
,
  {"command": "zstdless", "description": "Open a `zstd` compressed file for interactive reading, allowing scrolling and search.", "example": "zstdless {{path/to/file.zst}}"}
,
  {"command": "zstd", "description": "Compress or decompress files with Zstandard compression.", "example": "zstd {{path/to/file}}"}
,
  {"command": "zstdmt", "description": "This command is an alias of `zstd --threads 0` (which sets the number of working threads to the number of physical CPU cores).", "example": "tldr zstd"}
,
  {"command": "zsteg", "description": "Steganography detection tool for PNG and BMP file formats.", "example": "zsteg {{path/to/image.png}}"}
,
  {"command": "a2disconf", "description": "Disable an Apache configuration file on Debian-based OSes.", "example": "sudo a2disconf {{configuration_file}}"}
,
  {"command": "a2dismod", "description": "Disable an Apache module on Debian-based OSes.", "example": "sudo a2dismod {{module}}"}
,
  {"command": "a2dissite", "description": "Disable an Apache virtual host on Debian-based OSes.", "example": "sudo a2dissite {{virtual_host}}"}
,
  {"command": "a2enconf", "description": "Enable an Apache configuration file on Debian-based OSes.", "example": "sudo a2enconf {{configuration_file}}"}
,
  {"command": "a2enmod", "description": "Enable an Apache module on Debian-based OSes.", "example": "sudo a2enmod {{module}}"}
,
  {"command": "a2ensite", "description": "Enable an Apache virtual host on Debian-based OSes.", "example": "sudo a2ensite {{virtual_host}}"}
,
  {"command": "a2query", "description": "Retrieve runtime configuration from Apache on Debian-based OSes.", "example": "sudo a2query -m"}
,
  {"command": "aa-audit", "description": "Set AppArmor security profiles to audit mode.", "example": "sudo aa-audit {{profile_name}}"}
,
  {"command": "aa-cleanprof", "description": "Clean AppArmor security profiles by removing unused rules.", "example": "sudo aa-cleanprof {{profile_name}}"}
,
  {"command": "aa-complain", "description": "Set an AppArmor policy to complain mode.", "example": "sudo aa-complain {{path/to/profile1 path/to/profile2 ...}}"}
,
  {"command": "aa-decode", "description": "Decode AppArmor audit logs into a human-readable format.", "example": "aa-decode {{hexstring}}"}
,
  {"command": "aa-disable", "description": "Disable AppArmor security policies.", "example": "sudo aa-disable {{path/to/profile1 path/to/profile2 ...}}"}
,
  {"command": "aa-enforce", "description": "Set an AppArmor profile to enforce mode.", "example": "sudo aa-enforce {{[-d|--dir]}} {{path/to/profile}}"}
,
  {"command": "aa-genprof", "description": "Generate AppArmor security profiles by monitoring program behavior.", "example": "sudo aa-genprof {{program_path}}"}
,
  {"command": "aa-logprof", "description": "Interactively update AppArmor security profiles based on logged violations.", "example": "sudo aa-logprof"}
,
  {"command": "aa-mergeprof", "description": "Merge AppArmor security profile files into the profile directory.", "example": "sudo aa-mergeprof {{file1 file2 ...}}"}
,
  {"command": "aa-remove-unknown", "description": "Remove AppArmor profiles that are no longer present in the configuration directory.", "example": "sudo aa-remove-unknown -n"}
,
  {"command": "aa-status", "description": "List currently loaded AppArmor modules.", "example": "sudo aa-status"}
,
  {"command": "aa-teardown", "description": "Tear down all AppArmor profiles and disable AppArmor enforcement.", "example": "sudo aa-teardown"}
,
  {"command": "aa-unconfined", "description": "List processes with open TCP/UDP ports that do not have AppArmor profiles loaded.", "example": "sudo aa-unconfined"}
,
  {"command": "aa-update-browser", "description": "Update AppArmor browser profiles to use supported abstractions.", "example": "sudo aa-update-browser -l"}
,
  {"command": "abbr", "description": "Manage abbreviations for the fish shell.", "example": "abbr {{[-a|--add]}} {{abbreviation_name}} {{command}} {{command_arguments}}"}
,
  {"command": "abroot", "description": "Utility providing full immutability and atomicity by transacting between 2 root partition states (A⟺B).", "example": "sudo abroot pkg add {{package}}"}
,
  {"command": "abrt-action-analyze-backtrace", "description": "Analyze C/C++ backtrace.", "example": "abrt-action-analyze-backtrace"}
,
  {"command": "abrt-action-analyze-c", "description": "Calculate UUID for a problem data directory with `coredump`.", "example": "abrt-action-analyze-c"}
,
  {"command": "abrt-cli", "description": "Automatic Bug Reporting Tool for Fedora-based systems.", "example": "abrt-cli list"}
,
  {"command": "abrt", "description": "This command is an alias of `abrt-cli`.", "example": "tldr abrt-cli"}
,
  {"command": "ac", "description": "Print statistics on how long users have been connected.", "example": "ac"}
,
  {"command": "acountry", "description": "Print the country where an IPv4 address or hostname is located.", "example": "acountry {{example.com}}"}
,
  {"command": "acpi", "description": "Shows battery status or thermal information.", "example": "acpi"}
,
  {"command": "add-apt-repository", "description": "Manage `apt` repository definitions.", "example": "add-apt-repository {{repository_spec}}"}
,
  {"command": "addpart", "description": "Tell the Linux kernel about the existence of the specified partition.", "example": "addpart {{device}} {{partition}} {{start}} {{length}}"}
,
  {"command": "addr2line", "description": "Convert addresses of a binary into file names and line numbers.", "example": "addr2line {{[-e|--exe]}} {{path/to/executable}} {{address}}"}
,
  {"command": "adduser", "description": "User addition utility.", "example": "adduser {{username}}"}
,
  {"command": "adig", "description": "Print information received from Domain Name System (DNS) servers.", "example": "adig {{example.com}}"}
,
  {"command": "agetty", "description": "Alternative `getty`: Open a `tty` port, prompt for a login name, and invoke the `/bin/login` command.", "example": "agetty {{tty}} {{115200}}"}
,
  {"command": "ahost", "description": "DNS lookup utility to display the A or AAAA record linked with a hostname or IP address.", "example": "ahost {{example.com}}"}
,
  {"command": "aide", "description": "Advanced Intrusion Detection Environment to validate file integrity.", "example": "sudo aide {{[-i|--init]}}"}
,
  {"command": "alien", "description": "Convert different installation packages to other formats.", "example": "sudo alien {{[-d|--to-deb]}} {{path/to/file}}"}
,
  {"command": "alpine", "description": "An email client and Usenet newsgroup program with a pico/nano-inspired interface.", "example": "alpine"}
,
  {"command": "alsamixer", "description": "Graphical mixer for ALSA soundcard driver.", "example": "alsamixer {{[-c|--card]}} {{soundcard_number}}"}
,
  {"command": "alternatives", "description": "This command is an alias of `update-alternatives`.", "example": "tldr update-alternatives"}
,
  {"command": "amixer", "description": "Mixer for ALSA soundcard driver.", "example": "amixer -D pulse sset Master {{10%+}}"}
,
  {"command": "anbox", "description": "Run Android applications on any Linux operating system.", "example": "anbox launch --package={{org.anbox.appmgr}} --component={{org.anbox.appmgr.AppViewActivity}}"}
,
  {"command": "apache2ctl", "description": "Administrate the Apache HTTP web server.", "example": "sudo apache2ctl start"}
,
  {"command": "apachectl", "description": "Control an Apache HTTP server.", "example": "sudo apachectl start"}
,
  {"command": "apk", "description": "Alpine Linux package management tool.", "example": "apk upgrade {{[-U|--update-cache]}}"}
,
  {"command": "aplay", "description": "Sound player for ALSA soundcard driver.", "example": "aplay {{path/to/file}}"}
,
  {"command": "apparmor_parser", "description": "Load, compile, and manage AppArmor security profiles.", "example": "sudo apparmor_parser {{[-a|--add]}} {{profile_file}}"}
,
  {"command": "apparmor_status", "description": "This command is an alias of `aa-status`.", "example": "tldr aa-status"}
,
  {"command": "apport-bug", "description": "File a bug report on Ubuntu.", "example": "apport-bug"}
,
  {"command": "apt-add-repository", "description": "This command is an alias of `add-apt-repository`.", "example": "tldr add-apt-repository"}
,
  {"command": "apt-cache", "description": "Debian and Ubuntu package query tool.", "example": "apt-cache search {{query}}"}
,
  {"command": "apt-clone", "description": "Clone/backup/restore the package state of a Debian-based system.", "example": "apt-clone clone {{path/to/directory}}"}
,
  {"command": "apt-file", "description": "Search for files in `apt` packages, including ones not yet installed.", "example": "sudo apt update"}
,
  {"command": "apt-get", "description": "Debian and Ubuntu package management utility.", "example": "apt-get update"}
,
  {"command": "aptitude", "description": "Debian and Ubuntu package management utility.", "example": "aptitude update"}
,
  {"command": "apt-key", "description": "Key management utility for the APT Package Manager on Debian and Ubuntu.", "example": "apt-key list"}
,
  {"command": "apt-mark", "description": "Utility to change the status of installed packages.", "example": "sudo apt-mark auto {{package}}"}
,
  {"command": "apt", "description": "Package manager for Debian-based distributions.", "example": "sudo apt update"}
,
  {"command": "apt-moo", "description": "An `APT` easter egg.", "example": "apt moo"}
,
  {"command": "apx", "description": "Package management utility with support for multiple sources, allowing you to install packages in subsystems.", "example": "tldr apx pkgmanagers"}
,
  {"command": "apx-pkgmanagers", "description": "Manage package managers in `apx`.", "example": "apx pkgmanagers create"}
,
  {"command": "apx-stacks", "description": "Manage stacks in `apx`.", "example": "apx stacks new"}
,
  {"command": "apx-subsystems", "description": "Manage subsystems in `apx`.", "example": "apx subsystems new"}
,
  {"command": "arch-chroot", "description": "Enhanced `chroot` command to help in the Arch Linux installation process.", "example": "arch-chroot {{path/to/new/root}}"}
,
  {"command": "archey", "description": "Simple tool for stylishly displaying system information.", "example": "archey"}
,
  {"command": "archinstall", "description": "Guided Arch Linux installer with a twist.", "example": "archinstall"}
,
  {"command": "archivemount", "description": "Mount an archive for access as a filesystem.", "example": "archivemount {{path/to/archive}} {{path/to/mount_point}}"}
,
  {"command": "archlinux-java", "description": "Switch between installed Java environments.", "example": "archlinux-java status"}
,
  {"command": "arecord", "description": "Sound recorder for ALSA soundcard driver.", "example": "arecord {{[-vv|--verbose --verbose]}} {{[-f|--format]}} cd {{path/to/file.wav}}"}
,
  {"command": "arithmetic", "description": "Quiz on simple arithmetic problems.", "example": "arithmetic"}
,
  {"command": "ark", "description": "KDE's archiving tool.", "example": "ark {{[-b|--batch]}} {{path/to/archive}}"}
,
  {"command": "arpaname", "description": "Get the corresponding ARPA name for a IP addresses.", "example": "arpaname {{ip_address}}"}
,
  {"command": "arpspoof", "description": "Forge ARP replies to intercept packets.", "example": "sudo arpspoof -i {{wlan0}} {{host_ip}}"}
,
  {"command": "arptables", "description": "Manage ARP filtering rules using the `nftables` backend.", "example": "sudo arptables {{[-L|--list]}}"}
,
  {"command": "asciiart", "description": "Convert images to ASCII.", "example": "asciiart {{path/to/image.jpg}}"}
,
  {"command": "ascii", "description": "Show ASCII character aliases.", "example": "ascii {{a}}"}
,
  {"command": "as", "description": "Portable GNU assembler.", "example": "as {{path/to/file.s}}"}
,
  {"command": "asterisk", "description": "Run and manage telephone and exchange (phone) server instances.", "example": "asterisk -r -vvv"}
,
  {"command": "at", "description": "Execute commands once at a later time.", "example": "systemctl start atd"}
,
  {"command": "atop", "description": "Linux system and process monitor.", "example": "atop"}
,
  {"command": "audit2allow", "description": "Create an SELinux local policy module to allow rules based on denied operations found in logs.", "example": "sudo audit2allow {{[-a|--all]}} -M {{local_policy_name}}"}
,
  {"command": "auditctl", "description": "Utility to control the behavior, get status and manage rules of the Linux Auditing System.", "example": "sudo auditctl -s"}
,
  {"command": "auracle", "description": "Interact with Arch Linux's User Repository, commonly referred to as the AUR.", "example": "auracle search '{{regular_expression}}'"}
,
  {"command": "aura", "description": "The Aura Package Manager: a secure, multilingual package manager for Arch Linux and the AUR.", "example": "aura --aursync --both --search {{keyword|regular_expression}}"}
,
  {"command": "aurman", "description": "An Arch Linux utility to build and install packages from the Arch User Repository.", "example": "aurman {{[-S|--sync]}} {{[-y|--refresh]}} {{[-u|--sysupgrade]}}"}
,
  {"command": "aur", "description": "Build packages from the AUR and manage local repositories.", "example": "aur search {{keyword}}"}
,
  {"command": "aurpublish", "description": "Publish Arch User Repository packages.", "example": "aurpublish {{package_name}}"}
,
  {"command": "aurvote", "description": "Vote for packages in the Arch User Repository.", "example": "aurvote --configure"}
,
  {"command": "ausyscall", "description": "Map syscall names and numbers.", "example": "ausyscall {{search_pattern}}"}
,
  {"command": "authconfig", "description": "Configure system authentication resources.", "example": "authconfig --test"}
,
  {"command": "auto-cpufreq", "description": "Automatic CPU speed & power optimizer.", "example": "sudo auto-cpufreq --{{monitor|live|update|remove|stats|force=governor}}"}
,
  {"command": "autopkgtest", "description": "Run tests on Debian packages.", "example": "autopkgtest -- {{null}}"}
,
  {"command": "autorandr", "description": "Automatically change screen layout.", "example": "autorandr {{[-s|--save]}} {{profile_name}}"}
,
  {"command": "autorecon", "description": "A multi-threaded network reconnaissance tool which performs automated enumeration of services.", "example": "sudo autorecon {{host_or_ip1,host_or_ip2,...}}"}
,
  {"command": "avahi-browse", "description": "Display services and hosts exposed on the local network via mDNS/DNS-SD.", "example": "avahi-browse {{[-a|--all]}} {{[-r|--resolve]}} {{[-l|--ignore-local]}}"}
,
  {"command": "avahi-resolve-address", "description": "This command is an alias of `avahi-resolve --address`.", "example": "tldr avahi-resolve"}
,
  {"command": "avahi-resolve-host-name", "description": "This command is an alias of `avahi-resolve --name`.", "example": "tldr avahi-resolve"}
,
  {"command": "avahi-resolve", "description": "Translate between host names and IP Addresses.", "example": "avahi-resolve -4 {{[-n|--name]}} {{service.local}}"}
,
  {"command": "avifenc", "description": "AV1 Image File Format (AVIF) encoder.", "example": "avifenc {{path/to/input.png}} {{path/to/output.avif}}"}
,
  {"command": "away", "description": "Locks terminal with an away message.", "example": "away {{message}}"}
,
  {"command": "backlight_control", "description": "Control a linux machine's backlight using percentage values.", "example": "backlight_control {{+|-}}{{5}}"}
,
  {"command": "balooctl", "description": "File indexing and searching framework for KDE Plasma.", "example": "balooctl status"}
,
  {"command": "batcat", "description": "This command is an alias of `bat`.", "example": "tldr bat"}
,
  {"command": "batch", "description": "Execute commands at a later time when the system load levels permit.", "example": "systemctl start atd"}
,
  {"command": "battop", "description": "An interactive viewer for the batteries installed in your notebook.", "example": "battop"}
,
  {"command": "bcachefs-device", "description": "Manage devices within a running `bcachefs` filesystem.", "example": "sudo bcachefs device add --label={{group}}.{{name}} {{path/to/mountpoint}} {{path/to/device}}"}
,
  {"command": "bcachefs", "description": "Manage `bcachefs` filesystems/devices.", "example": "sudo bcachefs format {{path/to/partition}}"}
,
  {"command": "bchunk", "description": "Convert CD images to a set of `.iso` and `.cdr` tracks.", "example": "bchunk {{path/to/image.bin}} {{path/to/image.cue}} {{path/to/output}}"}
,
  {"command": "beep", "description": "A utility to beep the PC speaker.", "example": "beep"}
,
  {"command": "betterdiscordctl", "description": "Manage BetterDiscord on Linux.", "example": "sudo betterdiscordctl install"}
,
  {"command": "betterlockscreen", "description": "Simple, minimal lock screen.", "example": "betterlockscreen {{[-l|--lock]}}"}
,
  {"command": "bitwise", "description": "Multi base interactive calculator supporting dynamic base conversion and bit manipulation.", "example": "bitwise"}
,
  {"command": "blastn", "description": "Nucleotide-Nucleotide BLAST.", "example": "blastn -query {{query.fa}} -subject {{subject.fa}} -evalue {{1e-9}}"}
,
  {"command": "blastp", "description": "Protein-Protein BLAST.", "example": "blastp -query {{query.fa}} -subject {{subject.fa}} -evalue {{1e-9}}"}
,
  {"command": "bleachbit", "description": "Clean junk files on the filesystem.", "example": "bleachbit --gui"}
,
  {"command": "blight", "description": "Utility for changing the display brightness.", "example": "blight set {{50}} {{[-r|--relative]}}"}
,
  {"command": "blkdiscard", "description": "Discards device sectors on storage devices. Useful for SSDs.", "example": "blkdiscard {{/dev/device}}"}
,
  {"command": "blkid", "description": "List all recognized partitions and their Universally Unique Identifier (UUID).", "example": "sudo blkid"}
,
  {"command": "blkpr", "description": "Register, reserve, release, preempt, and clear persistent reservations on a block device that supports Persistent Reservations.", "example": "blkpr {{[-c|--command]}} register {{[-k|--key]}} {{reservation_key}} {{path/to/device}}"}
,
  {"command": "blockdev", "description": "Manage, query, and manipulate block devices.", "example": "sudo blockdev --report"}
,
  {"command": "bluebuild", "description": "Build Containerfiles and custom images based on your `recipe.yml`.", "example": "bluebuild build {{path/to/recipe.yml}}"}
,
  {"command": "bluetoothctl", "description": "Manage Bluetooth devices.", "example": "bluetoothctl"}
,
  {"command": "bluetoothd", "description": "Daemon to manage bluetooth devices.", "example": "bluetoothd"}
,
  {"command": "blurlock", "description": "A simple wrapper around the i3 screen locker `i3lock`, which blurs the screen.", "example": "blurlock"}
,
  {"command": "bmon", "description": "Monitor bandwidth and capture network related statistics.", "example": "bmon {{[-a|--show-all]}}"}
,
  {"command": "boltctl", "description": "Control thunderbolt devices.", "example": "boltctl"}
,
  {"command": "bootc", "description": "Boot and upgrade via container images.", "example": "bootc status"}
,
  {"command": "bootc-switch", "description": "Target a new container image reference to boot.", "example": "sudo bootc switch {{image}}"}
,
  {"command": "bootctl", "description": "Control EFI firmware boot settings and manage boot loader.", "example": "bootctl status"}
,
  {"command": "bpftool", "description": "Inspect and manipulate eBPF programs and maps in a simple way.", "example": "bpftool prog list"}
,
  {"command": "bpftrace", "description": "High-level tracing language for Linux eBPF.", "example": "sudo bpftrace -l"}
,
  {"command": "braa", "description": "Ultra-fast mass SNMP scanner allowing multiple hosts simultaneously.", "example": "braa public@{{ip}}:{{.1.3.6.*}}"}
,
  {"command": "brctl", "description": "Ethernet bridge administration.", "example": "sudo brctl show"}
,
  {"command": "bridge", "description": "Show and manipulate network bridge addresses and devices.", "example": "bridge {{[l|link]}}"}
,
  {"command": "brightnessctl", "description": "Utility for reading and controlling device brightness for Linux operating systems.", "example": "brightnessctl {{[-l|--list]}}"}
,
  {"command": "br", "description": "Navigate directory trees interactively.", "example": "br"}
,
  {"command": "broot", "description": "Navigate directory trees interactively.", "example": "broot --install"}
,
  {"command": "bspc", "description": "Configure and control `bspwm`, managing nodes, desktops, monitors, and more.", "example": "bspc monitor {{[-d|--reset-desktops]}} {{desktop_name1}} {{desktop_name2}}"}
,
  {"command": "bspwm", "description": "A tiling window manager based on binary space partitioning.", "example": "bspwm -c {{path/to/config}}"}
,
  {"command": "btrbk", "description": "Create snapshots and remote backups of btrfs subvolumes.", "example": "sudo btrbk stats"}
,
  {"command": "btrfs-balance", "description": "Balance block groups on a btrfs filesystem.", "example": "sudo btrfs balance status {{path/to/btrfs_filesystem}}"}
,
  {"command": "btrfs-check", "description": "Check or repair a btrfs filesystem.", "example": "sudo btrfs check {{path/to/partition}}"}
,
  {"command": "btrfs-device", "description": "Manage devices in a btrfs filesystem.", "example": "sudo btrfs device add {{path/to/block_device1 path/to/block_device2 ...}} {{path/to/btrfs_filesystem}}"}
,
  {"command": "btrfs-filesystem", "description": "Manage btrfs filesystems.", "example": "btrfs filesystem usage {{path/to/btrfs_mount}}"}
,
  {"command": "btrfs-inspect-internal", "description": "Query internal information of a btrfs filesystem.", "example": "sudo btrfs inspect-internal dump-super {{path/to/partition}}"}
,
  {"command": "btrfs", "description": "A filesystem based on the copy-on-write (COW) principle for Linux.", "example": "sudo btrfs subvolume create {{path/to/subvolume}}"}
,
  {"command": "btrfs-property", "description": "Get, set, or list properties for a BTRFS filesystem object (files, directories, subvolumes, filesystems, or devices).", "example": "sudo btrfs property list {{path/to/btrfs_object}}"}
,
  {"command": "btrfs-rescue", "description": "Try to recover a damaged btrfs filesystem.", "example": "sudo btrfs rescue chunk-recover {{path/to/partition}}"}
,
  {"command": "btrfs-restore", "description": "Try to salvage files from a damaged btrfs filesystem.", "example": "sudo btrfs restore {{path/to/btrfs_device}} {{path/to/target_directory}}"}
,
  {"command": "btrfs-scrub", "description": "Scrub btrfs filesystems to verify data integrity.", "example": "sudo btrfs scrub start {{path/to/btrfs_mount}}"}
,
  {"command": "btrfs-subvolume", "description": "Manage btrfs subvolumes and snapshots.", "example": "sudo btrfs subvolume create {{path/to/new_subvolume}}"}
,
  {"command": "btrfs-version", "description": "Display btrfs-progs version.", "example": "btrfs version --help"}
,
  {"command": "bully", "description": "Brute-force the WPS pin of a wireless access point.", "example": "bully {{[-b|--bssid]}} \"{{mac}}\" {{[-c|--channel]}} \"{{channel}}\" {{[-B|--bruteforce]}} \"{{interface}}\""}
,
  {"command": "burpsuite", "description": "A GUI based application mainly used in web application penetration testing.", "example": "burpsuite"}
,
  {"command": "busctl", "description": "Introspect and monitor the D-Bus bus.", "example": "busctl list"}
,
  {"command": "bwa", "description": "Burrows-Wheeler Alignment tool.", "example": "bwa index {{path/to/reference.fa}}"}
,
  {"command": "bwrap", "description": "Run programs in a lightweight sandbox.", "example": "bwrap --ro-bind / / {{/bin/bash}}"}
,
  {"command": "byzanz-record", "description": "Record the screen.", "example": "byzanz-record {{path/to/file.[byzanz|flv|gif|ogg|ogv|webm]}}"}
,
  {"command": "cacaclock", "description": "Display the current time as ASCII art.", "example": "cacaclock"}
,
  {"command": "cacademo", "description": "Display a random ASCII art animation.", "example": "cacademo"}
,
  {"command": "cacafire", "description": "Display an animated ASCII fire.", "example": "cacafire"}
,
  {"command": "cacaview", "description": "Display an image in PMN format.", "example": "cacaview {{path/to/image}}"}
,
  {"command": "caffeinate", "description": "Prevent desktop from sleeping.", "example": "caffeinate"}
,
  {"command": "caffeine-indicator", "description": "Manually inhibit desktop idleness with a toggle.", "example": "caffeine-indicator"}
,
  {"command": "caffeine", "description": "Prevent desktop idleness in full-screen mode.", "example": "caffeine"}
,
  {"command": "cage", "description": "Open an applications in a kiosk mode.", "example": "cage {{application}}"}
,
  {"command": "caja", "description": "Manage files and directories in the MATE desktop environment.", "example": "caja"}
,
  {"command": "calcurse", "description": "A text-based calendar and scheduling application for the command-line.", "example": "calcurse"}
,
  {"command": "caligula", "description": "A user-friendly, lightweight TUI for disk imaging.", "example": "caligula burn {{path/to/image.iso}}"}
,
  {"command": "cal", "description": "Display a calendar with the current day highlighted.", "example": "cal"}
,
  {"command": "cam", "description": "Frontend tool for `libcamera`.", "example": "cam {{[-l|--list]}}"}
,
  {"command": "cat", "description": "Print and concatenate files.", "example": "cat {{path/to/file}}"}
,
  {"command": "cbatticon", "description": "A lightweight and fast battery icon that sits in your system tray.", "example": "cbatticon"}
,
  {"command": "cc", "description": "This command is an alias of `gcc`.", "example": "tldr gcc"}
,
  {"command": "cdrdao", "description": "Read and write CDs in disc-at-once mode.", "example": "cdrdao read-cd --device {{/dev/cdrom}} --read-raw {{image.toc}}"}
,
  {"command": "ceph", "description": "A unified storage system.", "example": "ceph status"}
,
  {"command": "certbot", "description": "The Let's Encrypt Agent for automatically obtaining and renewing TLS certificates.", "example": "sudo certbot certonly --webroot {{[-w|--webroot-path]}} {{path/to/webroot}} {{[-d|--domain]}} {{subdomain.example.com}}"}
,
  {"command": "cewl", "description": "URL spidering tool for making a cracking wordlist from web content.", "example": "cewl {{[-d|--depth]}} 2 {{[-w|--write]}} {{path/to/wordlist.txt}} {{url}}"}
,
  {"command": "cfdisk", "description": "Manage partition tables and partitions on a hard disk using a curses UI.", "example": "cfdisk {{/dev/sdX}}"}
,
  {"command": "cgclassify", "description": "Move running tasks to `cgroups`.", "example": "cgclassify -g {{cpu:student}} {{1234}}"}
,
  {"command": "cgcreate", "description": "Create cgroups, used to limit, measure, and control resources used by processes.", "example": "cgcreate -g {{group_type}}:{{group_name}}"}
,
  {"command": "cgexec", "description": "Limit, measure, and control resources used by processes.", "example": "cgexec -g {{controller}}:{{cgroup_name}} {{process_name}}"}
,
  {"command": "cgroups", "description": "Cgroups aka control groups is a Linux kernel feature for limiting, measuring, and controlling resource usage by processes.", "example": "tldr cgclassify"}
,
  {"command": "chage", "description": "Change user account and password expiry information.", "example": "chage {{[-l|--list]}} {{username}}"}
,
  {"command": "chat", "description": "Automate conversations with a modem or serial device.", "example": "chat '{{expect_send_pairs}}'"}
,
  {"command": "chattr", "description": "Change attributes of files or directories.", "example": "chattr +i {{path/to/file_or_directory}}"}
,
  {"command": "chcon", "description": "Change SELinux security context of a file or files/directories.", "example": "ls {{[-lZ|-l --context]}} {{path/to/file}}"}
,
  {"command": "chcpu", "description": "Enable/disable a system's CPUs.", "example": "chcpu {{[-d|--disable]}} {{1,3}}"}
,
  {"command": "check-dfsg-status", "description": "Report non-free packages installed on Debian-based OSes.", "example": "check-dfsg-status"}
,
  {"command": "checkinstall", "description": "Track the local installation of a software package, and produce a binary package which can be used with a system's native package manager.", "example": "sudo checkinstall --default"}
,
  {"command": "check-language-support", "description": "Display a list of missing language packages on Ubuntu.", "example": "check-language-support"}
,
  {"command": "check-support-status", "description": "Identify installed Debian packages for which support has had to be limited or prematurely ended.", "example": "check-support-status"}
,
  {"command": "checkupdates-aur", "description": "Check pending updates from the Arch User Repository (AUR).", "example": "checkupdates-aur"}
,
  {"command": "checkupdates", "description": "Check pending updates in Arch Linux.", "example": "checkupdates"}
,
  {"command": "chfn", "description": "Update `finger` info for a user.", "example": "chfn {{[-f|--full-name]}} {{new_display_name}} {{username}}"}
,
  {"command": "chkconfig", "description": "Manage the runlevel of services on CentOS 6.", "example": "chkconfig --list"}
,
  {"command": "chmem", "description": "Modify the state of memory blocks (online or offline) in a Linux system.", "example": "sudo chmem {{[-b|--block]}} {{[-d|--disable]}} {{block_number}}"}
,
  {"command": "chntpw", "description": "A utility that can edit windows registry, reset user password, promote users to administrator by modifying the Windows SAM.", "example": "chntpw -l {{path/to/sam_file}}"}
,
  {"command": "choom", "description": "Display and change the adjust out-of-memory killer score.", "example": "choom {{[-p|--pid]}} {{pid}}"}
,
  {"command": "chpasswd", "description": "Change the passwords for multiple users by using `stdin`.", "example": "printf \"{{username}}:{{new_password}}\" | sudo chpasswd"}
,
  {"command": "chrt", "description": "Manipulate the real-time attributes of a process.", "example": "chrt {{[-p|--pid]}} {{PID}}"}
,
  {"command": "chsh", "description": "Change user's login shell.", "example": "chsh"}
,
  {"command": "cloud-init", "description": "Manage cloud instance initialization.", "example": "cloud-init status"}
,
  {"command": "cmus", "description": "Command-line Music Player.", "example": "cmus {{path/to/directory}}"}
,
  {"command": "cockpit-bridge", "description": "Relay messages and commands between the front end and server in the cockpit suite.", "example": "cockpit-bridge --packages"}
,
  {"command": "cockpit-desktop", "description": "Securely access Cockpit pages in a running session.", "example": "cockpit-desktop {{url}} {{SSH_host}}"}
,
  {"command": "cockpit-tls", "description": "TLS terminating HTTP proxy to encrypt traffic between a client and `cockpit-ws`.", "example": "cockpit-tls --port {{port}}"}
,
  {"command": "cockpit-ws", "description": "Communicate between the browser application and various configuration tools and services like `cockpit-bridge`.", "example": "cockpit-ws --local-ssh"}
,
  {"command": "cointop", "description": "Track and monitor cryptocurrencies in the terminal.", "example": "cointop"}
,
  {"command": "collectd", "description": "System statistics collection daemon.", "example": "collectd -t"}
,
  {"command": "colrm", "description": "Remove columns from `stdin`.", "example": "colrm {{1 1}}"}
,
  {"command": "column", "description": "Format `stdin` or a file into multiple columns.", "example": "printf \"header1 header2\nbar foo\n\" | column {{[-c|--output-width]}} {{30}}"}
,
  {"command": "compose", "description": "An alias to a `run-mailcap`'s action compose.", "example": "compose {{filename}}"}
,
  {"command": "compress", "description": "Compress files using the Unix `compress` command.", "example": "compress {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "compseq", "description": "Calculate the composition of unique words in sequences.", "example": "compseq {{path/to/file.fasta}}"}
,
  {"command": "compsize", "description": "Calculate the compression ratio of a set of files on a btrfs filesystem.", "example": "sudo compsize {{path/to/file_or_directory}}"}
,
  {"command": "conky", "description": "Light-weight system monitor for X.", "example": "conky"}
,
  {"command": "conntrack", "description": "Interact with the Netfilter connection tracking system.", "example": "conntrack {{[-L|--dump]}}"}
,
  {"command": "coredumpctl", "description": "Retrieve and process saved core dumps and metadata.", "example": "coredumpctl"}
,
  {"command": "counter-strike-2", "description": "Host a headless Counter Strike 2 server.", "example": "{{path/to/cs2}} -dedicated +map {{de_dust2}}"}
,
  {"command": "cpufreq-aperf", "description": "Calculate the average CPU frequency over a time period.", "example": "sudo cpufreq-aperf"}
,
  {"command": "cpufreq-info", "description": "Show CPU frequency information.", "example": "cpufreq-info"}
,
  {"command": "cpufreq-set", "description": "A tool to modify CPU frequency settings.", "example": "sudo cpufreq-set {{[-c|--cpu]}} {{1}} {{[-g|--governor]}} {{userspace}}"}
,
  {"command": "cpuid", "description": "Display detailed information about all CPUs.", "example": "cpuid"}
,
  {"command": "cpulimit", "description": "A tool to throttle the CPU usage of other processes.", "example": "cpulimit {{[-p|--pid]}} {{1234}} {{[-l|--limit]}} {{25%}}"}
,
  {"command": "cpupower", "description": "Tools regarding CPU power and tuning options.", "example": "sudo cpupower {{[-c|--cpu]}} {{all}} info"}
,
  {"command": "create_ap", "description": "Create an AP (Access Point) at any channel.", "example": "create_ap {{wlan0}} {{eth0}} {{access_point_ssid}}"}
,
  {"command": "create-image", "description": "Create CPIO images.", "example": "create-image {{[-o|--output]}} {{path/to/output.cpio}}"}
,
  {"command": "createrepo", "description": "Initializes an RPM repository in a directory, including all XML and SQLite files.", "example": "createrepo {{path/to/directory}}"}
,
  {"command": "crond", "description": "Daemon to execute scheduled commands from crontab files.", "example": "crond"}
,
  {"command": "cryptcat", "description": "Cryptcat is netcat with encryption capabilities.", "example": "cryptcat -k {{password}} -l -p {{port}}"}
,
  {"command": "cryptsetup-luksformat", "description": "Initialize a LUKS partition and the initial key slot (0) with a passphrase or keyfile.", "example": "cryptsetup luksFormat {{/dev/sdXY}}"}
,
  {"command": "cryptsetup", "description": "Manage plain `dm-crypt` and LUKS (Linux Unified Key Setup) encrypted volumes.", "example": "cryptsetup luksFormat {{/dev/sdXY}}"}
,
  {"command": "cryptsetup-open", "description": "Create a decrypted mapping of an encrypted volume.", "example": "cryptsetup open {{/dev/sdXY}} {{mapping_name}}"}
,
  {"command": "cs2", "description": "This command is an alias of `counter strike 2`.", "example": "tldr counter strike 2"}
,
  {"command": "csplit", "description": "Split a file into pieces.", "example": "csplit {{path/to/file}} 5 23"}
,
  {"command": "ctop", "description": "Instantly visualize container performance and health with real-time metrics on CPU, memory, and block IO usage.", "example": "ctop -a"}
,
  {"command": "ctrlaltdel", "description": "Utility to control what happens when CTRL+ALT+DEL is pressed.", "example": "ctrlaltdel"}
,
  {"command": "ctr", "description": "Manage `containerd` containers and images.", "example": "ctr containers list"}
,
  {"command": "cu", "description": "Call Up another system and act as a dial-in/serial terminal or perform file transfers with no error checking.", "example": "sudo cu {{[-l|--line]}} {{/dev/ttyXYZ}}"}
,
  {"command": "curlie", "description": "A frontend to `curl` that adds the ease of use of `httpie`.", "example": "curlie {{httpbin.org/get}}"}
,
  {"command": "cuyo", "description": "Tetris like game.", "example": "cuyo"}
,
  {"command": "daemonize", "description": "Run a command (that does not daemonize itself) as a Unix daemon.", "example": "daemonize {{command}} {{command_arguments}}"}
,
  {"command": "daemon", "description": "Turns other processes into daemons.", "example": "daemon --name=\"{{name}}\" {{command}}"}
,
  {"command": "darling", "description": "Run macOS software on Linux.", "example": "darling shell {{uname}}"}
,
  {"command": "datamash", "description": "Perform basic numeric, textual and statistical operations on input textual data files.", "example": "seq 3 | datamash max 1 min 1 mean 1 median 1"}
,
  {"command": "dbclient", "description": "Lightweight Dropbear Secure Shell client.", "example": "dbclient {{user}}@{{host}}"}
,
  {"command": "dbus-daemon", "description": "The D-Bus message daemon, allowing multiple programs to exchange messages.", "example": "dbus-daemon --config-file {{path/to/file}}"}
,
  {"command": "dconf", "description": "Manage dconf databases.", "example": "dconf read {{/path/to/key}}"}
,
  {"command": "dconf-read", "description": "Read key values from dconf databases.", "example": "dconf read {{/path/to/key}}"}
,
  {"command": "dconf-reset", "description": "Reset key values in dconf databases.", "example": "dconf reset {{/path/to/key}}"}
,
  {"command": "dconf-write", "description": "Write key values in dconf databases.", "example": "dconf write {{/path/to/key}} \"{{value}}\""}
,
  {"command": "ddcutil", "description": "Control the settings of connected displays via DDC/CI.", "example": "ddcutil detect"}
,
  {"command": "dd", "description": "Convert and copy a file.", "example": "dd if={{path/to/file.iso}} of={{/dev/usb_drive}} status=progress"}
,
  {"command": "ddrescue", "description": "Data recovery tool that reads data from damaged block devices.", "example": "sudo ddrescue {{/dev/sdb}} {{path/to/image.dd}} {{path/to/log.txt}}"}
,
  {"command": "debchange", "description": "Maintain the debian/changelog file of a Debian source package.", "example": "debchange {{[-n|--nmu]}}"}
,
  {"command": "deb-get", "description": "`apt-get` functionality for `.deb` packages published in third party repositories or via direct download.", "example": "deb-get update"}
,
  {"command": "debman", "description": "Read man pages from uninstalled packages.", "example": "debman -p {{package}} {{command}}"}
,
  {"command": "debootstrap", "description": "Create a basic Debian system.", "example": "sudo debootstrap stable {{path/to/debian-root/}} http://deb.debian.org/debian"}
,
  {"command": "deborphan", "description": "Display orphan packages on operating systems using the APT package manager.", "example": "deborphan"}
,
  {"command": "debsecan", "description": "Debian Security Analyzer, a tool to list vulnerabilities on a particular Debian installation.", "example": "debsecan"}
,
  {"command": "debtap", "description": "Convert Debian packages into Arch Linux packages.", "example": "sudo debtap {{[-u|--update]}}"}
,
  {"command": "debugfs", "description": "An interactive ext2/ext3/ext4 filesystem debugger.", "example": "debugfs {{/dev/sdXN}}"}
,
  {"command": "debuginfod-find", "description": "Request debuginfo-related data.", "example": "debuginfod-find -vv debuginfo {{build_id}}"}
,
  {"command": "debuild", "description": "Build a Debian package from source.", "example": "debuild"}
,
  {"command": "decode-dimms", "description": "Decode RAM data.", "example": "decode-dimms"}
,
  {"command": "delpart", "description": "Ask the Linux kernel to forget about a partition.", "example": "sudo delpart {{/dev/sda}} {{1}}"}
,
  {"command": "deluser", "description": "Delete a user from the system.", "example": "sudo deluser {{username}}"}
,
  {"command": "dex", "description": "DesktopEntry Execution is a program to generate and execute DesktopEntry files of the Application type.", "example": "dex {{[-a|--autostart]}}"}
,
  {"command": "df", "description": "Display an overview of the filesystem disk space usage.", "example": "df"}
,
  {"command": "dget", "description": "Download Debian packages.", "example": "dget {{package}}"}
,
  {"command": "dhcpcd", "description": "DHCP client.", "example": "sudo dhcpcd {{[-k|--release]}}"}
,
  {"command": "dialog", "description": "Display dialog boxes on the terminal.", "example": "dialog --msgbox \"{{Message}}\" {{height}} {{width}}"}
,
  {"command": "diff3", "description": "Compare three files line by line.", "example": "diff3 {{path/to/file1}} {{path/to/file2}} {{path/to/file3}}"}
,
  {"command": "diffimg", "description": "Calculate intersection between two images.", "example": "diffimg {{path/to/input_image1.ext}} {{path/to/input_image2.ext}} {{path/to/output_image.ext}}"}
,
  {"command": "dirb", "description": "Scan HTTP-based webservers for directories and files.", "example": "dirb {{https://example.org}}"}
,
  {"command": "dirbuster", "description": "Brute force directories and filenames on servers.", "example": "dirbuster -u {{http://example.com}}"}
,
  {"command": "dir", "description": "List directory contents using one line per file, special characters are represented by backslash escape sequences.", "example": "dir {{[-a|--all]}}"}
,
  {"command": "distrobox-create", "description": "Create a Distrobox container.", "example": "distrobox-create {{container_name}} {{[-i|--image]}} {{ubuntu:latest}}"}
,
  {"command": "distrobox-enter", "description": "Enter a Distrobox container.", "example": "distrobox-enter {{container_name}}"}
,
  {"command": "distrobox-export", "description": "Export app/service/binary from container to host OS.", "example": "distrobox-export {{[-a|--app]}} {{package}} {{[-ef|--extra-flags]}} \"--foreground\""}
,
  {"command": "distrobox-host-exec", "description": "Execute a command on the host from inside a Distrobox container.", "example": "distrobox-host-exec \"{{command}}\""}
,
  {"command": "distrobox-list", "description": "List all Distrobox containers.", "example": "distrobox-list"}
,
  {"command": "distrobox", "description": "Use any Linux distribution inside your terminal in a container. Install & use packages inside it while tightly integrating with the host OS, sharing storage (`home` directory) and hardware.", "example": "tldr distrobox-create"}
,
  {"command": "distrobox-rm", "description": "Remove a Distrobox container.", "example": "distrobox-rm {{container_name}}"}
,
  {"command": "distrobox-stop", "description": "Stop a Distrobox container.", "example": "distrobox-stop {{container_name}}"}
,
  {"command": "distrobox-upgrade", "description": "Upgrade one or multiple Distrobox containers.", "example": "distrobox-upgrade {{container_name}}"}
,
  {"command": "dkms", "description": "A framework that allows for dynamic building of kernel modules.", "example": "dkms status"}
,
  {"command": "dmenu", "description": "Dynamic menu.", "example": "{{ls}} | dmenu"}
,
  {"command": "dmesg", "description": "Write the kernel messages to `stdout`.", "example": "sudo dmesg"}
,
  {"command": "dmidecode", "description": "Display the DMI (alternatively known as SMBIOS) table contents in a human-readable format.", "example": "sudo dmidecode"}
,
  {"command": "dm-tool", "description": "A tool to communicate with the display manager.", "example": "dm-tool switch-to-greeter"}
,
  {"command": "dnf5-group", "description": "This command is an alias of `dnf group`.", "example": "tldr dnf group"}
,
  {"command": "dnf5", "description": "Package management utility for RHEL, Fedora, and CentOS (it replaces dnf, which in turn replaced yum).", "example": "sudo dnf5 upgrade"}
,
  {"command": "dnf-config-manager", "description": "Manage DNF configuration options and repositories on Fedora-based systems.", "example": "dnf config-manager --add-repo={{repository_url}}"}
,
  {"command": "dnf-deplist", "description": "This command is an alias of `dnf repoquery --deplist`.", "example": "tldr dnf repoquery"}
,
  {"command": "dnf-group", "description": "Manage virtual collections of packages on Fedora-based systems.", "example": "dnf {{[grp|group]}} list"}
,
  {"command": "dnf-install", "description": "Install packages on Red Hat-based distributions.", "example": "sudo dnf {{[in|install]}} {{package1 package2 ...}}"}
,
  {"command": "dnf", "description": "Package management utility for RHEL, Fedora, and CentOS (replaces yum).", "example": "sudo dnf {{[up|upgrade]}}"}
,
  {"command": "dnf-repoquery", "description": "Query packages for information.", "example": "dnf {{[rq|repoquery]}} --deplist {{package}}"}
,
  {"command": "dnsdomainname", "description": "Show the system's DNS domain name.", "example": "dnsdomainname"}
,
  {"command": "dnsmap", "description": "The dnsmap command scans a domain for common subdomains e.g. smtp.domain.org.", "example": "dnsmap {{example.com}}"}
,
  {"command": "dnsrecon", "description": "DNS enumeration tool.", "example": "dnsrecon {{[-d|--domain]}} {{example.com}} --db {{path/to/database.sqlite}}"}
,
  {"command": "dnstracer", "description": "The dnstracer command determines where a DNS gets its information from.", "example": "dnstracer {{www.example.com}}"}
,
  {"command": "dockerd", "description": "A persistent process to start and manage Docker containers.", "example": "dockerd"}
,
  {"command": "dolphin", "description": "KDE's file manager to manage files and directories.", "example": "dolphin"}
,
  {"command": "do-release-upgrade", "description": "The Ubuntu release upgrader.", "example": "sudo do-release-upgrade"}
,
  {"command": "dos2unix", "description": "Change DOS-style line endings to Unix-style.", "example": "dos2unix {{path/to/file}}"}
,
  {"command": "dphys-swapfile", "description": "Manage the swap file on Debian-based Linux systems.", "example": "dphys-swapfile swapoff"}
,
  {"command": "dpigs", "description": "Show which installed packages occupy the most space on `apt` based systems.", "example": "dpigs {{[-n|--lines]}} {{n}}"}
,
  {"command": "dpkg-deb", "description": "Pack, unpack and provide information about Debian archives.", "example": "dpkg-deb {{[-I|--info]}} {{path/to/file.deb}}"}
,
  {"command": "dpkg", "description": "Debian package manager.", "example": "dpkg {{[-i|--install]}} {{path/to/file.deb}}"}
,
  {"command": "dpkg-query", "description": "Display information about installed packages.", "example": "dpkg-query {{[-l|--list]}}"}
,
  {"command": "dpkg-reconfigure", "description": "Reconfigure an already installed package.", "example": "dpkg-reconfigure {{package1 package2 ...}}"}
,
  {"command": "dracut", "description": "Generate initramfs images to boot the Linux kernel.", "example": "dracut"}
,
  {"command": "drawing", "description": "Free basic raster image editor in GNOME desktop environment.", "example": "drawing"}
,
  {"command": "dropbearconvert", "description": "Convert between Dropbear and OpenSSH private key formats.", "example": "dropbearconvert openssh dropbear {{path/to/input_key}} {{path/to/output_key}}"}
,
  {"command": "dropbearkey", "description": "Generate SSH keys in Dropbear format.", "example": "dropbearkey -t {{ed25519}} -f {{path/to/key_file}}"}
,
  {"command": "dstat", "description": "Versatile tool for generating system resource statistics.", "example": "dstat"}
,
  {"command": "dumpe2fs", "description": "Print the super block and blocks group information for ext2/ext3/ext4 filesystems.", "example": "dumpe2fs {{/dev/sdXN}}"}
,
  {"command": "dump.exfat", "description": "Show on-disk information of an exFAT filesystem.", "example": "dump.exfat {{/dev/sdXY}}"}
,
  {"command": "duperemove", "description": "Finds duplicate filesystem extents and optionally schedule them for deduplication.", "example": "duperemove -r {{path/to/directory}}"}
,
  {"command": "dysk", "description": "Display filesystem information in a table.", "example": "dysk"}
,
  {"command": "e2freefrag", "description": "Print the free space fragmentation information for ext2/ext3/ext4 filesystems.", "example": "e2freefrag {{/dev/sdXN}}"}
,
  {"command": "e2fsck", "description": "Check a Linux ext2/ext3/ext4 filesystem. The partition should be unmounted.", "example": "sudo e2fsck {{/dev/sdXN}}"}
,
  {"command": "e2image", "description": "Save critical ext2/ext3/ext4 filesystem metadata to a file.", "example": "e2image {{/dev/sdXN}} {{path/to/image_file}}"}
,
  {"command": "e2label", "description": "Change the label on an ext2/ext3/ext4 filesystem.", "example": "e2label {{/dev/sda1}} \"{{label_name}}\""}
,
  {"command": "e2undo", "description": "Replay undo logs for an ext2/ext3/ext4 filesystem.", "example": "e2undo -h {{path/to/undo_file}} {{/dev/sdXN}}"}
,
  {"command": "e4defrag", "description": "Defragment an ext4 filesystem.", "example": "e4defrag {{/dev/sdXN}}"}
,
  {"command": "ebuild", "description": "A low level interface to the Gentoo Portage system.", "example": "ebuild {{path/to/file.ebuild}} manifest"}
,
  {"command": "eclean-kernel", "description": "Remove old kernels in Gentoo.", "example": "sudo eclean-kernel {{[-l|--list-kernels]}}"}
,
  {"command": "eclean", "description": "Clean repository source files and binary packages.", "example": "sudo eclean distfiles"}
,
  {"command": "edit", "description": "An alias to a `run-mailcap`'s action edit.", "example": "edit {{filename}}"}
,
  {"command": "edquota", "description": "Edit quotas for a user or group. By default it operates on all filesystems with quotas.", "example": "edquota {{[-u|--user]}} $(whoami)"}
,
  {"command": "efibootmgr", "description": "Manipulate the UEFI Boot Manager.", "example": "efibootmgr {{[-u|--unicode]}}"}
,
  {"command": "eglinfo", "description": "Display platform EGL information.", "example": "eglinfo"}
,
  {"command": "ego", "description": "Funtoo's official system personality management tool.", "example": "ego sync"}
,
  {"command": "einfo", "description": "Provides the number of records indexed in each database field, the last update date of the database, and the available links from the database to other Entrez databases.", "example": "einfo -dbs"}
,
  {"command": "eix", "description": "Utilities for searching local Gentoo packages.", "example": "eix {{query}}"}
,
  {"command": "eject", "description": "Eject cds, floppy disks and tape drives.", "example": "eject {{[-d|--default]}}"}
,
  {"command": "elink", "description": "Look up precomputed neighbors within a database, or find associated records in other databases.", "example": "esearch -db pubmed -query \"{{selective serotonin reuptake inhibitor}}\" | elink -target nuccore"}
,
  {"command": "emerge", "description": "Gentoo Linux package manager utility.", "example": "sudo emerge --sync"}
,
  {"command": "engrampa", "description": "Package files into zip/tar file in MATE desktop environment.", "example": "engrampa"}
,
  {"command": "enum4linux", "description": "Enumerate Windows and Samba information from remote systems.", "example": "enum4linux -a {{remote_host}}"}
,
  {"command": "envycontrol", "description": "GPU switching utility for Nvidia Optimus laptops.", "example": "sudo envycontrol {{[-s|--switch]}} {{nvidia|integrated|hybrid}}"}
,
  {"command": "eopkg", "description": "Package manager for Solus.", "example": "sudo eopkg install {{package}}"}
,
  {"command": "equery", "description": "View information about Portage packages.", "example": "equery list '*'"}
,
  {"command": "esa-snap", "description": "Sentinel Application Platform (SNAP) for processing satellite data from the European Space Agency (ESA).", "example": "snap --nosplash --nogui --modules --list --refresh"}
,
  {"command": "esearch", "description": "Perform a new Entrez search using terms in indexed fields.", "example": "esearch -db pubmed -query \"{{selective serotonin reuptake inhibitor}}\""}
,
  {"command": "eselect-kernel", "description": "An `eselect` module for managing the `/usr/src/linux` symlink.", "example": "eselect kernel list"}
,
  {"command": "eselect-locale", "description": "An `eselect` module for managing the `LANG` environment variable, which sets the system language.", "example": "eselect locale list"}
,
  {"command": "eselect", "description": "Gentoo's multi-purpose configuration and management tool.", "example": "eselect"}
,
  {"command": "eselect-news", "description": "An `eselect` module for reading Gentoo news items.", "example": "eselect news list {{all|new}}"}
,
  {"command": "eselect-profile", "description": "An `eselect` module for managing the `/etc/portage/make.profile` symlink, which sets the system profile.", "example": "eselect profile list"}
,
  {"command": "eselect-repository", "description": "An `eselect` module for configuring ebuild repositories for Portage.", "example": "eselect repository list"}
,
  {"command": "etckeeper", "description": "Track system configuration files in Git.", "example": "sudo etckeeper init"}
,
  {"command": "ethtool", "description": "Display and modify Network Interface Controller (NIC) parameters.", "example": "ethtool {{eth0}}"}
,
  {"command": "eu-readelf", "description": "Display information about ELF files.", "example": "eu-readelf {{[-a|--all]}} {{path/to/file}}"}
,
  {"command": "euse", "description": "Enable, disable, and obtain information about Gentoo USE flags.", "example": "euse {{[-a|--active]}} {{[-g|--global]}}"}
,
  {"command": "evtest", "description": "Display information from input device drivers.", "example": "sudo evtest"}
,
  {"command": "eww", "description": "Implement your own custom widgets in any window manager.", "example": "eww daemon"}
,
  {"command": "exch", "description": "Swap the filepaths and filenames of two files.", "example": "exch {{path/to/file1}} {{path/to/file2}}"}
,
  {"command": "exec", "description": "Execute a command without creating a child process.", "example": "exec {{command -with -flags}}"}
,
  {"command": "exif", "description": "Show and change EXIF information in JPEG files.", "example": "exif {{path/to/image.jpg}}"}
,
  {"command": "exiqgrep", "description": "Perl script offering possibilities to `grep` in the Exim queue output.", "example": "exiqgrep -f '<{{email@example.com}}>'"}
,
  {"command": "expac", "description": "A data extraction tool for alpm databases, offering printf-like flexibility for pacman-based utilities.", "example": "expac {{[-S|--sync]}} '%D' {{package}}"}
,
  {"command": "expect", "description": "Script executor that interacts with other programs that require user input.", "example": "expect {{path/to/file}}"}
,
  {"command": "export", "description": "Export shell variables to child processes.", "example": "export {{VARIABLE}}={{value}}"}
,
  {"command": "extrace", "description": "Trace exec() calls.", "example": "sudo extrace"}
,
  {"command": "extrepo", "description": "Manage external Debian repositories.", "example": "extrepo search {{package}}"}
,
  {"command": "extundelete", "description": "Recover deleted files from ext3 or ext4 partitions by parsing the journal.", "example": "sudo extundelete {{/dev/sdXN}} --restore-all"}
,
  {"command": "eyed3", "description": "Read and manipulate metadata of MP3 files.", "example": "eyeD3 {{filename.mp3}}"}
,
  {"command": "f5fpc", "description": "A proprietary commercial SSL VPN client by BIG-IP Edge.", "example": "sudo f5fpc --start"}
,
  {"command": "factorio", "description": "Create and start a headless Factorio server.", "example": "{{path/to/factorio}} --create {{path/to/save_file.zip}}"}
,
  {"command": "fadvise", "description": "Control Linux file caching behavior.", "example": "fadvise {{[-a|--advice]}} willneeded {{path/to/file_or_directory}}"}
,
  {"command": "fail2ban-client", "description": "Configure and control fail2ban server.", "example": "fail2ban-client status {{jail}}"}
,
  {"command": "faillock", "description": "Display and modify authentication failure record files.", "example": "faillock"}
,
  {"command": "fakeroot", "description": "Run a command in an environment faking root privileges for file manipulation.", "example": "fakeroot"}
,
  {"command": "faketime", "description": "Fake the system time for a command.", "example": "faketime '{{today 23:30}}' {{date}}"}
,
  {"command": "fallocate", "description": "Reserve or deallocate disk space to files.", "example": "fallocate {{[-l|--length]}} {{700M}} {{path/to/file}}"}
,
  {"command": "fancontrol", "description": "Automated fan speed management.", "example": "fancontrol"}
,
  {"command": "farge", "description": "Display the color of a specific pixel on the screen in either hexadecimal or RGB formats.", "example": "farge"}
,
  {"command": "fatlabel", "description": "Get or set the label of a FAT32 partition.", "example": "fatlabel {{/dev/sda1}}"}
,
  {"command": "fatrace", "description": "Report file access events.", "example": "sudo fatrace"}
,
  {"command": "fcrackzip", "description": "ZIP archive password cracking utility.", "example": "fcrackzip {{[-b|--brute-force]}} {{[-l|--length]}} 4-8 {{[-c|--charset]}} aA1 {{archive}}"}
,
  {"command": "fdisk", "description": "Manage partition tables and partitions on a hard disk.", "example": "sudo fdisk {{[-l|--list]}}"}
,
  {"command": "feedreader", "description": "A GUI desktop RSS client.", "example": "feedreader --unreadCount"}
,
  {"command": "filefrag", "description": "Report how badly fragmented a particular file might be.", "example": "filefrag {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "file-rename", "description": "Rename multiple files.", "example": "rename {{'s/foo/bar/'}} {{*}}"}
,
  {"command": "finch", "description": "Console-based modular messaging client.", "example": "finch"}
,
  {"command": "fincore", "description": "Display how much cache memory a file is taking.", "example": "fincore {{path/to/file}}"}
,
  {"command": "findfs", "description": "Finds a filesystem by label or UUID.", "example": "findfs LABEL={{label}}"}
,
  {"command": "findmnt", "description": "Find your filesystem.", "example": "findmnt"}
,
  {"command": "firejail", "description": "Securely sandboxes processes to containers using built-in Linux capabilities.", "example": "sudo firecfg"}
,
  {"command": "firewall-cmd", "description": "The firewalld command-line client.", "example": "firewall-cmd --list-all-zones"}
,
  {"command": "fixfiles", "description": "Fix file SELinux security contexts.", "example": "fixfiles -B"}
,
  {"command": "flameshot", "description": "Screenshot utility with a GUI.", "example": "flameshot full"}
,
  {"command": "flash", "description": "Flash cards in the terminal.", "example": "flash"}
,
  {"command": "flashrom", "description": "Read, write, verify and erase flash chips.", "example": "flashrom {{[-p|--programmer]}} {{programmer}}"}
,
  {"command": "flatpak-builder", "description": "Help build application dependencies.", "example": "flatpak-builder {{path/to/build_directory}} {{path/to/manifest}}"}
,
  {"command": "flatpak-mask", "description": "Mask out updates and automatic installation.", "example": "flatpak mask {{com.example.app}}"}
,
  {"command": "flatpak", "description": "Build, install and run flatpak applications and runtimes.", "example": "flatpak run {{com.example.app}}"}
,
  {"command": "flatpak-remote-info", "description": "Show information about an application or runtime in a remote.", "example": "flatpak remote-info {{remote_name}} {{com.example.app}}"}
,
  {"command": "flatpak-run", "description": "Run flatpak applications and runtimes.", "example": "flatpak run {{com.example.app}}"}
,
  {"command": "flatpak-update", "description": "Update flatpak applications and runtimes.", "example": "flatpak update"}
,
  {"command": "flex", "description": "Lexical analyzer generator.", "example": "flex {{analyzer.l}}"}
,
  {"command": "flock", "description": "Manage locks from shell scripts.", "example": "flock {{path/to/lock.lock}} {{[-c|--command]}} \"{{command}}\""}
,
  {"command": "fluidsynth", "description": "Synthesize audio from MIDI files.", "example": "fluidsynth {{path/to/soundfont.sf2}} {{path/to/file.midi}}"}
,
  {"command": "fold", "description": "Folds long lines for fixed-width output devices.", "example": "fold {{[-w|--width]}} {{width}} {{path/to/file}}"}
,
  {"command": "foreman", "description": "Manage Procfile-based applications.", "example": "foreman start"}
,
  {"command": "fprintd-delete", "description": "Remove fingerprints from the database.", "example": "fprintd-delete {{username}}"}
,
  {"command": "fprintd-enroll", "description": "Enroll fingerprints into the database.", "example": "fprintd-enroll"}
,
  {"command": "fprintd-list", "description": "List enrolled fingerprints.", "example": "fprintd-list {{username}}"}
,
  {"command": "fprintd", "description": "Fingerprint management daemon.", "example": "man fprintd"}
,
  {"command": "fprintd-verify", "description": "Verify fingerprints against the database.", "example": "fprintd-verify"}
,
  {"command": "fpsync", "description": "Execute several synchronization processes locally or on several remote workers through SSH.", "example": "fpsync -v {{/path/to/source/}} {{/path/to/destination/}}"}
,
  {"command": "free", "description": "Display amount of free and used memory in the system.", "example": "free"}
,
  {"command": "fsck", "description": "Check the integrity of a filesystem or repair it. The filesystem should be unmounted at the time the command is run.", "example": "sudo fsck {{/dev/sdXN}}"}
,
  {"command": "fscrypt", "description": "Go tool for managing Linux filesystem encryption.", "example": "fscrypt setup"}
,
  {"command": "fstrim", "description": "Discard unused blocks on a mounted filesystem.", "example": "sudo fstrim {{[-a|--all]}}"}
,
  {"command": "fuser", "description": "Display process IDs currently using files or sockets.", "example": "fuser {{path/to/file_or_directory}}"}
,
  {"command": "fuzzel", "description": "A Wayland-native application launcher and fuzzy finder, inspired by `rofi` and `dmenu`.", "example": "fuzzel"}
,
  {"command": "fwconsole", "description": "Manage and configure your FreePBX system (PBX server).", "example": "fwconsole reload"}
,
  {"command": "fwupdmgr", "description": "Update device firmware, including UEFI, using `fwupd`.", "example": "fwupdmgr get-devices"}
,
  {"command": "fwupdtool", "description": "Update device firmware manually or manipulate firmware files.", "example": "fwupdtool get-devices"}
,
  {"command": "gamescope", "description": "A micro-compositor used as a game layer.", "example": "gamescope -- {{program}}"}
,
  {"command": "gbp", "description": "A system to integrate the Debian package build system with Git.", "example": "gbp import-dsc {{path/to/package.dsc}}"}
,
  {"command": "gcov", "description": "Code coverage analysis and profiling tool that discovers untested parts of a program.", "example": "gcov {{path/to/file.cpp}}"}
,
  {"command": "gcrane-completion", "description": "Generate the autocompletion script for gcrane for the specified shell.", "example": "gcrane completion {{shell_name}}"}
,
  {"command": "gdebi", "description": "Easily install `.deb` files.", "example": "gdebi {{path/to/package.deb}}"}
,
  {"command": "gedit", "description": "Text editor of the GNOME Desktop project.", "example": "gedit {{path/to/file}}"}
,
  {"command": "genfstab", "description": "Generate output suitable for addition to the `/etc/fstab` file.", "example": "genfstab -U {{/mnt}} >> {{/mnt/etc/fstab}}"}
,
  {"command": "genie", "description": "Set up and use a \"bottle\" namespace to run systemd under WSL (Windows Subsystem for Linux).", "example": "genie {{[-i|--initialize]}}"}
,
  {"command": "genisoimage", "description": "Pre-mastering program to generate ISO9660/Joliet/HFS hybrid filesystems.", "example": "genisoimage -o {{myimage.iso}} {{path/to/source_directory}}"}
,
  {"command": "genkernel", "description": "Gentoo Linux utility to compile and install kernels.", "example": "sudo genkernel all"}
,
  {"command": "getcap", "description": "Display the name and capabilities of each specified file.", "example": "getcap {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "getconf", "description": "Get configuration values from your Linux system.", "example": "getconf -a"}
,
  {"command": "getenforce", "description": "Get the current mode of SELinux (i.e. enforcing, permissive, or disabled).", "example": "getenforce"}
,
  {"command": "getent", "description": "Get entries from Name Service Switch libraries.", "example": "getent group"}
,
  {"command": "getfacl", "description": "Get file access control lists (ACL).", "example": "getfacl {{path/to/file_or_directory}}"}
,
  {"command": "getfattr", "description": "Display file names and extended attributes.", "example": "getfattr {{[-d|--dump]}} {{path/to/file}}"}
,
  {"command": "getopt", "description": "Parse command-line arguments.", "example": "getopt {{[-o|--options]}} vV {{[-l|--longoptions]}} verbose,version -- --version --verbose"}
,
  {"command": "getsebool", "description": "Get SELinux boolean value.", "example": "getsebool {{httpd_can_connect_ftp}}"}
,
  {"command": "gif2webp", "description": "Convert a GIF image to WebP.", "example": "gif2webp {{path/to/image.gif}} -o {{path/to/image.webp}}"}
,
  {"command": "gio", "description": "Handle local and virtual files (GVfs).", "example": "gio open {{path/to/file}}"}
,
  {"command": "gio-trash", "description": "Move files to the trash bin.", "example": "gio trash {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"}
,
  {"command": "gnome-calculator", "description": "The official calculator for the GNOME desktop environment.", "example": "gnome-calculator"}
,
  {"command": "gnome-extensions", "description": "Manage gnome extensions from the terminal.", "example": "gnome-extensions list"}
,
  {"command": "gnome-screenshot", "description": "Capture the screen, a window, or a user-defined area and save the image to a file.", "example": "gnome-screenshot"}
,
  {"command": "gnome-software", "description": "Add and remove applications and update your system.", "example": "gnome-software"}
,
  {"command": "gnome-terminal", "description": "The GNOME Terminal emulator.", "example": "gnome-terminal"}
,
  {"command": "goaccess", "description": "An open source real-time web log analyzer.", "example": "goaccess {{path/to/logfile1 path/to/file2 ...}}"}
,
  {"command": "goldeneye.py", "description": "A HTTP DoS test tool.", "example": "./goldeneye.py {{url}}"}
,
  {"command": "goobook", "description": "Access Google contacts from `mutt` or the command-line.", "example": "goobook authenticate"}
,
  {"command": "google-chrome-stable", "description": "This command is an alias of `chromium`.", "example": "tldr chromium"}
,
  {"command": "gpasswd", "description": "Administer `/etc/group` and `/etc/gshadow`.", "example": "sudo gpasswd {{[-A|--administrators]}} {{user1,user2}} {{group}}"}
,
  {"command": "gpclient", "description": "Connect to a GlobalProtect VPN on Linux via OpenConnect.", "example": "gpclient connect {{vpn_gateway_url}}"}
,
  {"command": "grim", "description": "Grab images (Screenshots) from a Wayland compositor.", "example": "grim"}
,
  {"command": "groupadd", "description": "Add user groups to the system.", "example": "sudo groupadd {{group_name}}"}
,
  {"command": "groupdel", "description": "Delete existing user groups from the system.", "example": "sudo groupdel {{group_name}}"}
,
  {"command": "groupmod", "description": "Modify existing user groups in the system.", "example": "sudo groupmod {{[-n|--new-name]}} {{new_group}} {{group_name}}"}
,
  {"command": "growpart", "description": "Extend a partition in a disk or disk image to fill available space.", "example": "growpart {{/dev/sdX}} {{n}}"}
,
  {"command": "grub2-mkpasswd-pbkdf2", "description": "Generate a hashed password for GRUB.", "example": "sudo grub2-mkpasswd-pbkdf2 {{[-c|--iteration-count]}} {{number_of_pbkdf2_iterations}} {{[-s|--salt]}} {{salt_length}}"}
,
  {"command": "grub-bios-setup", "description": "Set up a device to use GRUB with a BIOS configuration.", "example": "grub-bios-setup {{/dev/sdX}}"}
,
  {"command": "grubby", "description": "Tool for configuring `grub` and `zipl` bootloaders.", "example": "sudo grubby --update-kernel=ALL --args '{{quiet console=ttyS0}}'"}
,
  {"command": "grub-editenv", "description": "Edit GRUB environment variables.", "example": "grub-editenv /boot/grub/grubenv set default={{Ubuntu}}"}
,
  {"command": "grub-file", "description": "Check if a file is of a bootable image type.", "example": "grub-file --is-arm-efi {{path/to/file}}"}
,
  {"command": "grub-install", "description": "Install GRUB to a device.", "example": "grub-install --target {{i386-pc}} {{path/to/device}}"}
,
  {"command": "grub-mkconfig", "description": "Generate a GRUB configuration file.", "example": "sudo grub-mkconfig"}
,
  {"command": "grub-reboot", "description": "Set the default boot entry for GRUB, for the next boot only.", "example": "sudo grub-reboot {{entry_number}}"}
,
  {"command": "grub-script-check", "description": "The program `grub-script-check` takes a GRUB script file and checks it for syntax errors.", "example": "grub-script-check {{path/to/grub_config_file}}"}
,
  {"command": "grub-set-default", "description": "Set the default boot entry for GRUB.", "example": "sudo grub-set-default {{entry_number}}"}
,
  {"command": "gsettings", "description": "Query and modify dconf settings with schema validation.", "example": "gsettings set {{org.example.schema}} {{example-key}} {{value}}"}
,
  {"command": "gs", "description": "GhostScript, a PDF and PostScript interpreter.", "example": "gs -dQUIET -dBATCH {{file.pdf}}"}
,
  {"command": "gtk-launch", "description": "Launch applications from `.desktop` files that reside in standard locations.", "example": "gtk-launch {{Application_name}}"}
,
  {"command": "guake", "description": "A drop-down terminal for GNOME.", "example": "<F12>"}
,
  {"command": "guix-package", "description": "Install, upgrade and remove Guix packages, or rollback to previous configurations.", "example": "guix package {{[-i|--install]}} {{package}}"}
,
  {"command": "gummy", "description": "Screen brightness/temperature manager for Linux/X11.", "example": "gummy {{[-t|--temperature]}} {{3000}}"}
,
  {"command": "gzexe", "description": "Compress executable files while keeping them executable.", "example": "gzexe {{path/to/executable}}"}
,
  {"command": "halt", "description": "Halt the system.", "example": "halt"}
,
  {"command": "handlr", "description": "Manage your default applications.", "example": "handlr open {{https://example.com}}"}
,
  {"command": "hardinfo", "description": "Show hardware information in GUI window.", "example": "hardinfo"}
,
  {"command": "haveged", "description": "Hardware-based random number generator.", "example": "sudo haveged"}
,
  {"command": "hcitool", "description": "Monitor, configure connections, and send special commands to Bluetooth devices.", "example": "hcitool scan"}
,
  {"command": "hdparm", "description": "Get and set SATA and IDE hard drive parameters.", "example": "sudo hdparm -I {{/dev/device}}"}
,
  {"command": "head", "description": "Output the first part of files.", "example": "head {{[-n|--lines]}} {{count}} {{path/to/file}}"}
,
  {"command": "hexdump", "description": "An ASCII, decimal, hexadecimal, octal dump.", "example": "hexdump {{path/to/file}}"}
,
  {"command": "hlint", "description": "Suggest improvements to Haskell code.", "example": "hlint {{path/to/file}} options"}
,
  {"command": "hollywood", "description": "Fill your console with Hollywood melodrama technobabble.", "example": "hollywood"}
,
  {"command": "homectl", "description": "Create, remove, change or inspect home directories using the systemd-homed service.", "example": "homectl list"}
,
  {"command": "homeshick", "description": "Synchronize Git dotfiles.", "example": "homeshick generate {{castle_name}}"}
,
  {"command": "hostnamectl", "description": "Get or set the hostname of the computer.", "example": "hostnamectl"}
,
  {"command": "htpdate", "description": "Synchronize local date and time via HTTP headers from web servers.", "example": "sudo htpdate {{host}}"}
,
  {"command": "http_load", "description": "An HTTP benchmarking tool.", "example": "http_load -rate {{20}} -seconds {{60}} {{path/to/urls.txt}}"}
,
  {"command": "http-prompt", "description": "An interactive HTTP client featuring autocomplete and syntax highlighting.", "example": "http-prompt"}
,
  {"command": "hwclock", "description": "Read or change the hardware clock. Usually requires root.", "example": "hwclock"}
,
  {"command": "hwinfo", "description": "Probe for the hardware present in the system.", "example": "hwinfo --gfxcard"}
,
  {"command": "hyprctl", "description": "Control parts of the Hyprland Wayland compositor.", "example": "hyprctl reload"}
,
  {"command": "hyprpm", "description": "Control plugins for the Hyprland Wayland compositor.", "example": "hyprpm add {{git_url}}"}
,
  {"command": "i386", "description": "This command is an alias of `setarch i386`.", "example": "tldr setarch"}
,
  {"command": "i3exit", "description": "Exit the i3 window manager.", "example": "i3exit logout"}
,
  {"command": "i3-scrot", "description": "Wrapper script around the screenshot utility `scrot` for the i3 window manager.", "example": "i3-scrot"}
,
  {"command": "i3status", "description": "Status line for the i3 window manager.", "example": "i3status"}
,
  {"command": "i7z", "description": "An Intel CPU (only i3, i5 and i7) realtime reporting tool.", "example": "sudo i7z"}
,
  {"command": "ico", "description": "Display an animation of a polyhedron.", "example": "ico -sleep {{0.1}}"}
,
  {"command": "id3v2", "description": "Manage id3v2 tags, converts and lists id3v1.", "example": "id3v2 {{[-L|--list-genres]}}"}
,
  {"command": "ifdown", "description": "Disable network interfaces.", "example": "ifdown {{eth0}}"}
,
  {"command": "ifmetric", "description": "An IPv4 route metrics manipulation tool.", "example": "sudo ifmetric {{interface}} {{value}}"}
,
  {"command": "ifstat", "description": "View network interface statistics.", "example": "ifstat"}
,
  {"command": "ifstatus", "description": "Display OpenWRT interface status in JSON format.", "example": "ifstatus {{interface_name}}"}
,
  {"command": "iftop", "description": "Show bandwidth usage on an interface by host.", "example": "sudo iftop"}
,
  {"command": "ifup", "description": "Enable network interfaces.", "example": "ifup {{eth0}}"}
,
  {"command": "ikaros", "description": "Vanilla OS Tool for managing drivers for your device.", "example": "ikaros install {{device}}"}
,
  {"command": "img2txt", "description": "Convert images to colour ASCII characters and output them to text-based coloured files.", "example": "img2txt {{[-W|--width]}} {{10}} {{path/to/image}}"}
,
  {"command": "img2webp", "description": "Convert an image to WebP.", "example": "img2webp {{path/to/image}} -o {{path/to/image.webp}}"}
,
  {"command": "imgp", "description": "Resize and rotate JPEG and PNG images.", "example": "imgp {{[-x|--res]}} {{1366x1000}} {{path/to/directory}} {{path/to/file}}"}
,
  {"command": "importctl", "description": "Download, Import, or Export disk images.", "example": "sudo importctl pull-tar {{URL}} {{path/to/directory}}"}
,
  {"command": "imv", "description": "CLI image viewer for wayland and X11 aimed at tiling window managers.", "example": "imv {{path/to/image1.ext path/to/image2.ext ...}}"}
,
  {"command": "informant", "description": "Read Arch Linux package news.", "example": "sudo informant read"}
,
  {"command": "init", "description": "Linux run level manager.", "example": "sudo init 5"}
,
  {"command": "inotifywait", "description": "Waits for changes to files.", "example": "inotifywait {{path/to/file}}"}
,
  {"command": "insmod", "description": "Dynamically load modules into the Linux Kernel.", "example": "sudo insmod {{path/to/module.ko}}"}
,
  {"command": "instaloader", "description": "Download pictures, videos, captions, and other metadata from Instagram.", "example": "instaloader {{profile_name}}"}
,
  {"command": "intercept", "description": "Read raw input events from a specified input event device and redirect it to stdout.", "example": "sudo intercept -g {{/dev/input/eventX}}"}
,
  {"command": "inxi", "description": "Print a summary of system information and resources for debugging purposes.", "example": "inxi"}
,
  {"command": "ionice", "description": "Get or set program I/O scheduling class and priority.", "example": "ionice {{[-c|--class]}} {{scheduling_class}} {{[-n|--classdata]}} {{priority}} {{command}}"}
,
  {"command": "iostat", "description": "Report statistics for devices and partitions.", "example": "iostat"}
,
  {"command": "ip6tables", "description": "This command is an alias of `iptables` for the IPv6 firewall.", "example": "tldr iptables"}
,
  {"command": "ip6tables-restore", "description": "This command is an alias of `iptables-restore` for the IPv6 firewall.", "example": "tldr iptables-restore"}
,
  {"command": "ip6tables-save", "description": "This command is an alias of `iptables-save` for the IPv6 firewall.", "example": "tldr iptables-save"}
,
  {"command": "ip-address", "description": "IP Address management subcommand.", "example": "ip {{[a|address]}}"}
,
  {"command": "ipcmk", "description": "Create IPC (Inter-process Communication) resources.", "example": "ipcmk {{[-M|--shmem]}} {{segment_size_in_bytes}}"}
,
  {"command": "ipcrm", "description": "Delete IPC (Inter-process Communication) resources.", "example": "ipcrm {{[-m|--shmem-id]}} {{shmem_id}}"}
,
  {"command": "ipcs", "description": "Show information about the usage of System V IPC facilities: shared memory segments, message queues, and semaphore arrays.", "example": "ipcs"}
,
  {"command": "ip-link", "description": "Manage network interfaces.", "example": "ip {{[l|link]}}"}
,
  {"command": "ip-maddress", "description": "Manage multicast addresses.", "example": "ip {{[m|maddress]}}"}
,
  {"command": "ip", "description": "Show/manipulate routing, devices, policy routing and tunnels.", "example": "ip {{[a|address]}}"}
,
  {"command": "ipmitool", "description": "Interface with the Intelligent Platform Management Interface (IPMI).", "example": "systemctl start ipmidrv"}
,
  {"command": "ip-neighbour", "description": "Neighbour/ARP tables management IP subcommand.", "example": "ip {{[n|neighbour]}}"}
,
  {"command": "ip-route-add", "description": "Add a new networking route.", "example": "sudo ip {{[r|route]}} {{[a|add]}} default via {{gateway_ip}}"}
,
  {"command": "ip-route-get", "description": "Get a single route to a destination and print its contents exactly as the kernel sees it.", "example": "ip {{[r|route]}} {{[g|get]}} {{1.1.1.1}}"}
,
  {"command": "ip-route-list", "description": "Display subcommand for IP Routing table management.", "example": "ip {{[r|route]}} {{[l|list]}}"}
,
  {"command": "ip-route", "description": "IP Routing table management subcommand.", "example": "ip {{[r|route]}}"}
,
  {"command": "ip-route-show", "description": "This command is an alias of `ip route list`.", "example": "tldr ip route list"}
,
  {"command": "ip-rule", "description": "IP routing policy database management.", "example": "ip {{[ru|rule]}}"}
,
  {"command": "ipset", "description": "Create IP sets for firewall rules.", "example": "ipset create {{set_name}} hash:ip"}
,
  {"command": "iptables", "description": "Configure tables, chains and rules of the Linux kernel IPv4 firewall.", "example": "sudo iptables {{[-vnL --line-numbers|--verbose --numeric --list --line-numbers]}}"}
,
  {"command": "iptables-restore", "description": "Restore the `iptables` IPv4 configuration.", "example": "sudo iptables-restore {{path/to/file}}"}
,
  {"command": "iptables-save", "description": "Save the `iptables` IPv4 configuration.", "example": "sudo iptables-save"}
,
  {"command": "isoinfo", "description": "Utility programs for dumping and verifying ISO disk images.", "example": "isoinfo -f -i {{path/to/image.iso}}"}
,
  {"command": "isosize", "description": "Display the size of an ISO file.", "example": "isosize {{path/to/file.iso}}"}
,
  {"command": "iwconfig", "description": "Configure and show the parameters of a wireless network interface.", "example": "iwconfig"}
,
  {"command": "iwctl", "description": "Control the `iwd` network supplicant.", "example": "iwctl"}
,
  {"command": "iw-dev", "description": "Show and manipulate wireless devices.", "example": "sudo iw dev {{wlp}} set type monitor"}
,
  {"command": "iwinfo", "description": "Retrieve information about wireless interfaces on OpenWrt.", "example": "iwinfo"}
,
  {"command": "iwlist", "description": "Get detailed information from a wireless interface.", "example": "iwlist {{wireless_interface}} scan"}
,
  {"command": "iw", "description": "Show and manipulate wireless devices.", "example": "iw dev {{wlp}} scan"}
,
  {"command": "jhead", "description": "Image timestamp and EXIF data manipulation.", "example": "jhead {{path/to/image.jpg}}"}
,
  {"command": "jobs", "description": "Shell builtin for viewing information about processes spawned by the current shell.", "example": "jobs"}
,
  {"command": "journalctl", "description": "Query the systemd journal.", "example": "journalctl {{[-b|--boot]}} {{[-p|--priority]}} 3"}
,
  {"command": "jpegtran", "description": "Perform lossless transformation of JPEG files.", "example": "jpegtran {{[-f|-flip]}} {{horizontal|vertical}} {{path/to/image.jpg}} > {{path/to/output.jpg}}"}
,
  {"command": "just.js", "description": "A V8 JavaScript runtime for Linux.", "example": "just"}
,
  {"command": "kde-builder", "description": "Easily build KDE components from its source repositories.", "example": "kde-builder --initial-setup"}
,
  {"command": "kde-inhibit", "description": "Inhibit various desktop functions while a command runs.", "example": "kde-inhibit --power {{command}} {{command_arguments}}"}
,
  {"command": "kdesrc-build", "description": "Easily build KDE components from its source repositories.", "example": "kdesrc-build --initial-setup"}
,
  {"command": "kdialog", "description": "Show KDE dialog boxes from within shell scripts.", "example": "kdialog --msgbox \"{{message}}\" \"{{optional_detailed_message}}\""}
,
  {"command": "kdocker", "description": "Easily dock applications to the system tray.", "example": "kdocker"}
,
  {"command": "kernel-install", "description": "Add and remove kernel and initrd images to and from `/boot`.", "example": "sudo kernel-install add {{kernel-version}} {{kernel-image}} {{path/to/initrd-file ...}}"}
,
  {"command": "kexec", "description": "Directly reboot into a new kernel.", "example": "kexec {{[-l|--load]}} {{path/to/kernel}} --initrd={{path/to/initrd}} --command-line={{arguments}}"}
,
  {"command": "keyctl", "description": "Manipulate the Linux kernel keyring.", "example": "keyctl list {{target_keyring}}"}
,
  {"command": "keyd", "description": "Remap keys.", "example": "systemctl enable keyd --now"}
,
  {"command": "kill", "description": "Sends a signal to a process, usually related to stopping the process.", "example": "kill {{process_id}}"}
,
  {"command": "kinfocenter", "description": "KDE information center to show system information.", "example": "kinfocenter"}
,
  {"command": "kjv", "description": "The word of God available right on your desktop.", "example": "kjv -l"}
,
  {"command": "kmod", "description": "Manage Linux kernel modules.", "example": "kmod list"}
,
  {"command": "knockd", "description": "Port knocking daemon to listen for port knocking and execute scripts.", "example": "knockd {{[-d|--daemon]}}"}
,
  {"command": "knock", "description": "Port knocking client to open specific ports on firewall.", "example": "knock {{hostname}} {{portnumber}}:{{protocol}}"}
,
  {"command": "konsave", "description": "Save and apply your Linux customizations with just one command.", "example": "konsave {{[-s|--save]}} {{profile_name}}"}
,
  {"command": "konsole", "description": "KDE's terminal emulator.", "example": "konsole --workdir {{path/to/directory}}"}
,
  {"command": "kpackagetool5", "description": "KPackage Manager: install, list, remove Plasma packages.", "example": "kpackagetool5 --list-types"}
,
  {"command": "kpackagetool6", "description": "KPackage Manager: install, list, remove Plasma packages.", "example": "kpackagetool6 --list-types"}
,
  {"command": "kpartx", "description": "Create device maps from partition tables.", "example": "kpartx -a {{whole_disk.img}}"}
,
  {"command": "krdpserver", "description": "Start an RDP server.", "example": "krdpserver {{[-u|--username]}} {{user_name}} {{[-p|--password]}} {{password}}"}
,
  {"command": "kreadconfig5", "description": "Read KConfig entries for KDE Plasma.", "example": "kreadconfig5 --group {{group_name}} --key {{key_name}}"}
,
  {"command": "krfb-virtualmonitor", "description": "Create a virtual monitor and allow that monitor to be used with VNC.", "example": "krfb-virtualmonitor --resolution {{1920}}x{{1080}} --name {{monitor_name}} --password {{password}} --port {{5900}}"}
,
  {"command": "kscreen-console", "description": "Query KScreen's status.", "example": "kscreen-console bug"}
,
  {"command": "kscreen-doctor", "description": "Change and manipulate the screen setup.", "example": "kscreen-doctor {{[-o|--outputs]}}"}
,
  {"command": "ksvgtopng5", "description": "Convert SVG files to PNG format.", "example": "ksvgtopng5 {{width}} {{height}} {{path/to/file.svg}} {{output_filename.png}}"}
,
  {"command": "kwallet-query", "description": "Read and write to a KDE Wallet.", "example": "kwallet-query {{kdewallet}} {{[-l|--list-entries]}}"}
,
  {"command": "kwriteconfig5", "description": "Write KConfig entries for KDE Plasma.", "example": "kwriteconfig5 --help"}
,
  {"command": "kwrite", "description": "Text editor of the KDE Desktop project.", "example": "kwrite {{path/to/file}}"}
,
  {"command": "laptop-detect", "description": "Attempt to determine if the script is running on a laptop or desktop.", "example": "laptop-detect"}
,
  {"command": "larasail", "description": "Manage Laravel on Digital Ocean servers.", "example": "larasail setup"}
,
  {"command": "lastb", "description": "List last logged in users.", "example": "sudo lastb"}
,
  {"command": "lastlog", "description": "Show the most recent login of all users or of a user.", "example": "lastlog"}
,
  {"command": "last", "description": "View the last logged in users.", "example": "last"}
,
  {"command": "latte-dock", "description": "Replacement dock for Plasma desktop.", "example": "latte-dock --clear-cache"}
,
  {"command": "lbu", "description": "Manage `apk` overlay files on a diskless Alpine Linux system.", "example": "lbu {{[ci|commit]}}"}
,
  {"command": "lchage", "description": "Display or change user password policy.", "example": "sudo lchage --date -1 {{username}}"}
,
  {"command": "lci", "description": "LOLCODE interpreter written in C.", "example": "lci {{path/to/file}}"}
,
  {"command": "ldapdomaindump", "description": "Dump users, computers, groups, OS and membership information via LDAP to HTML, JSON and greppable output.", "example": "ldapdomaindump {{[-u|--user]}} {{domain}}{{username}} {{[-p|--password]}} {{password|ntlm_hash}} {{hostname|ip}}"}
,
  {"command": "ldconfig", "description": "Configure symlinks and cache for shared library dependencies.", "example": "sudo ldconfig"}
,
  {"command": "lddd", "description": "Find broken library links on the system.", "example": "lddd"}
,
  {"command": "ldd", "description": "Display shared library dependencies of a binary.", "example": "ldd {{path/to/binary}}"}
,
  {"command": "ledctl", "description": "Intel(R) Enclosure LED Control Application.", "example": "sudo ledctl locate={{/dev/sda,/dev/sdb,...}}"}
,
  {"command": "legit", "description": "Complementary command-line interface for Git.", "example": "git sw {{target_branch}}"}
,
  {"command": "lex", "description": "This command is an alias of `flex`.", "example": "tldr flex"}
,
  {"command": "lftp", "description": "Sophisticated file transfer program.", "example": "lftp {{[-u|--user]}} {{username}} {{ftp.example.com}}"}
,
  {"command": "libinput", "description": "Interface with libinput.", "example": "sudo libinput list-devices"}
,
  {"command": "libtoolize", "description": "An `autotools` tool to prepare a package for using `libtool`.", "example": "libtoolize {{[-cf|--copy --force]}}"}
,
  {"command": "libtool", "description": "A generic library support script that hides the complexity of using shared libraries behind a consistent, portable interface.", "example": "libtool {{[c|compile]}} gcc {{[-c|--compile]}} {{path/to/source.c}} {{[-o|--output]}} {{path/to/source.lo}}"}
,
  {"command": "libuser-lid", "description": "Display a user's groups or a group's users.", "example": "sudo lid {{username}}"}
,
  {"command": "lid", "description": "Note: This page is currently a redirection stub. If you are familiar with this program, please open a pull request.", "example": "tldr libuser-lid"}
,
  {"command": "light", "description": "Control the backlight of your screen.", "example": "light"}
,
  {"command": "line", "description": "Read a single line of input.", "example": "line"}
,
  {"command": "links2", "description": "Command-line web browser.", "example": "links2 -g {{https://example.com}}"}
,
  {"command": "links", "description": "Command-line web browser.", "example": "links {{https://example.com}}"}
,
  {"command": "linux32", "description": "This command is an alias of `setarch linux32`.", "example": "tldr setarch"}
,
  {"command": "linux64", "description": "This command is an alias of `setarch linux64`.", "example": "tldr setarch"}
,
  {"command": "linux-boot-prober", "description": "Probe a partition for bootable operating systems.", "example": "sudo linux-boot-prober {{/dev/sdXY}}"}
,
  {"command": "lldpctl", "description": "Print link layer discovery protocol information.", "example": "systemctl start lldpd"}
,
  {"command": "lnav", "description": "Advanced log file viewer to analyze logs with little to no setup.", "example": "lnav {{path/to/log_or_directory|url}}"}
,
  {"command": "lndir", "description": "Create a shadow directory of symbolic links to another directory tree.", "example": "lndir {{path/to/directory}}"}
,
  {"command": "loadkeys", "description": "Load the kernel keymap for the console.", "example": "sudo loadkeys {{en|de|fi|dvorak|...}}"}
,
  {"command": "localectl", "description": "Control the system locale and keyboard layout settings.", "example": "localectl"}
,
  {"command": "localedef", "description": "Manage locale definition files.", "example": "localedef --list-archive"}
,
  {"command": "locale-gen", "description": "Generate locales defined in `/etc/locale.gen`.", "example": "locale-gen"}
,
  {"command": "locale", "description": "Get locale-specific information.", "example": "locale"}
,
  {"command": "locate", "description": "Find filenames quickly.", "example": "locate {{pattern}}"}
,
  {"command": "logger", "description": "Add messages to the system log.", "example": "logger {{message}}"}
,
  {"command": "loginctl", "description": "Manage the systemd login manager.", "example": "loginctl list-sessions"}
,
  {"command": "login", "description": "Initiates a session for a user.", "example": "login {{user}}"}
,
  {"command": "logread", "description": "Read the `logd` ring buffer log.", "example": "logread"}
,
  {"command": "logrotate", "description": "Rotates, compresses, and mails system logs.", "example": "logrotate {{path/to/logrotate.conf}} --force"}
,
  {"command": "logsave", "description": "Save the output of a command in a logfile.", "example": "logsave {{path/to/logfile}} {{command}}"}
,
  {"command": "logwatch", "description": "Summarizes many different logs for common services (e.g. apache, pam_unix, sshd, etc.) in a single report.", "example": "logwatch --range {{yesterday|today|all|help}} --detail {{low|medium|others}}'"}
,
  {"command": "lookandfeeltool", "description": "This command is an alias of `plasma-apply-lookandfeel`.", "example": "tldr plasma-apply-lookandfeel"}
,
  {"command": "look", "description": "Display lines beginning with a prefix in a file.", "example": "look {{prefix}} {{path/to/file}}"}
,
  {"command": "losetup", "description": "Set up and control loop devices.", "example": "losetup {{[-a|--all]}}"}
,
  {"command": "lrunzip", "description": "This command is an alias of `lrzip -d`.", "example": "tldr lrzip"}
,
  {"command": "lrzip", "description": "A large file compression program.", "example": "lrzip {{path/to/file}}"}
,
  {"command": "lrztar", "description": "A wrapper for `lrzip` to simplify compression of directories.", "example": "lrztar {{path/to/directory}}"}
,
  {"command": "lrzuntar", "description": "This command is an alias of `lrztar -d`.", "example": "tldr lrztar"}
,
  {"command": "lsattr", "description": "List file attributes on a Linux filesystem.", "example": "lsattr"}
,
  {"command": "lsblk", "description": "List information about devices.", "example": "lsblk"}
,
  {"command": "lsb_release", "description": "Get LSB (Linux Standard Base) and distribution-specific information.", "example": "lsb_release {{[-a|--all]}}"}
,
  {"command": "lscpu", "description": "Display information about the CPU architecture.", "example": "lscpu"}
,
  {"command": "lsdev", "description": "Display installed hardware detected in the `/proc` director.", "example": "lsdev"}
,
  {"command": "lsfd", "description": "List open files and the corresponding processes in Linux.", "example": "lsfd"}
,
  {"command": "lshw", "description": "List detailed information about hardware configurations as root user.", "example": "sudo lshw -X"}
,
  {"command": "lsinitrd", "description": "Show the contents of an initramfs image.", "example": "lsinitrd"}
,
  {"command": "lsipc", "description": "Show information on System V IPC facilities currently employed in the system.", "example": "lsipc"}
,
  {"command": "lslocks", "description": "List local system locks.", "example": "lslocks"}
,
  {"command": "lslogins", "description": "Show information about users on a Linux system.", "example": "lslogins"}
,
  {"command": "lsmod", "description": "Show the status of Linux kernel modules.", "example": "lsmod"}
,
  {"command": "lsns", "description": "List information about all namespaces or about the specified namespace.", "example": "lsns"}
,
  {"command": "lspci", "description": "List all PCI devices.", "example": "lspci"}
,
  {"command": "lsscsi", "description": "List SCSI devices (or hosts) and their attributes.", "example": "lsscsi"}
,
  {"command": "lsusb", "description": "Display information about USB buses and devices connected to them.", "example": "lsusb"}
,
  {"command": "ltrace", "description": "Display dynamic library calls of a process.", "example": "ltrace ./{{program}}"}
,
  {"command": "lvcreate", "description": "Create a logical volume in an existing volume group. A volume group is a collection of logical and physical volumes.", "example": "lvcreate {{[-L|--size]}} {{10G}} {{vg1}}"}
,
  {"command": "lvdisplay", "description": "Display information about Logical Volume Manager (LVM) logical volumes.", "example": "sudo lvdisplay"}
,
  {"command": "lvextend", "description": "Increase the size of a logical volume.", "example": "sudo lvextend {{[-L|--size]}} {{120G}} {{logical_volume}}"}
,
  {"command": "lvm", "description": "Manage physical volumes, volume groups, and logical volumes using the Logical Volume Manager (LVM) interactive shell.", "example": "sudo lvm"}
,
  {"command": "lvreduce", "description": "Reduce the size of a logical volume.", "example": "lvreduce {{[-L|--size]}} {{120G}} {{logical_volume}}"}
,
  {"command": "lvremove", "description": "Remove logical volumes.", "example": "sudo lvremove {{volume_group}}/{{logical_volume}}"}
,
  {"command": "lvresize", "description": "Change the size of a logical volume.", "example": "lvresize --size {{120G}} {{volume_group}}/{{logical_volume}}"}
,
  {"command": "lvs", "description": "Display information about logical volumes.", "example": "lvs"}
,
  {"command": "lxc-attach", "description": "Attach to a container.", "example": "sudo lxc-attach {{container_name}}"}
,
  {"command": "lxc-checkconfig", "description": "Check a kernel for LXC support.", "example": "lxc-checkconfig"}
,
  {"command": "lxc-console", "description": "Attach to a container.", "example": "agetty {{[-L|--local-line]}} {{38400}} tty1"}
,
  {"command": "lxc-create", "description": "Create linux containers.", "example": "sudo lxc-create {{[-n|--name]}} {{container_name}} {{[-t|--template]}} download"}
,
  {"command": "lxc-destroy", "description": "Delete a container.", "example": "sudo lxc-destroy {{container_name}}"}
,
  {"command": "lxc-info", "description": "Get info on a container.", "example": "sudo lxc-info {{container_name}}"}
,
  {"command": "lxc-ls", "description": "List Linux containers.", "example": "sudo lxc-ls"}
,
  {"command": "lxc", "description": "Manage Linux containers using the lxd REST API.", "example": "lxc list {{match_string}}"}
,
  {"command": "lxc-network", "description": "Manage networks for LXD containers.", "example": "lxc network list"}
,
  {"command": "lxc-profile", "description": "Manage profiles for LXD containers.", "example": "lxc profile list"}
,
  {"command": "lxc-start", "description": "Start a container.", "example": "systemctl start lxc-net"}
,
  {"command": "lxc-stop", "description": "Stop a container.", "example": "sudo lxc-stop {{container_name}}"}
,
  {"command": "lxi", "description": "Control LXI compatible instruments such as oscilloscopes.", "example": "lxi discover"}
,
  {"command": "lxterminal", "description": "Terminal emulator for LXDE.", "example": "lxterminal"}
,
  {"command": "lynis", "description": "System and security auditing tool.", "example": "sudo lynis update info"}
,
  {"command": "lz", "description": "List all files inside a '.tar.gz' compressed archive.", "example": "lz {{path/to/file.tar.gz}}"}
,
  {"command": "mac2unix", "description": "Change macOS-style line endings to Unix-style.", "example": "mac2unix {{path/to/file}}"}
,
  {"command": "macchanger", "description": "Manipulate network interface MAC addresses.", "example": "macchanger {{[-s|--show]}} {{interface}}"}
,
  {"command": "machinectl", "description": "Control the systemd machine manager.", "example": "sudo machinectl start {{machine_name}}"}
,
  {"command": "maim", "description": "Screenshot utility.", "example": "maim {{path/to/screenshot.png}}"}
,
  {"command": "makepkg", "description": "Create a package which can be used with `pacman`.", "example": "makepkg"}
,
  {"command": "mandb", "description": "Manage the pre-formatted manual page database.", "example": "mandb"}
,
  {"command": "mangohud", "description": "Display a monitoring HUD on top of a Vulkan or OpenGL graphical application.", "example": "mangohud {{command}}"}
,
  {"command": "manpath", "description": "Determine the search path for manual pages.", "example": "manpath"}
,
  {"command": "mashtree", "description": "Make a fast tree from genomes.", "example": "mashtree --numcpus {{12}} {{*.fastq.gz}} {{*.fasta}} > {{mashtree.dnd}}"}
,
  {"command": "matchpathcon", "description": "Lookup the persistent SELinux security context setting of a path.", "example": "matchpathcon {{/path/to/file}}"}
,
  {"command": "mate-about", "description": "Show information about MATE desktop environment.", "example": "mate-about --version"}
,
  {"command": "mate-calc-cmd", "description": "Calculate mathematic expressions in MATE desktop environment in terminal.", "example": "mate-calc-cmd"}
,
  {"command": "mate-calc", "description": "Calculate mathematic expressions in MATE desktop environment.", "example": "mate-calc"}
,
  {"command": "mate-screenshot", "description": "Make screenshots in MATE desktop environment.", "example": "mate-screenshot"}
,
  {"command": "mate-search-tool", "description": "Search files in MATE desktop environment.", "example": "mate-search-tool --named={{string}} --path={{path/to/directory}}"}
,
  {"command": "mbw", "description": "Memory Bandwidth Benchmark.", "example": "mbw -n 3 512"}
,
  {"command": "mcookie", "description": "Generate random 128-bit hexadecimal numbers.", "example": "mcookie"}
,
  {"command": "mdadm", "description": "RAID management utility.", "example": "sudo mdadm --create {{/dev/md/MyRAID}} --level {{raid_level}} --raid-devices {{number_of_disks}} {{/dev/sdXN}}"}
,
  {"command": "mdbook", "description": "Create online books by writing Markdown files.", "example": "mdbook init"}
,
  {"command": "mediamtx", "description": "Real-time media server and proxy.", "example": "mediamtx"}
,
  {"command": "megadl", "description": "This command is an alias of `megatools-dl`.", "example": "tldr megatools-dl"}
,
  {"command": "megatools-dl", "description": "Download files from `mega.nz`.", "example": "megatools-dl {{https://mega.nz/...}}"}
,
  {"command": "mesg", "description": "Check or set a terminal's ability to receive messages from other users, usually from the `write` command.", "example": "mesg"}
,
  {"command": "microcom", "description": "A minimalistic terminal program, used to access remote devices via a serial, CAN or telnet connection from the console.", "example": "microcom {{[-p|--port]}} {{/dev/ttyXYZ}} {{[-s|--speed]}} {{baud_rate}}"}
,
  {"command": "mimetype", "description": "Automatically determine the MIME type of a file.", "example": "mimetype {{path/to/file}}"}
,
  {"command": "minicom", "description": "Communicate with the serial interface of a device.", "example": "sudo minicom {{[-D|--device]}} {{/dev/ttyXYZ}}"}
,
  {"command": "mke2fs", "description": "Create a Linux filesystem inside a partition.", "example": "mkfs.ext2 {{/dev/sdb1}}"}
,
  {"command": "mkfs.bcachefs", "description": "Create a `bcachefs` filesystem inside a partition.", "example": "sudo mkfs.bcachefs {{/dev/sdXY}}"}
,
  {"command": "mkfs.btrfs", "description": "Create a BTRFS filesystem.", "example": "sudo mkfs.btrfs {{[-m|--metadata]}} single {{[-d|--data]}} single {{/dev/sdX}}"}
,
  {"command": "mkfs.cramfs", "description": "Create a ROM filesystem inside a partition.", "example": "mkfs.cramfs {{/dev/sdXY}}"}
,
  {"command": "mkfs.erofs", "description": "Create an EROFS filesystem in an image.", "example": "mkfs.erofs image.erofs root/"}
,
  {"command": "mkfs.exfat", "description": "Create an exfat filesystem inside a partition.", "example": "mkfs.exfat {{/dev/sdXY}}"}
,
  {"command": "mkfs.ext4", "description": "Create an ext4 filesystem inside a partition.", "example": "sudo mkfs.ext4 {{/dev/sdXY}}"}
,
  {"command": "mkfs.f2fs", "description": "Create an F2FS filesystem inside a partition.", "example": "sudo mkfs.f2fs {{/dev/sdXY}}"}
,
  {"command": "mkfs.fat", "description": "Create an MS-DOS filesystem inside a partition.", "example": "mkfs.fat {{/dev/sdXY}}"}
,
  {"command": "mkfs", "description": "Build a Linux filesystem on a hard disk partition.", "example": "mkfs {{/dev/sdXY}}"}
,
  {"command": "mkfs.minix", "description": "Create a Minix filesystem inside a partition.", "example": "mkfs.minix {{/dev/sdXY}}"}
,
  {"command": "mkfs.ntfs", "description": "Create a NTFS filesystem inside a partition.", "example": "mkfs.ntfs {{/dev/sdXY}}"}
,
  {"command": "mkfs.vfat", "description": "This command is an alias of `mkfs.fat`.", "example": "tldr mkfs.fat"}
,
  {"command": "mkfs.xfs", "description": "Create an XFS filesystem inside a partition.", "example": "sudo mkfs.xfs {{/dev/sdXY}}"}
,
  {"command": "mkhomedir_helper", "description": "Create the user's home directory after creating the user.", "example": "sudo mkhomedir_helper {{username}}"}
,
  {"command": "mkinitcpio", "description": "Generate initial ramdisk environments for booting the Linux kernel based on the specified preset(s).", "example": "mkinitcpio"}
,
  {"command": "mkinitfs", "description": "Generate an initramfs on Alpine Linux.", "example": "mkinitfs"}
,
  {"command": "mkisofs", "description": "Create ISO files from directories.", "example": "mkisofs -o {{filename.iso}} {{path/to/source_directory}}"}
,
  {"command": "mklost+found", "description": "Create a lost+found directory.", "example": "mklost+found"}
,
  {"command": "mknod", "description": "Create block or character device special files.", "example": "sudo mknod {{path/to/device_file}} b {{major_device_number}} {{minor_device_number}}"}
,
  {"command": "mkosi", "description": "Build modern, legacy-free Linux images.", "example": "mkosi summary"}
,
  {"command": "mksquashfs", "description": "Create or append files and directories to squashfs filesystems.", "example": "mksquashfs {{path/to/file_or_directory1 path/to/file_or_directory2 ...}} {{filesystem.squashfs}}"}
,
  {"command": "mkswap", "description": "Set up a Linux swap area on a device or in a file.", "example": "sudo mkswap {{path/to/file}}"}
,
  {"command": "mktemp", "description": "Create a temporary file or directory.", "example": "mktemp"}
,
  {"command": "mlabel", "description": "Set an MS-DOS volume label for FAT and VFAT filesystems.", "example": "mlabel -i {{/dev/sda}} ::\"{{new_label}}\""}
,
  {"command": "mmcli", "description": "Control and monitor the ModemManager.", "example": "mmcli --list-modems"}
,
  {"command": "mmdebstrap", "description": "Create a Debian chroot.", "example": "sudo mmdebstrap stable {{path/to/debian-root/}}"}
,
  {"command": "mocp", "description": "Music on Console (MOC) audio player.", "example": "mocp"}
,
  {"command": "modinfo", "description": "Extract information about a Linux kernel module.", "example": "modinfo {{kernel_module}}"}
,
  {"command": "modprobe", "description": "Add or remove modules from the Linux kernel.", "example": "sudo modprobe --dry-run {{module_name}}"}
,
  {"command": "module", "description": "Modify a users' environment using the module command.", "example": "module avail"}
,
  {"command": "mokutil", "description": "Configure Secure Boot Machine Owner Keys (MOK).", "example": "mokutil --sb-state"}
,
  {"command": "mono", "description": "Runtime for the .NET Framework.", "example": "mono --debug {{path/to/program.exe}}"}
,
  {"command": "mons", "description": "Quickly manage two displays.", "example": "mons -o"}
,
  {"command": "mopac", "description": "MOPAC (Molecular Orbital PACkage) is a semiempirical quantum chemistry program based on Dewar and Thiel's NDDO approximation.", "example": "mopac {{path/to/input_file}}"}
,
  {"command": "more", "description": "Interactively display a file, allowing scrolling and searching.", "example": "more {{path/to/file}}"}
,
  {"command": "mount.cifs", "description": "Mount SMB (Server Message Block) or CIFS (Common Internet File System) shares.", "example": "mount.cifs -o user={{username}} //{{server}}/{{share_name}} {{mountpoint}}"}
,
  {"command": "mount.ddi", "description": "Mount Discoverable Disk Images.", "example": "mount.ddi {{path/to/image.raw}} {{/mnt/image}}"}
,
  {"command": "mount", "description": "Get access to an entire filesystem in one directory.", "example": "mount"}
,
  {"command": "mountpoint", "description": "Test if a directory is a filesystem mountpoint.", "example": "mountpoint {{path/to/directory}}"}
,
  {"command": "mount.smb3", "description": "This command is an alias of `mount.cifs`.", "example": "tldr mount.cifs"}
,
  {"command": "mount.steamos", "description": "Mount or unmount SteamOS filesystem partitions.", "example": "sudo mount.steamos {{/dev/sdX}} {{/mnt}}"}
,
  {"command": "mpg123", "description": "Console MPEG audio player.", "example": "mpg123 {{path/to/file1.mp3 path/to/file2.mp3 ...}}"}
,
  {"command": "mpicc", "description": "Open MPI C wrapper compiler.", "example": "mpicc -c {{path/to/file.c}}"}
,
  {"command": "mpstat", "description": "Report CPU statistics.", "example": "mpstat {{2}}"}
,
  {"command": "mssh", "description": "GTK+ based SSH client for interacting with multiple SSH servers at once.", "example": "mssh {{user@host1 user@host2 ...}}"}
,
  {"command": "mt", "description": "Control magnetic tape drive operation (commonly LTO tape).", "example": "mt -f {{/dev/nstX}} status"}
,
  {"command": "mux", "description": "Intercept and multiplex streams of input events.", "example": "mux -c {{muxer_name1 muxer_name2 ...}}"}
,
  {"command": "nala", "description": "Package management utility with better formatting.", "example": "sudo nala install {{package}}"}
,
  {"command": "namcap", "description": "Check binary packages and source `PKGBUILD`s for common packaging mistakes.", "example": "namcap {{path/to/pkgbuild}}"}
,
  {"command": "named", "description": "Execute the DNS (Dynamic Name Service) server daemon that converts host names to IP addresses and vice versa.", "example": "named"}
,
  {"command": "namei", "description": "Follows a pathname (which can be a symbolic link) until a terminal point is found (a file/directory/char device etc).", "example": "namei {{path/to/a}} {{path/to/b}} {{path/to/c}}"}
,
  {"command": "nautilus", "description": "Default file explorer for GNOME desktop environment.", "example": "nautilus"}
,
  {"command": "navi", "description": "An interactive cheatsheet tool for the command-line and application launchers.", "example": "navi"}
,
  {"command": "ncal", "description": "This command is an alias of `cal`.", "example": "tldr cal"}
,
  {"command": "ncat", "description": "Read, write, redirect, and encrypt data across a network.", "example": "ncat {{[-l|--listen]}} {{port}} > {{path/to/file}}"}
,
  {"command": "ndctl", "description": "Utility for managing Non-Volatile DIMMs.", "example": "ndctl create-namespace --mode={{fsdax}}"}
,
  {"command": "needrestart", "description": "Check which daemons need to be restarted after library upgrades.", "example": "needrestart"}
,
  {"command": "nemo", "description": "Manage files and directories in Cinnamon desktop environment.", "example": "nemo"}
,
  {"command": "nethogs", "description": "Monitor bandwidth usage per process.", "example": "sudo nethogs"}
,
  {"command": "netplan", "description": "Network configuration utility using YAML.", "example": "sudo netplan apply"}
,
  {"command": "netselect-apt", "description": "Create a `sources.list` file for a Debian mirror with the lowest latency.", "example": "sudo netselect-apt"}
,
  {"command": "netselect", "description": "Speed test for choosing a fast network server.", "example": "sudo netselect {{host_1 host_2 ...}}"}
,
  {"command": "networkctl", "description": "Query the status of network links.", "example": "networkctl list"}
,
  {"command": "newgrp", "description": "Switch primary group membership.", "example": "newgrp {{group_name}}"}
,
  {"command": "nft", "description": "Allows configuration of tables, chains and rules provided by the Linux kernel firewall.", "example": "sudo nft list ruleset"}
,
  {"command": "nitch", "description": "A small and incredibly fast system fetch written fully in Nim.", "example": "nitch"}
,
  {"command": "nitrogen", "description": "Desktop background browser and setter for X Window.", "example": "nitrogen {{path/to/directory}}"}
,
  {"command": "nixos-container", "description": "Starts NixOS containers using Linux containers.", "example": "sudo nixos-container list"}
,
  {"command": "nixos-option", "description": "Inspect a NixOS configuration.", "example": "nixos-option {{option_key}}"}
,
  {"command": "nixos-rebuild", "description": "Reconfigure a NixOS machine.", "example": "sudo nixos-rebuild switch"}
,
  {"command": "nl", "description": "Number lines from a file or from `stdin`.", "example": "nl {{path/to/file}}"}
,
  {"command": "nmcli-agent", "description": "Run `nmcli` as a NetworkManager secret agent or polkit agent.", "example": "nmcli agent secret"}
,
  {"command": "nmcli-connection", "description": "Manage connections with NetworkManager.", "example": "nmcli connection"}
,
  {"command": "nmcli-device", "description": "Manage network interfaces and establish new Wi-Fi connections using NetworkManager.", "example": "nmcli device status"}
,
  {"command": "nmcli-general", "description": "Manage general settings of NetworkManager.", "example": "nmcli general"}
,
  {"command": "nmcli", "description": "Manage the network configuration using NetworkManager.", "example": "tldr nmcli agent"}
,
  {"command": "nmcli-monitor", "description": "Monitor changes to the NetworkManager connection status.", "example": "nmcli monitor"}
,
  {"command": "nmcli-networking", "description": "Manage the networking status of NetworkManager.", "example": "nmcli networking"}
,
  {"command": "nmcli-radio", "description": "Show the status of radio switches or enable/disable them using NetworkManager.", "example": "nmcli radio wifi"}
,
  {"command": "nm-online", "description": "Ask NetworkManager whether the network is connected.", "example": "nm-online"}
,
  {"command": "nmon", "description": "A system administrator, tuner, and benchmark tool.", "example": "nmon"}
,
  {"command": "nmtui-connect", "description": "This command is an alias of `nmtui connect`.", "example": "tldr nmtui"}
,
  {"command": "nmtui-edit", "description": "This command is an alias of `nmtui edit`.", "example": "tldr nmtui"}
,
  {"command": "nmtui-hostname", "description": "This command is an alias of `nmtui hostname`.", "example": "tldr nmtui"}
,
  {"command": "nmtui", "description": "Text user interface for controlling NetworkManager.", "example": "nmtui"}
,
  {"command": "nologin", "description": "Alternative shell that prevents a user from logging in.", "example": "chsh {{[-s|--shell]}} {{user}} nologin"}
,
  {"command": "nordvpn", "description": "Command-line interface for NordVPN.", "example": "nordvpn login"}
,
  {"command": "nova", "description": "The OpenStack project that provides a way to provision compute instances.", "example": "nova list"}
,
  {"command": "nsenter", "description": "Run a new command in a running process' namespace.", "example": "nsenter {{[-t|--target]}} {{pid}} {{[-a|--all]}} {{command}} {{command_arguments}}"}
,
  {"command": "nsnake", "description": "Snake game in the terminal.", "example": "nsnake"}
,
  {"command": "nstat", "description": "View network statistics.", "example": "nstat"}
,
  {"command": "nsxiv", "description": "Neo Simple X Image Viewer.", "example": "nsxiv {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "ntfsfix", "description": "Fix common problems on an NTFS partition.", "example": "sudo ntfsfix {{/dev/sdXN}}"}
,
  {"command": "ntpdate", "description": "Synchronize and set the date and time via NTP.", "example": "sudo ntpdate {{host}}"}
,
  {"command": "ntpd", "description": "The official NTP (Network Time Protocol) daemon to synchronize the system clock to remote time servers or local reference clocks.", "example": "sudo ntpd"}
,
  {"command": "ntpq", "description": "Query the Network Time Protocol (NTP) daemon.", "example": "ntpq"}
,
  {"command": "numactl", "description": "Control NUMA policy for processes or shared memory.", "example": "numactl --cpunodebind={{0}} --membind={{0,1}} -- {{command}} {{command_arguments}}"}
,
  {"command": "numlockx", "description": "Control the number lock key status in X11 sessions.", "example": "numlockx status"}
,
  {"command": "obabel", "description": "Translate chemistry-related data.", "example": "obabel {{path/to/file.mol}} -O {{path/to/output_file.xyz}}"}
,
  {"command": "objcopy", "description": "Copy the contents of an object file to another file.", "example": "objcopy {{path/to/source_file}} {{path/to/target_file}}"}
,
  {"command": "oniux", "description": "Isolate an arbitrary application and route traffic over the Tor network.", "example": "oniux {{command}}"}
,
  {"command": "oomctl", "description": "Analyze the state stored in `systemd-oomd`.", "example": "oomctl dump"}
,
  {"command": "openfortivpn", "description": "A VPN client, for Fortinet's proprietary PPP+SSL VPN solution.", "example": "openfortivpn {{[-u|--username]}} {{username}} {{[-p|--password]}} {{password}}"}
,
  {"command": "openrc", "description": "The OpenRC service manager.", "example": "sudo openrc {{runlevel_name}}"}
,
  {"command": "openvpn3", "description": "OpenVPN 3 Linux client.", "example": "openvpn3 session-start {{[-c|--config]}} {{path/to/config.conf}}"}
,
  {"command": "opera-stable", "description": "This command is an alias of `chromium`.", "example": "tldr chromium"}
,
  {"command": "opkg", "description": "A lightweight package manager used to install OpenWrt packages.", "example": "opkg install {{package}}"}
,
  {"command": "optimus-manager", "description": "GPU switching utility for Nvidia Optimus laptops.", "example": "optimus-manager --switch {{nvidia|integrated|hybrid}}"}
,
  {"command": "ostree", "description": "Version control for binary files similar to `git` but optimized for operating system root filesystems.", "example": "ostree init --repo {{path/to/repo}}"}
,
  {"command": "pacaur", "description": "A utility for Arch Linux to build and install packages from the Arch User Repository.", "example": "pacaur -Syu"}
,
  {"command": "paccache", "description": "A `pacman` cache cleaning utility.", "example": "paccache {{[-r|--remove]}}"}
,
  {"command": "pacdiff", "description": "Maintenance utility for `.pacorig`, `.pacnew` and `.pacsave` files created by `pacman`.", "example": "pacdiff"}
,
  {"command": "pacgraph", "description": "Draw a graph of installed packages to PNG/SVG/GUI/console.", "example": "pacgraph"}
,
  {"command": "pacman4console", "description": "A text-based console game inspired by the original Pacman.", "example": "pacman4console"}
,
  {"command": "pacman-database", "description": "Operate on the Arch Linux package database.", "example": "sudo pacman -D --asdeps {{package}}"}
,
  {"command": "pacman-deptest", "description": "Check each dependency specified and return a list of dependencies that are not currently satisfied on the system.", "example": "pacman -T {{package1 package2 ...}}"}
,
  {"command": "pacman-d", "description": "This command is an alias of `pacman --database`.", "example": "tldr pacman database"}
,
  {"command": "pacman-files", "description": "Arch Linux package manager utility.", "example": "sudo pacman -Fy"}
,
  {"command": "pacman-f", "description": "This command is an alias of `pacman --files`.", "example": "tldr pacman files"}
,
  {"command": "pacman-key", "description": "Wrapper script for GnuPG used to manage pacman's keyring.", "example": "sudo pacman-key --init"}
,
  {"command": "pacman", "description": "Arch Linux package manager utility.", "example": "sudo pacman -Syu"}
,
  {"command": "pacman-mirrors", "description": "Generate a `pacman` mirrorlist for Manjaro Linux.", "example": "sudo pacman-mirrors --fasttrack"}
,
  {"command": "pacman-q", "description": "This command is an alias of `pacman --query`.", "example": "tldr pacman query"}
,
  {"command": "pacman-query", "description": "Arch Linux package manager utility.", "example": "pacman -Q"}
,
  {"command": "pacman-remove", "description": "Arch Linux package manager utility.", "example": "sudo pacman -Rs {{package}}"}
,
  {"command": "pacman-r", "description": "This command is an alias of `pacman --remove`.", "example": "tldr pacman remove"}
,
  {"command": "pacman-s", "description": "This command is an alias of `pacman --sync`.", "example": "tldr pacman sync"}
,
  {"command": "pacman-sync", "description": "Arch Linux package manager utility.", "example": "sudo pacman -S {{package}}"}
,
  {"command": "pacman-t", "description": "This command is an alias of `pacman --deptest`.", "example": "tldr pacman deptest"}
,
  {"command": "pacman-u", "description": "This command is an alias of `pacman --upgrade`.", "example": "tldr pacman upgrade"}
,
  {"command": "pacman-upgrade", "description": "Arch Linux package manager utility.", "example": "sudo pacman -U {{path/to/package1.pkg.tar.zst}} {{path/to/package2.pkg.tar.zst}}"}
,
  {"command": "pacstall", "description": "An AUR package manager for Ubuntu.", "example": "pacstall --search {{query}}"}
,
  {"command": "pacstrap", "description": "Install Arch Linux packages in the specified new root directory.", "example": "pacstrap {{path/to/new/root}} {{base}} {{linux}} {{linux-firmware}}"}
,
  {"command": "pactree", "description": "Package dependency tree viewer for pacman.", "example": "pactree {{package}}"}
,
  {"command": "pamac", "description": "A command-line utility for the GUI package manager pamac.", "example": "pamac install {{package_name}}"}
,
  {"command": "parted-interactive", "description": "A partition manipulation program.", "example": "sudo parted {{/dev/sdX}}"}
,
  {"command": "parted", "description": "A partition manipulation program.", "example": "sudo parted {{[-l|--list]}}"}
,
  {"command": "partprobe", "description": "Notify the operating system kernel of partition table changes.", "example": "sudo partprobe"}
,
  {"command": "partx", "description": "Parse a partition table and tell the kernel about it.", "example": "sudo partx {{[-l|--list]}} {{path/to/device_or_disk_image}}"}
,
  {"command": "paru", "description": "An AUR helper and pacman wrapper.", "example": "paru {{package_name_or_search_term}}"}
,
  {"command": "pasuspender", "description": "Temporarily suspends `pulseaudio` while another command is running to allow access to alsa.", "example": "pasuspender -- {{jackd {{[-d|--driver]}} alsa {{[-d|--device]}} hw:0}}"}
,
  {"command": "patool", "description": "Archive file manager.", "example": "patool extract {{path/to/archive}}"}
,
  {"command": "paxs", "description": "Manage packages across Yay, Flatpak, and Snap.", "example": "paxs {{search_term}}"}
,
  {"command": "pct", "description": "Manage LXC containers in Proxmox.", "example": "pct list"}
,
  {"command": "pdbedit", "description": "Edit the Samba user database.", "example": "sudo pdbedit --list --verbose"}
,
  {"command": "pdfattach", "description": "Add a new attachment (embedded file) to an existing PDF file.", "example": "pdfattach {{path/to/input.pdf}} {{path/to/file_to_attach}} {{path/to/output.pdf}}"}
,
  {"command": "pdfcrop", "description": "Detect and remove margins in each page in a PDF file.", "example": "pdfcrop {{path/to/input_file.pdf}} {{path/to/output_file.pdf}}"}
,
  {"command": "pdfdetach", "description": "List or extract attachments (embedded files) from a PDF file.", "example": "pdfdetach list -enc {{UTF-8}} {{path/to/input.pdf}}"}
,
  {"command": "pdftohtml", "description": "Convert PDF files into HTML, XML and PNG images.", "example": "pdftohtml {{path/to/file.pdf}} {{path/to/output_file.html}}"}
,
  {"command": "pdftoppm", "description": "Convert PDF document pages to portable Pixmap (image formats).", "example": "pdftoppm -f {{n}} -l {{m}} {{path/to/file.pdf}} {{image_name_prefix}}"}
,
  {"command": "pdfxup", "description": "N-up PDF pages.", "example": "pdfxup {{[-o|--output]}} {{path/to/output.pdf}} {{path/to/input.pdf}}"}
,
  {"command": "perf", "description": "Framework for Linux performance counter measurements.", "example": "perf stat {{gcc hello.c}}"}
,
  {"command": "perl-rename", "description": "Rename multiple files.", "example": "rename {{'s/foo/bar/'}} {{*}}"}
,
  {"command": "pg", "description": "View files one page at a time.", "example": "pg {{path/to/file}}"}
,
  {"command": "phar", "description": "Create, update or extract PHP archives (PHAR).", "example": "phar add -f {{path/to/phar_file}} {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"}
,
  {"command": "photorec", "description": "Deleted file recovery tool.", "example": "sudo photorec {{/dev/sdb}}"}
,
  {"command": "phpdismod", "description": "Disable PHP extensions on Debian-based OSes.", "example": "sudo phpdismod {{json}}"}
,
  {"command": "phpenmod", "description": "Enable PHP extensions on Debian-based OSes.", "example": "sudo phpenmod {{json}}"}
,
  {"command": "phpquery", "description": "PHP extension manager for Debian-based OSes.", "example": "sudo phpquery -V"}
,
  {"command": "physlock", "description": "Lock all consoles and virtual terminals.", "example": "physlock"}
,
  {"command": "picom", "description": "Standalone compositor for Xorg.", "example": "picom &"}
,
  {"command": "pidof", "description": "Get the ID of a process using its name.", "example": "pidof {{bash}}"}
,
  {"command": "pidstat", "description": "Show system resource usage, including CPU, memory, IO etc.", "example": "pidstat {{2}} {{10}}"}
,
  {"command": "pihole", "description": "Manage the Pi-hole ad-blocking DNS server.", "example": "pihole status"}
,
  {"command": "pi", "description": "Compute decimal Archimedes' constant Pi.", "example": "pi"}
,
  {"command": "pinout", "description": "View the current Raspberry Pi's GPIO pin-out information on the terminal with an ASCII diagram.", "example": "pinout"}
,
  {"command": "pipewire", "description": "Start the PipeWire daemon.", "example": "pipewire"}
,
  {"command": "pivpn", "description": "Easy security-hardened OpenVPN setup and manager.", "example": "sudo pivpn add"}
,
  {"command": "pkcon", "description": "PackageKit client used by Discover and Gnome software and alternative to `apt`.", "example": "pkcon install {{package}}"}
,
  {"command": "pkexec", "description": "Execute commands as another user.", "example": "pkexec {{command}}"}
,
  {"command": "pkgadd", "description": "Add a package to a CRUX system.", "example": "pkgadd {{package}}"}
,
  {"command": "pkgctl-auth", "description": "Authenticate `pkgctl` with services like GitLab.", "example": "pkgctl auth login"}
,
  {"command": "pkgctl-build", "description": "Build packages inside a clean `chroot`.", "example": "pkgctl build"}
,
  {"command": "pkgctl-db-update", "description": "Update the `pacman` database as final release step for packages that have been transferred and staged on <https://repos.archlinux.org>.", "example": "pkgctl db update"}
,
  {"command": "pkgctl-diff", "description": "Compare package files using different modes.", "example": "pkgctl diff {{[-l|--list]}} {{path/to/file|pkgname}}"}
,
  {"command": "pkgctl", "description": "Unified command-line frontend for Arch Linux devtools.", "example": "tldr pkgctl auth"}
,
  {"command": "pkgctl-release", "description": "Release step to commit, tag and upload build artifacts.", "example": "pkgctl release --repo {{repository}} --message {{commit_message}}"}
,
  {"command": "pkgctl-repo", "description": "Manage Git packaging repositories and their configuration for Arch Linux.", "example": "pkgctl repo clone {{pkgname}}"}
,
  {"command": "pkgfile", "description": "Search files from packages in the official repositories on Arch-based systems.", "example": "sudo pkgfile --update"}
,
  {"command": "pkginfo", "description": "Query the package database on a CRUX system.", "example": "pkginfo {{[-i|--installed]}}"}
,
  {"command": "pkgmk", "description": "Make a binary package for use with pkgadd on CRUX.", "example": "pkgmk -d"}
,
  {"command": "pkgrm", "description": "Remove a package from a CRUX system.", "example": "pkgrm {{package}}"}
,
  {"command": "plasma-apply-colorscheme", "description": "Switch Plasma color scheme.", "example": "plasma-apply-colorscheme --list-schemes"}
,
  {"command": "plasma-apply-cursortheme", "description": "Switch Plasma cursor theme.", "example": "plasma-apply-cursortheme --list-themes"}
,
  {"command": "plasma-apply-desktoptheme", "description": "Switch Plasma desktop theme.", "example": "plasma-apply-desktoptheme --list-themes"}
,
  {"command": "plasma-apply-lookandfeel", "description": "Switch Plasma global themes.", "example": "plasma-apply-lookandfeel --list"}
,
  {"command": "plasma-apply-wallpaperimage", "description": "Switch Plasma wallpaper.", "example": "plasma-apply-wallpaperimage {{/path/to/image}}"}
,
  {"command": "plasmashell", "description": "Start and restart Plasma Desktop.", "example": "systemctl restart --user plasma-plasmashell"}
,
  {"command": "playerctl", "description": "Control media players via MPRIS.", "example": "playerctl play-pause"}
,
  {"command": "pluma", "description": "Edit files in MATE desktop environment.", "example": "pluma"}
,
  {"command": "pmap", "description": "Report memory map of a process or processes.", "example": "pmap {{pid}}"}
,
  {"command": "pmount", "description": "Mount arbitrary hotpluggable devices as a normal user.", "example": "pmount {{/dev/to/block/device}}"}
,
  {"command": "po4a-gettextize", "description": "Convert a file to a PO file.", "example": "po4a-gettextize --format {{text}} --master {{path/to/master.txt}} --po {{path/to/result.po}}"}
,
  {"command": "po4a", "description": "Update both PO files and translated documents.", "example": "po4a {{path/to/config_file}}"}
,
  {"command": "po4a-translate", "description": "Convert a PO file back to documentation format.", "example": "po4a-translate --format {{text}} --master {{path/to/master.doc}} --po {{path/to/result.po}} --localized {{path/to/translated.txt}}"}
,
  {"command": "po4a-updatepo", "description": "Update the translation (in PO format) of a documentation.", "example": "po4a-updatepo --format {{text}} --master {{path/to/master.txt}} --po {{path/to/result.po}}"}
,
  {"command": "pokego", "description": "Display Pokémon sprites in color directly in your terminal.", "example": "pokego --name charizard"}
,
  {"command": "portablectl", "description": "A systemd utility for managing and deploying portable service images on Linux systems.", "example": "portablectl list"}
,
  {"command": "portageq", "description": "Query for information about Portage, the Gentoo Linux package manager.", "example": "portageq envvar {{variable}}"}
,
  {"command": "ports", "description": "Update/list the ports tree on a CRUX system.", "example": "ports -u"}
,
  {"command": "postconf", "description": "Postfix configuration utility.", "example": "postconf -c {{path/to/configuration_directory}}"}
,
  {"command": "postfix", "description": "Postfix mail transfer agent (MTA) control program.", "example": "sudo postfix check"}
,
  {"command": "poweroff", "description": "Power off the system.", "example": "poweroff"}
,
  {"command": "powerprofilesctl", "description": "Make power profiles handling available over D-Bus.", "example": "powerprofilesctl list"}
,
  {"command": "powerstat", "description": "Measures the power consumption of a computer that has a battery power source or supports the RAPL interface.", "example": "powerstat"}
,
  {"command": "powertop", "description": "Optimize battery power usage.", "example": "sudo powertop --calibrate"}
,
  {"command": "prename", "description": "Rename multiple files.", "example": "rename {{'s/foo/bar/'}} {{*}}"}
,
  {"command": "pridecat", "description": "Like cat but more colorful.", "example": "pridecat {{path/to/file}}"}
,
  {"command": "prime-run", "description": "Run a program using an alternative Nvidia graphics card.", "example": "prime-run {{command}}"}
,
  {"command": "print.runmailcap", "description": "An alias to a `run-mailcap`'s action print.", "example": "print {{filename}}"}
,
  {"command": "prlimit", "description": "Get or set process resource soft and hard limits.", "example": "prlimit"}
,
  {"command": "proctl", "description": "Manage projects licenses and languages, switch between templated licenses.", "example": "proctl {{[-ll|-list-licenses]}}"}
,
  {"command": "pro", "description": "Manage Ubuntu Pro services.", "example": "sudo pro attach"}
,
  {"command": "protontricks", "description": "A simple wrapper that runs Winetricks commands for Proton enabled games.", "example": "protontricks --gui"}
,
  {"command": "protonvpn-connect", "description": "Connect to ProtonVPN.", "example": "protonvpn {{[c|connect]}}"}
,
  {"command": "protonvpn", "description": "Unofficial third-party ProtonVPN client.", "example": "protonvpn init"}
,
  {"command": "prt-get", "description": "The CRUX package manager.", "example": "prt-get install {{package}}"}
,
  {"command": "pstoedit", "description": "Convert PDF files into various image formats.", "example": "pstoedit -page {{page_number}} -f magick {{path/to/file.pdf}} {{page.png|page.jpg]}}"}
,
  {"command": "pstree", "description": "A convenient tool to show running processes as a tree.", "example": "pstree"}
,
  {"command": "ptx", "description": "Generate a permuted index of words from text files.", "example": "ptx {{[-r|--references]}} {{path/to/file}}"}
,
  {"command": "ptyxis", "description": "A container-oriented terminal for GNOME.", "example": "ptyxis --new-window"}
,
  {"command": "pulseaudio", "description": "The PulseAudio sound system daemon and manager.", "example": "pulseaudio --check"}
,
  {"command": "pvcreate", "description": "Initialize a disk or partition for use as a physical volume.", "example": "pvcreate {{/dev/sda1}}"}
,
  {"command": "pvdisplay", "description": "Display information about Logical Volume Manager (LVM) physical volumes.", "example": "sudo pvdisplay"}
,
  {"command": "pvecm", "description": "Proxmox VE Cluster Manager.", "example": "pvecm add {{hostname_or_ip}}"}
,
  {"command": "pve-firewall", "description": "Manage Proxmox VE Firewall.", "example": "pve-firewall compile"}
,
  {"command": "pveperf", "description": "A benchmarking tool in Proxmox Server. Gather CPU and hard disk performance data for the hard disk.", "example": "pveperf"}
,
  {"command": "pveversion", "description": "Proxmox VE version info.", "example": "pveversion"}
,
  {"command": "pvremove", "description": "Remove LVM labels from physical volume(s).", "example": "sudo pvremove {{/dev/sdXY}}"}
,
  {"command": "pvscan", "description": "List all physical volumes and manage their online status.", "example": "pvscan"}
,
  {"command": "pvs", "description": "Display information about physical volumes.", "example": "pvs"}
,
  {"command": "pw-cat", "description": "Play and record audio files through PipeWire.", "example": "pw-cat {{[-p|--playback]}} {{path/to/file.wav}}"}
,
  {"command": "pw-cli", "description": "Manage a PipeWire instance's modules, objects, nodes, devices, links and much more.", "example": "pw-cli {{[ls|list-objects]}} {{Node|Link|Port|Client|Device|Metadata|Factory|Module|Profiler|SecurityContext|Core}}"}
,
  {"command": "pw-config", "description": "List configuration paths and sections that will be used by the PipeWire server and clients.", "example": "pw-config"}
,
  {"command": "pw-dot", "description": "Create `.dot` files of the PipeWire graph.", "example": "pw-dot"}
,
  {"command": "pw-dump", "description": "Dump PipeWire's current state as JSON, including the information on nodes, devices, modules, ports, and other objects.", "example": "pw-dump"}
,
  {"command": "pwdx", "description": "Print working directory of a process.", "example": "pwdx {{process_id}}"}
,
  {"command": "pw-link", "description": "Manage links between ports in PipeWire.", "example": "pw-link {{[-oiI|--output --input --ids]}}"}
,
  {"command": "pw-loopback", "description": "Create loopback devices in PipeWire.", "example": "pw-loopback"}
,
  {"command": "pw-metadata", "description": "Monitor, set, and delete metadata on PipeWire objects.", "example": "pw-metadata"}
,
  {"command": "pw-mon", "description": "Monitor objects on the PipeWire instance.", "example": "pw-mon"}
,
  {"command": "pwn", "description": "Exploit Development Library designed for rapid prototyping.", "example": "pwn asm \"{{xor edi, edi}}\""}
,
  {"command": "pw-play", "description": "This command is an alias of `pw-cat --playback`.", "example": "tldr pw-cat"}
,
  {"command": "pw-profiler", "description": "Profile a local or remote instance.", "example": "pw-profiler"}
,
  {"command": "pw-record", "description": "This command is an alias of `pw-cat --record`.", "example": "tldr pw-cat"}
,
  {"command": "pw-reserve", "description": "Reserve a device for PipeWire.", "example": "pw-reserve {{[-n|--name]}} {{audioN}}"}
,
  {"command": "pw-top", "description": "View the PipeWire nodes and devices statistics in real-time.", "example": "pw-top"}
,
  {"command": "pw-v4l2", "description": "Use v4l2 programs within PipeWire.", "example": "pw-v4l2 {{program}}"}
,
  {"command": "pyrit", "description": "WPA/WPA2 cracking tool using computational power.", "example": "pyrit benchmark"}
,
  {"command": "qjoypad", "description": "Translate input from gamepads or joysticks into keyboard strokes or mouse actions.", "example": "qjoypad"}
,
  {"command": "qmake", "description": "Generate Makefiles from Qt project files.", "example": "qmake"}
,
  {"command": "qm-cleanup", "description": "Clean up resources on QEMU/KVM Virtual Machine Manager like tap devices, VGPUs, etc.", "example": "qm cleanup {{vm_id}} {{clean-shutdown}} {{guest-requested}}"}
,
  {"command": "qm-clone", "description": "Create a copy of virtual machine on QEMU/KVM Virtual Machine Manager.", "example": "qm copy {{vm_id}} {{new_vm_id}}"}
,
  {"command": "qm-cloudinit-dump", "description": "Generate cloudinit configuration files.", "example": "qm cloudinit dump {{virtual_machine_id}} {{meta|network|user}}"}
,
  {"command": "qm-cloud-init", "description": "Configure cloudinit settings for virtual machines managed by Proxmox Virtual Environment (PVE).", "example": "qm cloud-init {{vm_id}} -user={{user}} -password={{password}}"}
,
  {"command": "qm-config", "description": "Display the virtual machine configuration with pending configuration changes applied.", "example": "qm config {{vm_id}}"}
,
  {"command": "qm-create", "description": "Create or restore a virtual machine on QEMU/KVM Virtual Machine Manager.", "example": "qm create {{100}}"}
,
  {"command": "qm-delsnapshot", "description": "Delete virtual machine snapshots.", "example": "qm delsnapshot {{vm_id}} {{snapshot_name}}"}
,
  {"command": "qm-destroy", "description": "Destroy a virtual machine in QEMU/KVM Virtual Machine Manager.", "example": "qm destroy {{vm_id}}"}
,
  {"command": "qm-disk-import", "description": "Import a disk image to a virtual machine as an unused disk.", "example": "qm importdisk {{vm_id}} {{path/to/disk}} {{storage_name}} --format {{qcow2|raw|vmdk}}"}
,
  {"command": "qm-disk-move", "description": "Move a virtual disk from one storage to another within the same Proxmox cluster.", "example": "qm disk move {{vm_id}} {{destination}} {{index}}"}
,
  {"command": "qm-disk-resize", "description": "Resize a virtual machine disk in the Proxmox Virtual Environment (PVE).", "example": "qm disk resize {{vm_id}} {{disk_name}} +{{n}}G"}
,
  {"command": "qm-guest-cmd", "description": "Execute QEMU Guest Agent commands.", "example": "qm guest cmd {{virtual_machine_id}} {{fsfreeze-freeze|fsfreeze-status|fsfreeze-thaw|fstrim|get-fsinfo|...}}"}
,
  {"command": "qm-guest-exec", "description": "Execute a specific command via a guest agent.", "example": "qm guest exec {{vm_id}} {{command}} {{argument1 argument2 ...}}"}
,
  {"command": "qm-guest-exec-status", "description": "Print the status of a pid started by the guest-agent on QEMU/KVM Virtual Machine Manager.", "example": "qm guest exec-status {{vm_id}} {{pid}}"}
,
  {"command": "qm-guest-passwd", "description": "Set the password for a user on QEMU/KVM Virtual Machine Manager.", "example": "qm guest passwd {{vm_id}} {{username}}"}
,
  {"command": "qm-help", "description": "Display help for a command.", "example": "qm help {{command}}"}
,
  {"command": "qm-import-disk", "description": "This command is an alias of `qm disk import`.", "example": "tldr qm disk import"}
,
  {"command": "qm-list", "description": "List all virtual machines.", "example": "qm list"}
,
  {"command": "qm-listsnapshot", "description": "List snapshots of virtual machines.", "example": "qm listsnapshot {{vm_id}}"}
,
  {"command": "qm", "description": "QEMU/KVM Virtual Machine Manager.", "example": "qm list"}
,
  {"command": "qm-migrate", "description": "Migrate a virtual machine.", "example": "qm migrate {{vm_id}} {{target}}"}
,
  {"command": "qm-monitor", "description": "Enter the QEMU Monitor interface.", "example": "qm monitor {{vm_id}}"}
,
  {"command": "qm-move-disk", "description": "This command is an alias of `qm disk move`.", "example": "tldr qm disk move"}
,
  {"command": "qm-move_disk", "description": "This command is an alias of `qm disk move`.", "example": "tldr qm disk move"}
,
  {"command": "qm-mtunnel", "description": "Used by `qmigrate`.", "example": "qm mtunnel"}
,
  {"command": "qm-nbdstop", "description": "Stop embedded nbd server.", "example": "qm nbdstop {{VM_ID}}"}
,
  {"command": "qm-pending", "description": "Get the virtual machine configuration with both current and pending values.", "example": "qm pending {{vm_id}}"}
,
  {"command": "qm-reboot", "description": "Reboot a virtual machine by shutting it down, and starting it again after applying pending changes.", "example": "qm reboot {{vm_id}}"}
,
  {"command": "qm-rescan", "description": "Rescan all storages and update disk sizes and unused disk images of a virtual machine.", "example": "qm rescan {{vm_id}}"}
,
  {"command": "qm-reset", "description": "Reset a virtual machine on QEMU/KVM Virtual Machine Manager.", "example": "qm reset {{vm_id}}"}
,
  {"command": "qm-resize", "description": "This command is an alias of `qm disk resize`.", "example": "tldr qm disk resize"}
,
  {"command": "qmrestore", "description": "Restore QemuServer `vzdump` backups.", "example": "qmrestore {{path/to/vzdump-qemu-100.vma.lzo}} {{100}}"}
,
  {"command": "qm-resume", "description": "Resume a virtual machine.", "example": "qm resume {{vm_id}}"}
,
  {"command": "qm-rollback", "description": "Rollback the VM state to a specified snapshot.", "example": "qm rollback {{vm_id}} {{snap_name}}"}
,
  {"command": "qm-sendkey", "description": "Send QEMU monitor encoding key event to a virtual machine.", "example": "qm sendkey {{vm_id}} {{key}}"}
,
  {"command": "qm-showcmd", "description": "Show command-line which is used to start the VM (debug info).", "example": "qm showcmd {{vm_id}}"}
,
  {"command": "qm-shutdown", "description": "Shutdown a virtual machine on QEMU/KVM Virtual Machine Manager.", "example": "qm shutdown {{VM_ID}}"}
,
  {"command": "qm-snapshot", "description": "Create virtual machine snapshots.", "example": "qm snapshot {{vm_id}} {{snapshot_name}}"}
,
  {"command": "qm-start", "description": "Start a virtual machine on QEMU/KVM Virtual Machine Manager.", "example": "qm start {{100}}"}
,
  {"command": "qm-status", "description": "Show virtual machine status.", "example": "qm status {{vm_id}}"}
,
  {"command": "qm-stop", "description": "Stop a virtual machine.", "example": "qm stop {{VM_ID}}"}
,
  {"command": "qm-suspend", "description": "Suspends a virtual machine (VM) in the Proxmox Virtual Environment (PVE).", "example": "qm suspend {{vm_id}} {{integer}}"}
,
  {"command": "qm-template", "description": "Create a Proxmox VM template.", "example": "qm template {{vm_id}}"}
,
  {"command": "qm-unlock", "description": "Unlock a virtual machine in QEMU/KVM Virtual Machine Manager.", "example": "qm unlock {{vm_id}}"}
,
  {"command": "qm-vncproxy", "description": "Proxy Virtual Machine VNC (Virtual network computing) traffic to `stdin` or `stdout`.", "example": "qm vncproxy {{vm_id}}"}
,
  {"command": "qm-wait", "description": "Wait until the virtual machine is stopped.", "example": "qm wait {{vm_id}}"}
,
  {"command": "qrcp", "description": "A file transfer tool.", "example": "qrcp send {{path/to/file_or_directory path/to/file_directory ...}}"}
,
  {"command": "qsub", "description": "Submits a script to the queue management system TORQUE.", "example": "qsub {{script.sh}}"}
,
  {"command": "qtchooser", "description": "A wrapper used to select between Qt development binary versions.", "example": "qtchooser --list-versions"}
,
  {"command": "qtile", "description": "A full-featured, hackable tiling window manager written and configured in Python.", "example": "qtile start"}
,
  {"command": "quickemu", "description": "Build and manage highly optimised desktop virtual machines quickly.", "example": "quickemu --vm {{path/to/file.conf}}"}
,
  {"command": "quickget", "description": "Download and prepare materials for building a Quickemu virtual machine.", "example": "quickget list"}
,
  {"command": "quotacheck", "description": "Scan a filesystem for disk usage; create, check and repair quota files.", "example": "sudo quotacheck --all"}
,
  {"command": "radeontop", "description": "Show utilization of AMD GPUs.", "example": "radeontop"}
,
  {"command": "rankmirrors", "description": "Rank a list of Pacman mirrors by connection and opening speed.", "example": "rankmirrors {{/etc/pacman.d/mirrorlist}}"}
,
  {"command": "raspi-config", "description": "An `ncurses` terminal GUI to config a Raspberry Pi.", "example": "sudo raspi-config"}
,
  {"command": "raspinfo", "description": "Display Raspberry Pi system information.", "example": "raspinfo"}
,
  {"command": "raw", "description": "Bind a Unix raw character device.", "example": "raw /dev/raw/raw{{1}} {{/dev/block_device}}"}
,
  {"command": "rcp", "description": "Copy files between local and remote systems.", "example": "rcp {{path/to/local_file}} {{username}}@{{remote_host}}:{{/path/to/destination/}}"}
,
  {"command": "rc-service", "description": "Locate and run OpenRC services with arguments.", "example": "rc-service {{service_name}} status"}
,
  {"command": "rc-status", "description": "Show status info about runlevels.", "example": "rc-status"}
,
  {"command": "rc-update", "description": "Add and remove OpenRC services to and from runlevels.", "example": "rc-update"}
,
  {"command": "rdesktop", "description": "Remote Desktop Protocol client.", "example": "rdesktop -u {{username}} -p {{password}} {{host:port}}"}
,
  {"command": "readcd", "description": "Read or write Compact Disc media data.", "example": "readcd dev={{/dev/srX}} f={{path/to/file.iso}}"}
,
  {"command": "readelf", "description": "Display information about ELF files.", "example": "readelf -all {{path/to/binary}}"}
,
  {"command": "readpe", "description": "Display information about PE files.", "example": "readpe {{path/to/executable}}"}
,
  {"command": "reboot", "description": "Reboot the system.", "example": "reboot"}
,
  {"command": "reflector", "description": "Arch script to fetch and sort mirrorlists.", "example": "sudo reflector --sort {{rate}} --save {{/etc/pacman.d/mirrorlist}}"}
,
  {"command": "register_new_matrix_user", "description": "Register new users in a home server when registration has been disabled.", "example": "register_new_matrix_user --config {{path/to/homeserver.yaml}}"}
,
  {"command": "rename", "description": "Rename multiple files.", "example": "rename {{foo}} {{bar}} {{*}}"}
,
  {"command": "renice", "description": "Alter the scheduling priority/niceness of running processes.", "example": "renice --priority {{3}} {{[-p|--pid]}} {{pid}}"}
,
  {"command": "repo-add", "description": "Package database maintenance utility which enables installation of said package via Pacman.", "example": "repo-add {{path/to/database.db.tar.gz}}"}
,
  {"command": "repo-remove", "description": "Package database maintenance utility which removes packages from a local repository.", "example": "repo-remove {{path/to/database.db.tar.gz}} {{package}}"}
,
  {"command": "reportbug", "description": "Bug report tool of Debian distribution.", "example": "reportbug {{package}}"}
,
  {"command": "repquota", "description": "Display a summary of existing file quotas for a filesystem.", "example": "sudo repquota {{[-a|--all]}}"}
,
  {"command": "reptyr", "description": "Move a running process to a new terminal.", "example": "reptyr {{pid}}"}
,
  {"command": "reset", "description": "Reinitialize the current terminal. Clears the entire terminal screen.", "example": "reset"}
,
  {"command": "resize2fs", "description": "Resize an ext2, ext3 or ext4 filesystem.", "example": "resize2fs {{/dev/sdXN}}"}
,
  {"command": "resize", "description": "Resize terminal size to the window size.", "example": "resize"}
,
  {"command": "resolvectl", "description": "Resolve domain names, IPv4 and IPv6 addresses, DNS resource records, and services.", "example": "resolvectl status"}
,
  {"command": "resolveip", "description": "Resolve hostnames to their IP addresses and vice versa.", "example": "resolveip {{example.org}}"}
,
  {"command": "restorecon", "description": "Restore SELinux security context on files/directories according to persistent rules.", "example": "ls {{[-dlZ|--directory -l --context]}} {{path/to/file_or_directory}}"}
,
  {"command": "retroarch", "description": "A frontend for emulators, game engines and media players.", "example": "retroarch"}
,
  {"command": "rev", "description": "Reverse a line of text or a file.", "example": "rev"}
,
  {"command": "rexec", "description": "Execute a command on a remote host.", "example": "rexec {{[-h|--host]}} {{remote_host}} {{ls -l}}"}
,
  {"command": "rfkill", "description": "Enable and disable wireless devices.", "example": "rfkill"}
,
  {"command": "rig", "description": "Utility to piece together a random first name, last name, street number and address, along with a geographically consistent (ie, they all match the same area) city, state, ZIP code, and area code.", "example": "rig"}
,
  {"command": "ripmime", "description": "Extract attachments out of a MIME encoded email package.", "example": "ripmime -i {{path/to/file}}"}
,
  {"command": "rkhunter", "description": "Searches for rootkits and malware.", "example": "sudo rkhunter --check"}
,
  {"command": "rlogin", "description": "Log in to a remote host.", "example": "rlogin {{remote_host}}"}
,
  {"command": "rmmod", "description": "Remove modules from the Linux kernel.", "example": "sudo rmmod {{module_name}}"}
,
  {"command": "rnm", "description": "Bulk Rename Utility.", "example": "rnm -ss {{old}} -rs {{new}} {{path/to/directory}}"}
,
  {"command": "rofi", "description": "An application launcher and window switcher.", "example": "rofi -show drun"}
,
  {"command": "rolldice", "description": "Roll virtual dice.", "example": "rolldice d{{20}}"}
,
  {"command": "rpcclient", "description": "MS-RPC client tool (part of the samba suite).", "example": "rpcclient {{[-U|--user]}} {{domain}}{{username}}%{{password}} {{ip}}"}
,
  {"command": "rpcinfo", "description": "Make an RPC call to an RPC server and reports what it finds.", "example": "rpcinfo"}
,
  {"command": "rpicam-hello", "description": "View a live camera stream using a Raspberry Pi camera.", "example": "rpicam-hello {{[-t|--timeout]}} {{time}}"}
,
  {"command": "rpicam-jpeg", "description": "Capture and store a JPEG image using a Raspberry Pi camera.", "example": "rpicam-jpeg {{[-o|--output]}} {{path/to/file.jpg}}"}
,
  {"command": "rpicam-raw", "description": "Capture a raw video on a Raspberry Pi camera.", "example": "rpicam-raw {{[-t|--timeout]}} {{2000}} {{[-o|--output]}} {{path/to/file.raw}}"}
,
  {"command": "rpicam-still", "description": "Capture and store a photo using a Raspberry Pi camera with legacy features missing from `rpicam-jpeg`.", "example": "rpicam-still {{[-e|--encoding]}} {{bmp|png|rgb|yuv420}} {{[-o|--output]}} {{path/to/file.{{bmp|png|rgb|yuv420}}}}"}
,
  {"command": "rpicam-vid", "description": "Capture a video using a Raspberry Pi camera.", "example": "rpicam-vid {{[-t|--timeout]}} 10000 {{[-o|--output]}} {{path/to/file.h264}}"}
,
  {"command": "rpi-eeprom-update", "description": "Update EEPROM and view other EEPROM information.", "example": "sudo rpi-eeprom-update"}
,
  {"command": "rpi-otp-private-key", "description": "Display the One-Time Programmable (OTP) private key of a Raspberry Pi.", "example": "rpi-otp-private-key"}
,
  {"command": "rpm2cpio", "description": "Convert an RPM package to a `cpio` archive.", "example": "rpm2cpio {{path/to/file.rpm}}"}
,
  {"command": "rpmbuild", "description": "RPM Package Build tool.", "example": "rpmbuild -ba {{path/to/spec_file}}"}
,
  {"command": "rpmconf", "description": "Handle RPMNEW, RPMSAVE and RPMORIG files left over by package upgrades.", "example": "sudo rpmconf --all"}
,
  {"command": "rpm", "description": "RPM Package Manager.", "example": "rpm --query {{httpd}}"}
,
  {"command": "rpm-ostree", "description": "A hybrid image/package system.", "example": "rpm-ostree status"}
,
  {"command": "rpmspec", "description": "Query a RPM spec file.", "example": "rpmspec --query {{path/to/rpm.spec}}"}
,
  {"command": "rsh", "description": "Execute commands on a remote host.", "example": "rsh {{remote_host}} {{ls -l}}"}
,
  {"command": "rspamc", "description": "Client for `rspamd` servers.", "example": "rspamc learn_spam {{path/to/email_file}}"}
,
  {"command": "rtcwake", "description": "Enter a system sleep state until specified wakeup time relative to your BIOS clock.", "example": "sudo rtcwake {{[-m|--mode]}} show {{[-v|--verbose]}}"}
,
  {"command": "rtorrent", "description": "Download torrents.", "example": "rtorrent {{torrent_or_magnet}}"}
,
  {"command": "ruget", "description": "Alternative to wget written in Rust.", "example": "ruget {{https://example.com/file}}"}
,
  {"command": "run0", "description": "Elevate privileges interactively.", "example": "run0 {{command}}"}
,
  {"command": "runcon", "description": "Run a program in a different SELinux security context.", "example": "runcon"}
,
  {"command": "runlevel", "description": "SysV runlevel utility.", "example": "runlevel"}
,
  {"command": "runlim", "description": "Sample and limit time and memory usage of a program and its child processes using the proc file system on Linux.", "example": "runlim {{command}} {{command_arguments}}"}
,
  {"command": "run-mailcap", "description": "Run MailCap Programs.", "example": "run-mailcap --action=ACTION [--option[=value]]"}
,
  {"command": "runuser", "description": "Run commands as a user and group without asking for password (needs root privileges).", "example": "runuser {{user}} {{[-c|--command]}} '{{command}}'"}
,
  {"command": "rusnapshot", "description": "BTRFS snapshotting utility written in Rust.", "example": "sudo rusnapshot {{[-c|--config]}} {{path/to/config.toml}} --cr"}
,
  {"command": "sacct", "description": "Display accounting data from the Slurm service.", "example": "sacct"}
,
  {"command": "sacctmgr", "description": "View, setup, and manage Slurm accounts.", "example": "sacctmgr show configuration"}
,
  {"command": "salloc", "description": "Start an interactive shell session or execute a command by allocating one or more nodes in a cluster.", "example": "salloc"}
,
  {"command": "sa", "description": "Summarize accounting information about commands called by users, including basic information on CPU time spent processing and I/O rates.", "example": "sudo sa"}
,
  {"command": "sam", "description": "AWS Serverless Application Model (SAM) CLI.", "example": "sam init"}
,
  {"command": "sar", "description": "Monitor performance of various Linux subsystems.", "example": "sar -b {{1}}"}
,
  {"command": "sattach", "description": "Attach to a Slurm job step.", "example": "sattach {{jobid}}.{{stepid}}"}
,
  {"command": "sbatch", "description": "Submit a batch job to the SLURM scheduler.", "example": "sbatch {{path/to/job.sh}}"}
,
  {"command": "sbcast", "description": "Send a file to a job's allocated nodes.", "example": "sbcast {{path/to/file}} {{path/to/destination}}"}
,
  {"command": "sbctl", "description": "A user-friendly secure boot key manager.", "example": "sbctl status"}
,
  {"command": "scancel", "description": "Cancel a Slurm job.", "example": "scancel {{job_id}}"}
,
  {"command": "scanimage", "description": "Scan images with the Scanner Access Now Easy API.", "example": "scanimage {{[-L|--list-devices]}}"}
,
  {"command": "schroot", "description": "Run a command or start an interactive shell with a different root directory. More customizable than `chroot`.", "example": "schroot --list"}
,
  {"command": "scontrol", "description": "View information about and modify jobs.", "example": "scontrol show job {{job_id}}"}
,
  {"command": "screenkey", "description": "A screencast tool to display keys pressed.", "example": "screenkey"}
,
  {"command": "scriptlive", "description": "Execute a typescript created by the `script` command in real-time.", "example": "scriptlive {{path/to/timing_file}} {{path/to/typescript}}"}
,
  {"command": "script", "description": "Record all terminal output to a typescript file.", "example": "script"}
,
  {"command": "scriptreplay", "description": "Replay a typescript created by the `script` command to `stdout`.", "example": "scriptreplay {{path/to/timing_file}} {{path/to/typescript}}"}
,
  {"command": "scrontab", "description": "Manage Slurm crontab files.", "example": "scrontab {{path/to/file}}"}
,
  {"command": "scrot", "description": "Screen capture utility.", "example": "scrot"}
,
  {"command": "sdiag", "description": "Show information about the execution of `slurmctld`.", "example": "sdiag {{[-a|--all]}}"}
,
  {"command": "secon", "description": "Get the SELinux security context of a file, pid, current execution context, or a context specification.", "example": "secon"}
,
  {"command": "secret-tool", "description": "Store and retrieve passwords, part of the `libsecret` package.", "example": "secret-tool store --label={{label}} {{key}} {{value}}"}
,
  {"command": "sed", "description": "GNU stream editor for filtering and transforming text.", "example": "{{command}} | sed 's/apple/mango/g'"}
,
  {"command": "see", "description": "Alias to `run-mailcap`'s view.", "example": "see {{filename}}"}
,
  {"command": "semanage-boolean", "description": "Manage persistent SELinux boolean settings.", "example": "sudo semanage boolean {{[-l|--list]}}"}
,
  {"command": "semanage-fcontext", "description": "Manage persistent SELinux security context rules on files/directories.", "example": "sudo semanage fcontext {{[-l|--list]}}"}
,
  {"command": "semanage", "description": "SELinux persistent policy management tool.", "example": "sudo semanage boolean {{[-m|--modify]}} {{--on|--off}} {{haproxy_connect_any}}"}
,
  {"command": "semanage-permissive", "description": "Manage persistent SELinux permissive domains.", "example": "sudo semanage permissive {{[-l|--list]}}"}
,
  {"command": "semanage-port", "description": "Manage persistent SELinux port definitions.", "example": "sudo semanage port {{[-l|--list]}}"}
,
  {"command": "sensible-browser", "description": "Open the default browser.", "example": "sensible-browser"}
,
  {"command": "sensible-editor", "description": "Open the default editor.", "example": "sensible-editor {{path/to/file}}"}
,
  {"command": "sensors", "description": "Report sensors information.", "example": "sensors"}
,
  {"command": "service", "description": "Manage services by running init scripts.", "example": "service --status-all"}
,
  {"command": "sestatus", "description": "Print the current SELinux status.", "example": "sestatus"}
,
  {"command": "setarch", "description": "Change the reported architecture for a program's execution, primarily used to modify how programs behave based on system architecture.", "example": "setarch i686 {{command}}"}
,
  {"command": "setcap", "description": "Set capabilities of specified file.", "example": "setcap '{{cap_net_raw}}' {{path/to/file}}"}
,
  {"command": "setenforce", "description": "Toggle SELinux between enforcing and permissive modes.", "example": "setenforce {{1|Enforcing}}"}
,
  {"command": "setfacl", "description": "Set file access control lists (ACL).", "example": "setfacl {{[-m|--modify]}} u:{{username}}:rw {{path/to/file_or_directory}}"}
,
  {"command": "setfattr", "description": "Set extended file attributes.", "example": "setfattr {{[-n|--name]}} user.{{attribute_name}} {{path/to/file}}"}
,
  {"command": "setfont", "description": "Set the terminal font for TTYs.", "example": "setfont {{font}}.gz"}
,
  {"command": "setsebool", "description": "Set SELinux boolean value.", "example": "getsebool -a"}
,
  {"command": "setserial", "description": "Read and modify serial port information.", "example": "setserial -a {{/dev/cuaN}}"}
,
  {"command": "setsid", "description": "Run a program in a new session if the calling process is not a process group leader.", "example": "setsid {{program}}"}
,
  {"command": "setxkbmap", "description": "Set the keyboard using the X Keyboard Extension.", "example": "setxkbmap {{fr}}"}
,
  {"command": "sfdisk", "description": "Display or manipulate a disk partition table.", "example": "sudo sfdisk {{[-d|--dump]}} {{path/to/device}} > {{path/to/file.dump}}"}
,
  {"command": "sfill", "description": "Securely overwrite the free space and inodes of the partition where the specified directory resides.", "example": "sfill {{/path/to/mounted_disk_directory}}"}
,
  {"command": "sh5util", "description": "Merge HDF5 files produced by the `sacct_gather_profile` plugin.", "example": "sh5util {{[-j|--jobs]}} {{job_id|job_id.step_id}}"}
,
  {"command": "shar", "description": "Create a shell archive.", "example": "shar {{[-V|--vanilla-operation]}} {{path/to/file1 path/to/file2 ...}} > {{path/to/archive.sh}}"}
,
  {"command": "sherlock", "description": "Find usernames across social networks.", "example": "sherlock {{username}} --output {{path/to/file}}"}
,
  {"command": "shiny-mirrors", "description": "Generate a `pacman` mirror list for Manjaro Linux.", "example": "shiny-mirrors status"}
,
  {"command": "shnsplit", "description": "Splits audio files according to a `.cue` file.", "example": "shnsplit -f {{path/to/file.cue}} {{path/to/file.wav}}"}
,
  {"command": "shntool-split", "description": "This command is an alias of `shnsplit`.", "example": "tldr shnsplit"}
,
  {"command": "showkey", "description": "Display the keycode of pressed keys on the keyboard, helpful for debugging keyboard-related issues and key remapping.", "example": "sudo showkey"}
,
  {"command": "shutdown", "description": "Shutdown and reboot the system.", "example": "shutdown -h now"}
,
  {"command": "sic", "description": "Simple IRC client.", "example": "sic"}
,
  {"command": "silentcast", "description": "Silent screencast creator. Saves in `.mkv` and animated GIF formats.", "example": "silentcast"}
,
  {"command": "sinfo", "description": "View information about Slurm nodes and partitions.", "example": "sinfo {{[-s|--summarize]}}"}
,
  {"command": "size", "description": "Display the sizes of sections inside binary files.", "example": "size {{path/to/file}}"}
,
  {"command": "slapt-get", "description": "An `apt` like system for Slackware package management.", "example": "slapt-get --update"}
,
  {"command": "slapt-src", "description": "A utility to automate building of slackbuilds.", "example": "slapt-src {{[-u|--update]}}"}
,
  {"command": "sleep", "description": "Delay for a specified amount of time.", "example": "sleep {{seconds}}"}
,
  {"command": "slop", "description": "Get a selection of the screen.", "example": "slop"}
,
  {"command": "slurmctld", "description": "Monitor all other Slurm daemons and resources, accept work (jobs), and allocate resources to those jobs.", "example": "slurmctld -c"}
,
  {"command": "slurmdbd", "description": "A secure enterprise-wide interface to a database for Slurm.", "example": "slurmdbd -n {{value}}"}
,
  {"command": "slurmd", "description": "Monitors all tasks running on the compute node, accepts tasks, launches tasks, and kills running tasks upon request.", "example": "slurmd -b"}
,
  {"command": "slurmrestd", "description": "Interface to Slurm via REST API. It can be used in two modes: *Inetd Mode* & *Listen Mode*.", "example": "slurmrestd -g {{group_id}} {{[host]:port | unix:/path/to/socket}}"}
,
  {"command": "slurmstepd", "description": "Slurm daemon for managing and monitoring individual job steps within a multi-step job.", "example": "slurmstepd"}
,
  {"command": "slurp", "description": "Select a region in a Wayland compositor.", "example": "slurp"}
,
  {"command": "smbcacls", "description": "View and manipulate Windows ACLs on SMB shares.", "example": "smbcacls //{{server}}/{{share}} {{path/to/file_or_directory}} --user {{domain\\username}}%{{password}}"}
,
  {"command": "smbclient", "description": "FTP-like client to access SMB/CIFS resources on servers.", "example": "smbclient {{//server/share}}"}
,
  {"command": "smbget", "description": "`wget`-like utility for downloading files from SMB servers.", "example": "smbget {{smb://server/share/file}}"}
,
  {"command": "smbnetfs", "description": "Mount SMB shares interactively.", "example": "smbnetfs {{mountpoint}}"}
,
  {"command": "smbpasswd", "description": "Add/remove a Samba user or change its password.", "example": "smbpasswd"}
,
  {"command": "smem", "description": "Print memory usage for programs.", "example": "smem"}
,
  {"command": "sm", "description": "Display a short message fullscreen.", "example": "sm \"{{Hello World!}}\""}
,
  {"command": "snake4", "description": "Snake game in the terminal.", "example": "snake4"}
,
  {"command": "snake4scores", "description": "Show the high scores from the snake4 game.", "example": "snake4scores"}
,
  {"command": "snap", "description": "Manage the \"snap\" self-contained software packages.", "example": "snap find {{query}}"}
,
  {"command": "snapper", "description": "Filesystem snapshot management tool.", "example": "snapper list-configs"}
,
  {"command": "sockstat", "description": "List open Internet or UNIX domain sockets.", "example": "sockstat"}
,
  {"command": "speaker-test", "description": "Speaker test tone generator for ALSA.", "example": "speaker-test"}
,
  {"command": "spectre-meltdown-checker", "description": "Spectre and Meltdown mitigation detection tool.", "example": "sudo spectre-meltdown-checker"}
,
  {"command": "speedometer", "description": "Python script that shows a network traffic graph in the terminal.", "example": "speedometer -r {{eth0}} -t {{eth0}}"}
,
  {"command": "speedread", "description": "A simple terminal-based open source Spritz-alike.", "example": "cat {{path/to/file.txt}} | speedread -wpm {{250}}"}
,
  {"command": "spi", "description": "A meta package manager that handles both packages and slackbuilds.", "example": "spi {{[-u|--update]}}"}
,
  {"command": "sport", "description": "Search and install SlackBuilds.", "example": "sudo mkdir {{[-p|--parents]}} /usr/ports && sudo rsync {{[-av|--archive --verbose]}} rsync://slackbuilds.org /slackbuilds/$(awk '{print $2}' /etc/slackware-version)/ /usr/ports/"}
,
  {"command": "sprio", "description": "View the factors determining a job's scheduling priority.", "example": "sprio"}
,
  {"command": "sqfscat", "description": "Concatenate files from a squashfs filesystem and print them to `stdout`.", "example": "sqfscat {{filesystem.squashfs}} {{file1 file2 ...}}"}
,
  {"command": "sqfstar", "description": "Create a squashfs filesystem from a tar archive.", "example": "sqfstar {{filesystem.squashfs}} < {{archive.tar}}"}
,
  {"command": "squeue", "description": "View the jobs queued in the SLURM scheduler.", "example": "squeue"}
,
  {"command": "sreport", "description": "Generate reports on jobs, users, and clusters from accounting data.", "example": "sreport {{[-p|--parsable]}} cluster utilization"}
,
  {"command": "srun", "description": "Create an interactive slurm job or connect to an existing job.", "example": "srun --pty /bin/bash"}
,
  {"command": "sshare", "description": "List the shares of associations to a cluster.", "example": "sshare"}
,
  {"command": "sslstrip", "description": "Perform Moxie Marlinspike's Secure Sockets Layer (SSL) stripping attacks.", "example": "sslstrip"}
,
  {"command": "ss", "description": "Utility to investigate sockets.", "example": "ss {{[-a|--all]}} {{-t|-u|-w|-x}}"}
,
  {"command": "sstat", "description": "View information about running jobs.", "example": "sstat {{[-j|--jobs]}} {{job_id}}"}
,
  {"command": "startx", "description": "A front-end to `xinit` that provides a nice user interface for running a single session of the X Window System.", "example": "startx"}
,
  {"command": "steamos-add-to-steam", "description": "Add a program to Steam library.", "example": "steamos-add-to-steam {{path/to/file}}"}
,
  {"command": "steamos-boot-install", "description": "This command is an alias of `steamos-finalize-install`.", "example": "tldr steamos-finalize-install"}
,
  {"command": "steamos-chroot", "description": "Switch root directory in a SteamOS environment.", "example": "steamos-chroot {{[-p|--partset]}} other"}
,
  {"command": "steamos-devmode", "description": "Enable SteamOS developer mode.", "example": "sudo steamos-devmode enable"}
,
  {"command": "steamos-dump-info", "description": "View SteamOS system information.", "example": "sudo steamos-dump-info"}
,
  {"command": "steamos-factory-reset-config", "description": "Generate configuration files required by `steamos-factory-reset`.", "example": "steamos-factory-reset-config"}
,
  {"command": "steamos-factory-reset", "description": "Reset SteamOS to factory settings.", "example": "steamos-factory-reset"}
,
  {"command": "steamos-finalize-install", "description": "Complete a SteamOS installation by setting up bootloaders and applying system updates.", "example": "sudo steamos-finalize-install"}
,
  {"command": "steamos-readonly", "description": "Set the readonly status of the filesystem.", "example": "sudo steamos-readonly disable"}
,
  {"command": "steamos-select-branch", "description": "Select a SteamOS system release branch.", "example": "steamos-select-branch -c"}
,
  {"command": "steamos-session-select", "description": "Manipulate which session is currently in use.", "example": "steamos-session-select plasma"}
,
  {"command": "steamos-update", "description": "Update SteamOS.", "example": "steamos-update"}
,
  {"command": "steghide", "description": "Steganography tool for JPEG, BMP, WAV and AU file formats.", "example": "steghide embed {{[-cf|--coverfile]}} {{path/to/image.png}} {{[-ef|--embedfile]}} {{path/to/data.txt}}"}
,
  {"command": "stegsnow", "description": "Steganography tool for concealing and extracting messages in text files encoded as tabs and spaces.", "example": "stegsnow {{path/to/file.txt}}"}
,
  {"command": "st", "description": "A simple terminal emulator for the X Window System.", "example": "st"}
,
  {"command": "strace", "description": "Troubleshooting tool for tracing system calls.", "example": "strace {{[-p|--attach]}} {{pid}}"}
,
  {"command": "stress", "description": "Stress test CPU, memory, and IO on a Linux system.", "example": "stress {{[-c|--cpu]}} {{4}}"}
,
  {"command": "strigger", "description": "View or modify Slurm trigger information.", "example": "strigger --set --{{primary_database_failure|primary_slurmdbd_failure|primary_slurmctld_acct_buffer_full|primary_slurmctld_failure|...}} {{[-p|--program]}} {{path/to/executable}}"}
,
  {"command": "strip", "description": "Discard symbols from executables or object files.", "example": "strip {{path/to/file}}"}
,
  {"command": "su", "description": "Switch shell to another user.", "example": "su"}
,
  {"command": "sview", "description": "Start a GUI to view and modify the state of Slurm.", "example": "sview"}
,
  {"command": "swaks", "description": "Swiss Army Knife SMTP, the all-purpose SMTP transaction tester.", "example": "swaks {{[-t|--to]}} {{user@example.com}} {{[-s|--server]}} {{test-server.example.net}}"}
,
  {"command": "swaplabel", "description": "Print or change the label or UUID of a swap area.", "example": "swaplabel {{path/to/file}}"}
,
  {"command": "swapoff", "description": "Disable devices and files for swapping.", "example": "swapoff {{path/to/file}}"}
,
  {"command": "swapon", "description": "Enable devices and files for swapping.", "example": "swapon"}
,
  {"command": "switch_root", "description": "Use a different filesystem as the root of the mount tree.", "example": "switch_root {{new_root}} {{/sbin/init}}"}
,
  {"command": "swupd", "description": "Package management utility for Clear Linux.", "example": "sudo swupd update"}
,
  {"command": "swww", "description": "Efficient animated wallpaper daemon for Wayland.", "example": "swww img {{path/to/image}}"}
,
  {"command": "sxiv", "description": "Simple X Image Viewer.", "example": "sxiv {{path/to/image}}"}
,
  {"command": "synopkg", "description": "Package management utility for Synology DiskStation Manager.", "example": "synopkg list --name"}
,
  {"command": "synoupgrade", "description": "Upgrade Synology DiskStation Manager (DSM) - the Synology NAS operating system.", "example": "sudo synoupgrade --check"}
,
  {"command": "sysctl", "description": "List and change kernel runtime variables.", "example": "sysctl {{[-a|--all]}}"}
,
  {"command": "sysdig", "description": "System troubleshooting, analysis and exploration.", "example": "sysdig"}
,
  {"command": "systemctl-disable", "description": "Disable systemd services.", "example": "systemctl disable {{unit}}"}
,
  {"command": "systemctl-enable", "description": "Enable systemd services.", "example": "systemctl enable {{unit}}"}
,
  {"command": "systemctl", "description": "Control the systemd system and service manager.", "example": "systemctl status"}
,
  {"command": "systemctl-reboot", "description": "Reboot the system.", "example": "systemctl reboot"}
,
  {"command": "systemd-ac-power", "description": "Report whether the computer is connected to an external power source.", "example": "systemd-ac-power"}
,
  {"command": "systemd-analyze", "description": "Analyze and debug system manager.", "example": "systemd-analyze"}
,
  {"command": "systemd-ask-password", "description": "Query the user for a system password.", "example": "systemd-ask-password \"{{prompt}}\""}
,
  {"command": "systemd-cat", "description": "Connect a pipeline or program's output streams with the systemd journal.", "example": "systemd-cat {{command}}"}
,
  {"command": "systemd-cgls", "description": "Show the contents of the selected Linux control group hierarchy in a tree.", "example": "systemd-cgls"}
,
  {"command": "systemd-cgtop", "description": "Show the top control groups of the local Linux control group hierarchy, ordered by their CPU, memory, or disk I/O load.", "example": "systemd-cgtop"}
,
  {"command": "systemd-confext", "description": "This command is an alias of `systemd-sysext`.", "example": "tldr systemd-sysext"}
,
  {"command": "systemd-creds", "description": "List, show, encrypt and decrypt service credentials.", "example": "systemd-creds encrypt --name {{name}} {{path/to/input_file}} {{path/to/output}}"}
,
  {"command": "systemd-cryptenroll", "description": "Interactively enroll or remove methods used to unlock LUKS2-encrypted devices. Uses a password to unlock the device unless otherwise specified.", "example": "systemd-cryptenroll --password {{path/to/luks2_block_device}}"}
,
  {"command": "systemd-cryptsetup", "description": "Create or remove decrypted mappings of encrypted volumes. Equivalent of `cryptsetup open` and `cryptsetup close`.", "example": "systemd-cryptsetup attach {{mapping_name}} {{/dev/sdXY}}"}
,
  {"command": "systemd-delta", "description": "Find overridden systemd-related configuration files.", "example": "systemd-delta"}
,
  {"command": "systemd-detect-virt", "description": "Detect execution in a virtualized environment.", "example": "systemd-detect-virt --list"}
,
  {"command": "systemd-dissect", "description": "Introspect and interact with file system OS disk images, specifically Discoverable Disk Images (DDIs).", "example": "systemd-dissect {{path/to/image.raw}}"}
,
  {"command": "systemd-escape", "description": "Escape strings for usage in systemd unit names.", "example": "systemd-escape {{text}}"}
,
  {"command": "systemd-firstboot", "description": "Initialize basic system settings on or before the first boot-up of a system.", "example": "sudo systemd-firstboot --root {{path/to/root_directory}}"}
,
  {"command": "systemd-hwdb", "description": "Hardware database management tool.", "example": "systemd-hwdb update"}
,
  {"command": "systemd-id128", "description": "Generate and print sd-128 identifiers.", "example": "systemd-id128 new"}
,
  {"command": "systemd-inhibit", "description": "Prohibit the system from entering certain power states.", "example": "systemd-inhibit --list"}
,
  {"command": "systemd-machine-id-setup", "description": "Initialize the machine ID stored in `/etc/machine-id` at install time with a provisioned or randomly generated ID.", "example": "systemd-machine-id-setup --print"}
,
  {"command": "systemd-mount", "description": "Establish and destroy transient mount or auto-mount points.", "example": "systemd-mount {{path/to/file_or_device}}"}
,
  {"command": "systemd-notify", "description": "Notify the service manager about start-up completion and other daemon status changes.", "example": "systemd-notify --booted"}
,
  {"command": "systemd-nspawn", "description": "Spawn a command or OS in a lightweight container.", "example": "systemd-nspawn {{[-D|--directory]}} {{path/to/container_root}}"}
,
  {"command": "systemd-path", "description": "List and query system and user paths.", "example": "systemd-path"}
,
  {"command": "systemd-repart", "description": "Automatically grow and add partitions.", "example": "systemd-repart"}
,
  {"command": "systemd-resolve", "description": "Resolve domain names, IPV4 and IPv6 addresses, DNS resource records, and services.", "example": "tldr resolvectl"}
,
  {"command": "systemd-run", "description": "Run programs in transient scope units, service units, or path-, socket-, or timer-triggered service units.", "example": "sudo systemd-run {{command}} {{argument1 argument2 ...}}"}
,
  {"command": "systemd-socket-activate", "description": "Socket activation for systemd services.", "example": "systemd-socket-activate {{path/to/socket.service}}"}
,
  {"command": "systemd-stdio-bridge", "description": "Implement a proxy between `stdin`/`stdout` and a D-Bus.", "example": "systemd-stdio-bridge"}
,
  {"command": "systemd-sysext", "description": "Activate or deactivate system extension images.", "example": "systemd-sysext list"}
,
  {"command": "systemd-sysusers", "description": "Create system users and groups.", "example": "systemd-sysusers {{path/to/file}}"}
,
  {"command": "systemd-tmpfiles", "description": "Create, delete and clean up volatile and temporary files and directories.", "example": "systemd-tmpfiles --create"}
,
  {"command": "systemd-tty-ask-password-agent", "description": "List or process pending systemd password requests.", "example": "systemd-tty-ask-password-agent --list"}
,
  {"command": "systemd-umount", "description": "This command is an alias of `systemd-mount --umount`.", "example": "tldr systemd-mount"}
,
  {"command": "systemsettings", "description": "KDE central settings program.", "example": "systemsettings"}
,
  {"command": "systool", "description": "View system device information by bus, and classes.", "example": "systool -b {{bus}} -v"}
,
  {"command": "tailf", "description": "This command has been superseded by `tail -f`.", "example": "tldr tail"}
,
  {"command": "talk", "description": "A visual communication program which copies lines from your terminal to that of another user.", "example": "talk {{username}}"}
,
  {"command": "taskset", "description": "Get or set a process' CPU affinity or start a new process with a defined CPU affinity.", "example": "taskset {{[-p|--pid]}} {{[-c|--cpu-list]}} {{pid}}"}
,
  {"command": "tc", "description": "Show/manipulate traffic control settings.", "example": "sudo tc {{[q|qdisc]}} {{[a|add]}} dev {{eth0}} root netem delay {{delay_in_milliseconds}}ms"}
,
  {"command": "tcpflow", "description": "Capture TCP traffic for debugging and analysis.", "example": "tcpflow -c -i {{eth0}} port {{80}}"}
,
  {"command": "tcpick", "description": "Packet sniffing and network traffic analysis tool.", "example": "sudo tcpick {{[-i|--interface]}} {{interface}} {{[-C|--colors]}} -h {{host}} -p {{port}}"}
,
  {"command": "tcpkill", "description": "Kill specified in-progress TCP connections.", "example": "tcpkill -i {{eth1}} host {{192.95.4.27}} and port {{2266}}"}
,
  {"command": "tcptraceroute", "description": "A traceroute implementation using TCP packets.", "example": "tcptraceroute {{host}}"}
,
  {"command": "telinit", "description": "Change SysV runlevel.", "example": "telinit 0"}
,
  {"command": "terminator", "description": "Arrange multiple GNOME terminals in one window.", "example": "terminator"}
,
  {"command": "termshark", "description": "Terminal UI for `tshark`, but looks more like `wireshark`.", "example": "sudo termshark"}
,
  {"command": "termusic", "description": "A terminal music player written in Rust that uses vim-like key bindings.", "example": "termusic {{path/to/directory}}"}
,
  {"command": "terraria", "description": "Create and start a headless Terraria server.", "example": "{{path/to/TerrariaServer}}"}
,
  {"command": "tftp", "description": "Trivial File Transfer Protocol client.", "example": "tftp {{server_ip}} {{port}}"}
,
  {"command": "thunar", "description": "Graphical file manager for XFCE desktop environments.", "example": "thunar"}
,
  {"command": "tic", "description": "Compile terminfo and install for ncurses.", "example": "tic -xe {{terminal}} {{path/to/terminal.info}}"}
,
  {"command": "timedatectl", "description": "Control the system time and date.", "example": "timedatectl"}
,
  {"command": "timeshift", "description": "System restore utility.", "example": "sudo timeshift --list"}
,
  {"command": "tlp", "description": "Advanced power management for Linux.", "example": "sudo tlp start"}
,
  {"command": "tlp-stat", "description": "Generate TLP status reports.", "example": "sudo tlp-stat"}
,
  {"command": "tmt", "description": "Test Management Tool for creating, running, and debugging tests.", "example": "tmt"}
,
  {"command": "tmt-run", "description": "Execute tmt test steps. By default, all steps are run.", "example": "tmt run"}
,
  {"command": "tmt-try", "description": "Quickly experiment with tests and environments.", "example": "tmt try"}
,
  {"command": "tod", "description": "A tiny Todoist client in Rust.", "example": "tod project import"}
,
  {"command": "togglesebool", "description": "Flip the current (non-persistent) values of SELinux booleans.", "example": "sudo togglesebool {{virt_use_samba virt_use_usb ...}}"}
,
  {"command": "toilet", "description": "Display ASCII-art fonts.", "example": "toilet {{input_text}}"}
,
  {"command": "tomb", "description": "Manage encrypted storage directories that can be safely transported and hidden in a filesystem.", "example": "tomb dig -s {{100}} {{encrypted_directory.tomb}}"}
,
  {"command": "toolbox-create", "description": "Create a new `toolbox` container.", "example": "toolbox create {{[-d|--distro]}} {{distribution}}"}
,
  {"command": "toolbox-enter", "description": "Enter a `toolbox` container for interactive use.", "example": "toolbox enter {{[-d|--distro]}} {{distribution}}"}
,
  {"command": "toolbox-help", "description": "Display help information about `toolbox`.", "example": "toolbox help"}
,
  {"command": "toolbox-init-container", "description": "Initialize a running `toolbox` container.", "example": "toolbox init-container --gid {{gid}} --home {{home}} --home-link --media-link --mnt-link --monitor-host --shell {{shell}} --uid {{uid}} --user {{user}}"}
,
  {"command": "toolbox-list", "description": "List existing `toolbox` containers and images.", "example": "toolbox list"}
,
  {"command": "toolbox", "description": "Manage containerized command-line environments on Linux.", "example": "toolbox {{subcommand}}"}
,
  {"command": "toolbox-rmi", "description": "Remove `toolbox` images.", "example": "toolbox rmi {{image_name1 image_name2 ...}}"}
,
  {"command": "toolbox-rm", "description": "Remove one or more `toolbox` containers.", "example": "toolbox rm {{container_name}}"}
,
  {"command": "toolbox-run", "description": "Run a command in an existing `toolbox` container.", "example": "toolbox run {{[-c|--container]}} {{container_name}} {{command}}"}
,
  {"command": "top", "description": "Display dynamic real-time information about running processes.", "example": "top"}
,
  {"command": "torify", "description": "Route network traffic through the Tor network.", "example": "torify {{command}}"}
,
  {"command": "tor", "description": "Enable anonymous communication through the Tor network.", "example": "tor"}
,
  {"command": "torsocks", "description": "Route the traffic of any application through the Tor network.", "example": "torsocks {{command}}"}
,
  {"command": "trace-cmd", "description": "Utility to interact with the Ftrace Linux kernel internal tracer.", "example": "trace-cmd stat"}
,
  {"command": "tracepath", "description": "Trace the path to a network host discovering MTU along this path.", "example": "tracepath -p {{33434}} {{host}}"}
,
  {"command": "trap", "description": "Execute a command upon an event.", "example": "trap -l"}
,
  {"command": "trash-empty", "description": "This command has been moved to `trash`.", "example": "tldr trash"}
,
  {"command": "trash-list", "description": "This command has been moved to `trash`.", "example": "tldr trash"}
,
  {"command": "trash", "description": "Manage the trashcan/recycling bin.", "example": "trash {{path/to/file}}"}
,
  {"command": "trash-put", "description": "This command is an alias of `trash`.", "example": "tldr trash"}
,
  {"command": "trash-restore", "description": "This command has been moved to `trash`.", "example": "tldr trash"}
,
  {"command": "trash-rm", "description": "This command has been moved to `trash`.", "example": "tldr trash"}
,
  {"command": "trashy", "description": "An alternative to `rm` and `trash-cli` written in Rust.", "example": "trash {{path/to/file}}"}
,
  {"command": "trayer", "description": "A lightweight GTK-2 based systray.", "example": "trayer"}
,
  {"command": "treetime", "description": "TreeTime provides routines for ancestral sequence reconstruction and inference of molecular-clock phylogenies.", "example": "treetime ancestral"}
,
  {"command": "trizen", "description": "Arch Linux utility for building packages from the Arch User Repository (AUR).", "example": "trizen -Syua"}
,
  {"command": "trust", "description": "Operate on the trust policy store.", "example": "trust list"}
,
  {"command": "tshark", "description": "Packet analysis tool, CLI version of Wireshark.", "example": "tshark"}
,
  {"command": "ttyplot", "description": "A realtime plotting utility for the command-line with data input from `stdin`.", "example": "{ echo {{1 2 3}}; cat; } | ttyplot"}
,
  {"command": "tune2fs", "description": "Adjust parameters of an ext2, ext3 or ext4 filesystem.", "example": "tune2fs -c 2 {{/dev/sdXN}}"}
,
  {"command": "tuned-adm", "description": "Manage and optimize system performance tuning profiles on Linux.", "example": "tuned-adm list"}
,
  {"command": "tune.exfat", "description": "Adjust tunable filesystem parameters on an exFAT filesystem.", "example": "tune.exfat {{[-l|--print-label]}} {{/dev/sdXY}}"}
,
  {"command": "tunelp", "description": "Set various parameters for parallel port devices for troubleshooting or for better performance.", "example": "tunelp {{[-s|--status]}} {{/dev/lp0}}"}
,
  {"command": "turbostat", "description": "Report processor topology, frequency, temperature, power, and idle statistics.", "example": "sudo turbostat"}
,
  {"command": "tuxi", "description": "Scrape Google search results and SERPs and provide instant and concise answers.", "example": "tuxi {{search_terms}}"}
,
  {"command": "tzselect", "description": "Interactively select timezone.", "example": "tzselect"}
,
  {"command": "ubuntu-bug", "description": "This command is an alias of `apport-bug`.", "example": "tldr apport-bug"}
,
  {"command": "ubuntu-drivers", "description": "Install drivers on Ubuntu.", "example": "sudo ubuntu-drivers list"}
,
  {"command": "ubuntu-security-status", "description": "Display information about security support for installed Ubuntu packages.", "example": "ubuntu-security-status"}
,
  {"command": "ubus", "description": "Interact with an OpenWrt ubusd server.", "example": "ubus list"}
,
  {"command": "uci", "description": "Manage OpenWrt configuration files.", "example": "uci get {{network.lan.ipaddr}}"}
,
  {"command": "udevadm", "description": "Linux `udev` management tool.", "example": "sudo udevadm monitor"}
,
  {"command": "udevmon", "description": "Intercept and monitor input devices for launching tasks.", "example": "udevmon -c {{path/to/config.yaml}}"}
,
  {"command": "udisksctl", "description": "Interact with `udisksd` to query and manipulate storage devices.", "example": "udisksctl status"}
,
  {"command": "ufw", "description": "Uncomplicated Firewall.", "example": "ufw enable"}
,
  {"command": "uinput", "description": "Intercept and write input events to a virtual keyboard device using /dev/uinput.", "example": "uinput -p"}
,
  {"command": "ul", "description": "Underline a text.", "example": "ul {{file.txt}}"}
,
  {"command": "umount", "description": "Unlink a filesystem from its mount point, making it no longer accessible.", "example": "umount {{path/to/device_file}}"}
,
  {"command": "uname26", "description": "This command is an alias of `setarch uname26`.", "example": "tldr setarch"}
,
  {"command": "uncompress", "description": "Uncompress files compressed using the Unix `compress` command.", "example": "uncompress {{path/to/file1.Z path/to/file2.Z ...}}"}
,
  {"command": "unix2dos", "description": "Change Unix-style line endings to DOS-style.", "example": "unix2dos {{path/to/file}}"}
,
  {"command": "unix2mac", "description": "Change Unix-style line endings to macOS-style.", "example": "unix2mac {{path/to/file}}"}
,
  {"command": "unmount", "description": "The correct command is `umount` (u-mount).", "example": "tldr umount"}
,
  {"command": "unopkg", "description": "LibreOffice extensions manager.", "example": "unopkg add {{path/to/extension}}"}
,
  {"command": "unshadow", "description": "Utility provided by the John the Ripper project to obtain the traditional Unix password file if the system uses shadow passwords.", "example": "sudo unshadow /etc/passwd /etc/shadow"}
,
  {"command": "unshare", "description": "Execute a command in new user-defined namespaces.", "example": "unshare {{[-n|--net]}} {{command}} {{command_arguments}}"}
,
  {"command": "unsquashfs", "description": "Uncompress, extract and list files in squashfs filesystems.", "example": "unsquashfs {{filesystem.squashfs}}"}
,
  {"command": "unzipsfx", "description": "Create a self-extracting compressed binary file by prepending self-extracting stubs on a Zip file.", "example": "cat unzipsfx {{path/to/archive.zip}} > {{filename}} && chmod 755 {{filename}}"}
,
  {"command": "update-alternatives", "description": "Convenientily maintain symbolic links to determine default commands.", "example": "sudo update-alternatives --install {{path/to/symlink}} {{command_name}} {{path/to/command_binary}} {{priority}}"}
,
  {"command": "updatedb", "description": "Create or update the database used by `locate`.", "example": "sudo updatedb"}
,
  {"command": "update-rc.d", "description": "Install and remove services which are System-V style init script links.", "example": "update-rc.d {{mysql}} defaults"}
,
  {"command": "updpkgsums", "description": "Update the checksums of the sources in a `PKGBUILD`.", "example": "updpkgsums"}
,
  {"command": "upnpc", "description": "Configure port forwarding rules on your router via the UPnP protocol.", "example": "upnpc -a {{192.168.0.1}} 8080 80 tcp"}
,
  {"command": "upower", "description": "System utility to provide power and battery information and statistics.", "example": "upower {{[-d|--dump]}}"}
,
  {"command": "uprecords", "description": "Display a summary of historical uptime records.", "example": "uprecords"}
,
  {"command": "urpme", "description": "Uninstall packages in Mageia.", "example": "sudo urpme {{package}}"}
,
  {"command": "urpmf", "description": "Find files in packages and query information about them in Mageia.", "example": "urpmf {{filename}}"}
,
  {"command": "urpmi.addmedia", "description": "Add media in Mageia.", "example": "sudo urpmi.addmedia {{medium}} {{ftp://ftp.site.com/path/to/Mageia/RPMS}}"}
,
  {"command": "urpmi", "description": "Install packages in Mageia.", "example": "sudo urpmi {{package|path/to/file.rpm}}"}
,
  {"command": "urpmi.removemedia", "description": "Remove media in Mageia.", "example": "sudo urpmi.removemedia {{medium}}"}
,
  {"command": "urpmi.update", "description": "Update the list of packages from a package repository in Mageia.", "example": "urpmi.update -a"}
,
  {"command": "urpmq", "description": "Query information about packages and media in Mageia.", "example": "urpmq -i {{package}}"}
,
  {"command": "urxvt", "description": "Rxvt-unicode.", "example": "urxvt"}
,
  {"command": "usbip", "description": "Use USB devices remotely.", "example": "usbip list {{[-l|--local]}}"}
,
  {"command": "useradd", "description": "Create a new user.", "example": "sudo useradd {{username}}"}
,
  {"command": "userdbctl", "description": "Inspect users, groups and group memberships on the system.", "example": "userdbctl user"}
,
  {"command": "userdel", "description": "Remove a user account or remove a user from a group.", "example": "sudo userdel {{username}}"}
,
  {"command": "usermod", "description": "Modify a user account.", "example": "sudo usermod {{[-l|--login]}} {{new_username}} {{username}}"}
,
  {"command": "utmpdump", "description": "Dump and load btmp, utmp and wtmp accounting files.", "example": "utmpdump {{/var/log/wtmp}}"}
,
  {"command": "uuidd", "description": "Daemon for generating UUIDs.", "example": "uuidd {{[-r|--random]}}"}
,
  {"command": "uuidgen", "description": "Generate unique identifiers (UUIDs).", "example": "uuidgen {{[-r|--random]}}"}
,
  {"command": "uuid", "description": "Generate and decode Universally Unique Identifiers (UUID).", "example": "uuid"}
,
  {"command": "uuidparse", "description": "Parse universally unique identifiers.", "example": "uuidparse {{uuid1 uuid2 ...}}"}
,
  {"command": "uvcdynctrl", "description": "Manage dynamic controls in uvcvideo.", "example": "uvcdynctrl {{[-l|--list]}}"}
,
  {"command": "v4l2-ctl", "description": "Control video devices.", "example": "v4l2-ctl --list-devices"}
,
  {"command": "vcgencmd", "description": "Print system information for a Raspberry Pi.", "example": "vcgencmd commands"}
,
  {"command": "veracrypt", "description": "Free and open source disk encryption software.", "example": "veracrypt {{[-t|--text]}} {{[-c|--create]}} --random-source={{/dev/urandom}}"}
,
  {"command": "vgchange", "description": "Change the attributes of a Logical Volume Manager (LVM) volume group.", "example": "sudo vgchange --activate {{y|n}}"}
,
  {"command": "vgcreate", "description": "Create volume groups combining multiple mass-storage devices.", "example": "vgcreate {{vg1}} {{/dev/sda1}}"}
,
  {"command": "vgdisplay", "description": "Display information about Logical Volume Manager (LVM) volume groups.", "example": "sudo vgdisplay"}
,
  {"command": "vgextend", "description": "Add one or more physical volumes to an existing volume group.", "example": "vgextend {{vg1}} {{/dev/sda1}}"}
,
  {"command": "vgremove", "description": "Remove volume group(s) in LVM.", "example": "vgremove {{volume_group}}"}
,
  {"command": "vgscan", "description": "Scan for volume groups on all supported Logical Volume Manager (LVM) block devices.", "example": "sudo vgscan"}
,
  {"command": "vgs", "description": "Display information about volume groups.", "example": "vgs"}
,
  {"command": "viewnior", "description": "Simple and elegant image viewer.", "example": "viewnior {{path/to/image.ext}}"}
,
  {"command": "vigr", "description": "Edit the group file.", "example": "vigr"}
,
  {"command": "vipw", "description": "Edit the password file.", "example": "vipw"}
,
  {"command": "virt-manager", "description": "A desktop user interface for managing KVM and Xen virtual machines and LXC containers.", "example": "virt-manager"}
,
  {"command": "virt-viewer", "description": "Minimal graphical interface for a virtual machine (VM).", "example": "virt-viewer"}
,
  {"command": "virt-what", "description": "Shell script that detects if you are running in a virtual machine.", "example": "virt-what"}
,
  {"command": "virt-xml", "description": "Edit libvirt Domain XML files with explicit command-line options.", "example": "virt-xml --{{option}}=?"}
,
  {"command": "virt-xml-validate", "description": "Validate `libvirt` XML files against a schema.", "example": "virt-xml-validate {{path/to/file.xml}} {{schema}}"}
,
  {"command": "vivaldi-stable", "description": "This command is an alias of `chromium`.", "example": "tldr chromium"}
,
  {"command": "vkpurge", "description": "List or remove old kernel versions left behind by `xbps`.", "example": "vkpurge list {{version}}"}
,
  {"command": "vlock", "description": "Lock virtual console.", "example": "vlock"}
,
  {"command": "vmstat", "description": "Report information about processes, memory, paging, block IO, traps, disks and CPU activity.", "example": "vmstat"}
,
  {"command": "vmware-checkvm", "description": "Check if the current host is a VMware VM or not.", "example": "vmware-checkvm"}
,
  {"command": "vncserver", "description": "Launch a VNC (Virtual Network Computing) desktop.", "example": "vncserver"}
,
  {"command": "vncviewer", "description": "Launches a VNC (Virtual Network Computing) client.", "example": "vncviewer {{host}}:{{display_number}}"}
,
  {"command": "vnstati", "description": "PNG image output support for vnStat.", "example": "vnstati --summary --iface {{network_interface}} --output {{path/to/output.png}}"}
,
  {"command": "vnstat", "description": "A console-based network traffic monitor.", "example": "vnstat"}
,
  {"command": "vpnc", "description": "A VPN client for the Cisco 3000 VPN Concentrator.", "example": "sudo vpnc {{config_file}}"}
,
  {"command": "vrms", "description": "Report non-free packages installed on Debian-based OSes.", "example": "vrms"}
,
  {"command": "vso", "description": "Package manager, system updater and a task automator for Vanilla OS.", "example": "vso sys-upgrade check"}
,
  {"command": "vzdump", "description": "Backup Utility for virtual machines and containers.", "example": "vzdump {{vm_id}}"}
,
  {"command": "waitpid", "description": "Wait for the termination of arbitrary processes.", "example": "waitpid {{pid1 pid2 ...}}"}
,
  {"command": "wajig", "description": "Simplified all-in-one-place system support tool for Debian-based systems.", "example": "wajig update"}
,
  {"command": "wall", "description": "Write a message on the terminals of users currently logged in.", "example": "wall {{message}}"}
,
  {"command": "wal-telegram", "description": "Generate themes for Telegram based the colors generated by pywal/wal.", "example": "wal-telegram"}
,
  {"command": "wami", "description": "An open-source and easy-to-use tool that recommends suitable programs for tasks.", "example": "wami {{[-a|--show-all]}} {{[-S|--sort]}} {{asc|desc}} {{[-s|--search-all]}} {{search_string}}"}
,
  {"command": "warpd", "description": "A modal keyboard driven pointer manipulation program.", "example": "warpd --normal"}
,
  {"command": "waydroid", "description": "A container-based approach to boot a full Android system on a regular Linux system like Ubuntu.", "example": "waydroid"}
,
  {"command": "waypipe", "description": "Remotely run graphical applications under a Wayland compositor.", "example": "waypipe ssh {{user}}@{{server}} {{program}}"}
,
  {"command": "wdctl", "description": "Show the hardware watchdog status.", "example": "wdctl"}
,
  {"command": "wf-recorder", "description": "Screencast for Wayland optionally with audio.", "example": "wf-recorder {{[-f|--file]}} {{output.mp4}}"}
,
  {"command": "wg", "description": "Manage the configuration of WireGuard interfaces.", "example": "sudo wg"}
,
  {"command": "wg-quick", "description": "Quickly set up WireGuard tunnels based on config files.", "example": "wg-quick up {{interface_name}}"}
,
  {"command": "whatis", "description": "Display one-line descriptions from manual pages.", "example": "whatis {{command}}"}
,
  {"command": "whereis", "description": "Locate the binary, source, and manual page files for a command.", "example": "whereis {{ssh}}"}
,
  {"command": "whiptail", "description": "Display text-based dialog boxes from shell scripts.", "example": "whiptail --title \"{{title}}\" --msgbox \"{{message}}\" {{height_in_chars}} {{width_in_chars}}"}
,
  {"command": "wifi-menu", "description": "Interactively connect to a wireless network.", "example": "wifi-menu"}
,
  {"command": "wine", "description": "Run Windows executables on Unix-based systems.", "example": "wine {{command}}"}
,
  {"command": "winetricks", "description": "Manage Wine virtual Windows environments.", "example": "winetricks"}
,
  {"command": "wipefs", "description": "Wipe filesystem, raid, or partition-table signatures from a device.", "example": "sudo wipefs {{/dev/sdX}}"}
,
  {"command": "wireplumber", "description": "A modular session/policy manager for PipeWire and a GObject-based high-level library that wraps PipeWire’s API.", "example": "systemctl --user --now enable wireplumber"}
,
  {"command": "wl-copy", "description": "Clear and copy to Wayland clipboard.", "example": "wl-copy \"{{text}}\""}
,
  {"command": "wl-paste", "description": "Paste content in Wayland clipboard.", "example": "wl-paste"}
,
  {"command": "wmctrl", "description": "CLI for X Window Manager.", "example": "wmctrl -l"}
,
  {"command": "wodim", "description": "Command (aliased as `cdrecord` on some systems) for recording data to CDs or DVDs.", "example": "wodim --devices"}
,
  {"command": "woeusb", "description": "Windows media creation tool.", "example": "woeusb --device {{path/to/windows.iso}} {{/dev/sdX}}"}
,
  {"command": "wofi", "description": "An application launcher for wlroots-based Wayland compositors, similar to `rofi` and `dmenu`.", "example": "wofi {{[-S|--show]}} drun"}
,
  {"command": "wol", "description": "Client for sending Wake-on-LAN magic packets.", "example": "wol {{mac_address}}"}
,
  {"command": "wpa_cli", "description": "Add and configure wlan interfaces.", "example": "wpa_cli scan"}
,
  {"command": "wpa_passphrase", "description": "Generate a WPA-PSK key from an ASCII passphrase for a SSID.", "example": "wpa_passphrase {{SSID}}"}
,
  {"command": "wpctl", "description": "Manage WirePlumber, a session and policy manager for PipeWire.", "example": "wpctl status"}
,
  {"command": "wpexec", "description": "Run WirePlumber Lua scripts.", "example": "wpexec {{path/to/file.lua}}"}
,
  {"command": "write", "description": "Write a message on the terminal of a specified logged in user (`<Ctrl c>` to stop writing messages).", "example": "write {{username}} {{terminal_id}}"}
,
  {"command": "wtf", "description": "Show the expansions of acronyms.", "example": "wtf {{IMO}}"}
,
  {"command": "wtype", "description": "Simulate keyboard input on Wayland, similar to `xdotool type` for X11.", "example": "wtype \"{{Hello World}}\""}
,
  {"command": "x0vncserver", "description": "TigerVNC Server for X displays.", "example": "x0vncserver -display {{:0}} -passwordfile {{path/to/file}}"}
,
  {"command": "x11vnc", "description": "A VNC server that will enable VNC on an existing display server.", "example": "x11vnc -shared"}
,
  {"command": "x86_64", "description": "This command is an alias of `setarch x86_64`.", "example": "tldr setarch"}
,
  {"command": "xauth", "description": "Edit and display the authorization information used in connecting to the X server.", "example": "xauth -f {{path/to/file}}"}
,
  {"command": "xbacklight", "description": "Utility to adjust backlight brightness using the RandR extension.", "example": "xbacklight"}
,
  {"command": "xbps-install", "description": "XBPS utility to (re)install and update packages.", "example": "xbps-install {{package}}"}
,
  {"command": "xbps", "description": "The X Binary Package System is the package manager used by Void Linux.", "example": "tldr xbps-install"}
,
  {"command": "xbps-query", "description": "XBPS utility to query for package and repository information.", "example": "xbps-query {{[-s|--search]}} {{regular_expression|keyword}} --repository --regex"}
,
  {"command": "xbps-remove", "description": "XBPS utility to remove packages.", "example": "xbps-remove {{package}}"}
,
  {"command": "xclip", "description": "X11 clipboard manipulation tool, similar to `xsel`.", "example": "echo 123 | xclip"}
,
  {"command": "xclock", "description": "Display the time in analog or digital form.", "example": "xclock"}
,
  {"command": "xcowsay", "description": "Display a cute cow and message on your Linux desktop.", "example": "xcowsay \"{{hello, world}}\""}
,
  {"command": "xcursorgen", "description": "Create an X cursor file from a collection of PNGs.", "example": "xcursorgen {{path/to/config.cursor}} {{path/to/output_file}}"}
,
  {"command": "xdg-desktop-menu", "description": "Install or uninstall desktop menu items.", "example": "xdg-desktop-menu install {{path/to/file.desktop}}"}
,
  {"command": "xdg-mime", "description": "Query and manage MIME types according to the XDG standard.", "example": "xdg-mime query filetype {{path/to/file}}"}
,
  {"command": "xdg-open", "description": "Open a file or URL in the user's preferred application.", "example": "xdg-open ."}
,
  {"command": "xdg-settings", "description": "Manage settings of XDG-compatible desktop environments.", "example": "xdg-settings get {{default-web-browser}}"}
,
  {"command": "xdg-user-dir", "description": "Retrieve XDG user directory locations.", "example": "xdg-user-dir"}
,
  {"command": "xdg-user-dirs-update", "description": "Update XDG user directories.", "example": "xdg-user-dirs-update --set DESKTOP \"{{path/to/directory}}\""}
,
  {"command": "xdotool", "description": "Automate X11 actions.", "example": "xdotool search --onlyvisible --name {{firefox}}"}
,
  {"command": "xed", "description": "Edit files in Cinnamon desktop environment.", "example": "xed"}
,
  {"command": "xeyes", "description": "Display eyes on the screen that follow the mouse cursor.", "example": "xeyes"}
,
  {"command": "xfce4-screenshooter", "description": "The XFCE4 screenshot tool.", "example": "xfce4-screenshooter"}
,
  {"command": "xfce4-terminal", "description": "The XFCE4 terminal emulator.", "example": "xfce4-terminal"}
,
  {"command": "xfreerdp", "description": "Free Remote Desktop Protocol implementation.", "example": "xfreerdp /u:{{username}} /p:{{password}} /v:{{ip_address}}"}
,
  {"command": "xfs_repair", "description": "Repair an XFS filesystem.", "example": "sudo xfs_repair {{path/to/partition}}"}
,
  {"command": "xhost", "description": "Manage access control lists for X server connections.", "example": "xhost"}
,
  {"command": "xinput", "description": "List available input devices, query information about a device and change input device settings.", "example": "xinput list"}
,
  {"command": "xman", "description": "Manual page viewer for X Window System.", "example": "xman"}
,
  {"command": "xmodmap", "description": "Utility for modifying keymaps and pointer button mappings in X.", "example": "xmodmap -e 'pointer = 3 2 1'"}
,
  {"command": "xmount", "description": "Convert on-the-fly between multiple input and output hard disk image types with optional write cache support.", "example": "xmount --in {{raw}} {{path/to/image.dd}} --out {{dmg}} {{mountpoint}}"}
,
  {"command": "xrandr", "description": "Set the size, orientation and/or reflection of the outputs for a screen.", "example": "xrandr {{[-q|--query]}}"}
,
  {"command": "xrdb", "description": "X window server's resource database utility for Unix-like systems.", "example": "xrdb"}
,
  {"command": "xsel", "description": "X11 selection and clipboard manipulation tool.", "example": "echo 123 | xsel {{[-ib|--input --clipboard]}}"}
,
  {"command": "xset", "description": "User preference utility for X.", "example": "xset s off"}
,
  {"command": "xsetwacom", "description": "Change settings for Wacom pen tablets at runtime.", "example": "xsetwacom list"}
,
  {"command": "xterm", "description": "A terminal emulator for the X Window System.", "example": "xterm -T {{Example}}"}
,
  {"command": "xtrlock", "description": "Lock the X display until the user supplies their password.", "example": "xtrlock"}
,
  {"command": "xvfb-run", "description": "Run a command in a virtual X server environment.", "example": "xvfb-run {{command}}"}
,
  {"command": "xwinwrap", "description": "Run a player or a program as desktop background.", "example": "xwinwrap -b -nf -ov -- {{mpv}} --wid {{wid}} --loop --no-audio --no-resume-playback --panscan={{1.0}} {{path/to/video.mp4}}"}
,
  {"command": "xxhsum", "description": "Print or verify checksums using fast non-cryptographic algorithm xxHash.", "example": "xxhsum -H{{0|32|64|128}} {{path/to/file}}"}
,
  {"command": "yakuake", "description": "A drop-down terminal for KDE.", "example": "yakuake"}
,
  {"command": "yaourt", "description": "Arch Linux utility for building packages from the Arch User Repository.", "example": "yaourt -Syua"}
,
  {"command": "yay", "description": "Yet Another Yogurt: build and install packages from the Arch User Repository.", "example": "yay {{package_name|search_term}}"}
,
  {"command": "ydotool", "description": "Control keyboard and mouse inputs via commands in a way that is display server agnostic.", "example": "ydotoold"}
,
  {"command": "yetris", "description": "Clone of the game Tetris in the terminal.", "example": "yetris"}
,
  {"command": "yplan", "description": "Generate LaTeX code for a two-page vertical daily planner for any chosen year.", "example": "yplan {{language}} {{lettercase}} {{year}} > {{path/to/file.tex}}"}
,
  {"command": "ytfzf", "description": "Find and download videos and music. Written in POSIX shell.", "example": "ytfzf --show-thumbnails {{search_pattern}}"}
,
  {"command": "yum-config-manager", "description": "This command is an alias of `dnf config-manager`.", "example": "tldr dnf config-manager"}
,
  {"command": "yum", "description": "Package management utility for RHEL, Fedora, and CentOS (for older versions).", "example": "yum install {{package}}"}
,
  {"command": "zathura", "description": "A vim-like modal document viewer, with an integrated command-line.", "example": "zathura {{path/to/file}}"}
,
  {"command": "zbarcam", "description": "Scan and decode barcodes (and QR codes) from a video device.", "example": "zbarcam"}
,
  {"command": "zdump", "description": "Print timezone information.", "example": "zdump {{timezone}}"}
,
  {"command": "zenity", "description": "Display dialogs from the command-line/shell scripts.", "example": "zenity --question"}
,
  {"command": "zforce", "description": "Add a `.gz` extension to files compressed using `gzip`.", "example": "zforce {{path/to/file1 path/to/file2 ...}}"}
,
  {"command": "zic", "description": "Compile timezones into binary files.", "example": "zic -d {{path/to/directory}}"}
,
  {"command": "zile", "description": "A lightweight clone of the Emacs text editor.", "example": "zile"}
,
  {"command": "zipsplit", "description": "Split a Zip archive into smaller Zip archives.", "example": "zipsplit {{path/to/archive.zip}}"}
,
  {"command": "znc", "description": "IRC bouncer.", "example": "znc {{[-c|--makeconf]}}"}
,
  {"command": "zramctl", "description": "Setup and control zram devices.", "example": "lsmod | grep {{[-i|--ignore-case]}} zram"}
,
  {"command": "zsync", "description": "Partial/differential file downloader.", "example": "zsync {{path/to/url.zsync}}"}
,
  {"command": "zypper", "description": "SUSE & openSUSE package management utility.", "example": "zypper refresh"}
]
